drop database if exists multi_field_query_optimize_25617;
create database multi_field_query_optimize_25617;
drop database multi_field_query_optimize_25617;
create database multi_field_query_optimize_25617;
use multi_field_query_optimize_25617;
set session optimizer_switch='mrr=on,mrr_cost_based=off';
set session sequoiadb_debug_log=on;
drop table if exists t1,t2;
create table t1(a int,b int,key union_ab1(a,b));
insert into t1 values(1,1),(1,2),(2,3),(2,1),(1,3),(2,3);
explain select * from t1 where (a,b) in((1,2),(2,3));
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab1	union_ab1	10	NULL	4	100.00	Using where; Using MRR; Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25617`.`t1`.`a` AS `a`,`multi_field_query_optimize_25617`.`t1`.`b` AS `b` from `multi_field_query_optimize_25617`.`t1` where ((`multi_field_query_optimize_25617`.`t1`.`a`,`multi_field_query_optimize_25617`.`t1`.`b`) in (<cache>((1,2)),<cache>((2,3))))
select * from t1 where (a,b) in((1,2),(2,3));
a	b
1	2
2	3
2	3
[Note] SequoiaDB: Query message: condition[{}], selector[{ "a": null, "b": null }], order_by[{ "a": 1, "b": 1 }], hint[{ "$Range": { "IsAllEqual": true, "PrefixNum": 2, "IndexValue": [ { "1": 1, "2": 2 }, { "1": 2, "2": 3 } ] }, "": "union_ab1" }], limit[-1], offset[0], table[multi_field_query_optimize_25617.t1]
drop table t1;
set session optimizer_switch=default;
set session sequoiadb_debug_log=off;
drop database multi_field_query_optimize_25617;

drop database if exists multi_field_query_optimize_25623;
create database multi_field_query_optimize_25623;
drop database multi_field_query_optimize_25623;
create database multi_field_query_optimize_25623;
use multi_field_query_optimize_25623;
set session optimizer_switch='mrr=on,mrr_cost_based=on,block_nested_loop=on,batched_key_access=on';
set session sequoiadb_debug_log=on;
create table t1(a int,b int);
create table t2(a int,b int,key union_ab4(a,b));
insert into t1 values(1,1),(2,2),(3,3),(4,4),(5,5),(1,12),(6,3),(10,2),(10,10),(11,3),(11,5);
insert into t2 values(1,1),(2,2),(3,3),(4,4),(5,5),(1,12),(6,3),(10,2),(10,10),(11,3),(11,5);
explain select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and t1.a>=1 and t1.a<=10 and t1.b in(1,2,3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	11	9.09	Using where with pushed condition ((`multi_field_query_optimize_25623`.`t1`.`a` >= 1) and (`multi_field_query_optimize_25623`.`t1`.`a` <= 10) and (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)) and (`multi_field_query_optimize_25623`.`t1`.`a` is not null) and (`multi_field_query_optimize_25623`.`t1`.`b` is not null))
1	SIMPLE	t2	NULL	ref	union_ab4	union_ab4	10	multi_field_query_optimize_25623.t1.a,multi_field_query_optimize_25623.t1.b	2	100.00	Using index; Using join buffer (Batched Key Access)
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25623`.`t1`.`a` AS `a`,`multi_field_query_optimize_25623`.`t1`.`b` AS `b`,`multi_field_query_optimize_25623`.`t2`.`a` AS `a`,`multi_field_query_optimize_25623`.`t2`.`b` AS `b` from `multi_field_query_optimize_25623`.`t1` join `multi_field_query_optimize_25623`.`t2` where ((`multi_field_query_optimize_25623`.`t2`.`b` = `multi_field_query_optimize_25623`.`t1`.`b`) and (`multi_field_query_optimize_25623`.`t2`.`a` = `multi_field_query_optimize_25623`.`t1`.`a`) and (`multi_field_query_optimize_25623`.`t1`.`a` >= 1) and (`multi_field_query_optimize_25623`.`t1`.`a` <= 10) and (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)))
select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and t1.a>=1 and t1.a<=10 and t1.b in(1,2,3);
a	b	a	b
1	1	1	1
10	2	10	2
2	2	2	2
3	3	3	3
6	3	6	3
[Note] SequoiaDB: Query message: condition[{}], selector[{ "a": null, "b": null }], order_by[{ "a": 1, "b": 1 }], hint[{ "$Range": { "IsAllEqual": true, "PrefixNum": 2, "IndexValue": [ { "1": 1, "2": 1 }, { "1": 2, "2": 2 }, { "1": 3, "2": 3 }, { "1": 6, "2": 3 }, { "1": 10, "2": 2 } ] }, "": "union_ab4" }], limit[-1], offset[0], table[multi_field_query_optimize_25623.t2]
explain select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and t1.a>1 and t1.a<=10 and t1.b in(1,2,3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	11	9.09	Using where with pushed condition ((`multi_field_query_optimize_25623`.`t1`.`a` > 1) and (`multi_field_query_optimize_25623`.`t1`.`a` <= 10) and (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)) and (`multi_field_query_optimize_25623`.`t1`.`a` is not null) and (`multi_field_query_optimize_25623`.`t1`.`b` is not null))
1	SIMPLE	t2	NULL	ref	union_ab4	union_ab4	10	multi_field_query_optimize_25623.t1.a,multi_field_query_optimize_25623.t1.b	2	100.00	Using index; Using join buffer (Batched Key Access)
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25623`.`t1`.`a` AS `a`,`multi_field_query_optimize_25623`.`t1`.`b` AS `b`,`multi_field_query_optimize_25623`.`t2`.`a` AS `a`,`multi_field_query_optimize_25623`.`t2`.`b` AS `b` from `multi_field_query_optimize_25623`.`t1` join `multi_field_query_optimize_25623`.`t2` where ((`multi_field_query_optimize_25623`.`t2`.`b` = `multi_field_query_optimize_25623`.`t1`.`b`) and (`multi_field_query_optimize_25623`.`t2`.`a` = `multi_field_query_optimize_25623`.`t1`.`a`) and (`multi_field_query_optimize_25623`.`t1`.`a` > 1) and (`multi_field_query_optimize_25623`.`t1`.`a` <= 10) and (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)))
select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and t1.a>1 and t1.a<=10 and t1.b in(1,2,3);
a	b	a	b
10	2	10	2
2	2	2	2
3	3	3	3
6	3	6	3
[Note] SequoiaDB: Query message: condition[{}], selector[{ "a": null, "b": null }], order_by[{ "a": 1, "b": 1 }], hint[{ "$Range": { "IsAllEqual": true, "PrefixNum": 2, "IndexValue": [ { "1": 2, "2": 2 }, { "1": 3, "2": 3 }, { "1": 6, "2": 3 }, { "1": 10, "2": 2 } ] }, "": "union_ab4" }], limit[-1], offset[0], table[multi_field_query_optimize_25623.t2]
explain select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and t1.a>=1 and t1.a<10 and t1.b in(1,2,3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	11	9.09	Using where with pushed condition ((`multi_field_query_optimize_25623`.`t1`.`a` >= 1) and (`multi_field_query_optimize_25623`.`t1`.`a` < 10) and (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)) and (`multi_field_query_optimize_25623`.`t1`.`a` is not null) and (`multi_field_query_optimize_25623`.`t1`.`b` is not null))
1	SIMPLE	t2	NULL	ref	union_ab4	union_ab4	10	multi_field_query_optimize_25623.t1.a,multi_field_query_optimize_25623.t1.b	2	100.00	Using index; Using join buffer (Batched Key Access)
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25623`.`t1`.`a` AS `a`,`multi_field_query_optimize_25623`.`t1`.`b` AS `b`,`multi_field_query_optimize_25623`.`t2`.`a` AS `a`,`multi_field_query_optimize_25623`.`t2`.`b` AS `b` from `multi_field_query_optimize_25623`.`t1` join `multi_field_query_optimize_25623`.`t2` where ((`multi_field_query_optimize_25623`.`t2`.`b` = `multi_field_query_optimize_25623`.`t1`.`b`) and (`multi_field_query_optimize_25623`.`t2`.`a` = `multi_field_query_optimize_25623`.`t1`.`a`) and (`multi_field_query_optimize_25623`.`t1`.`a` >= 1) and (`multi_field_query_optimize_25623`.`t1`.`a` < 10) and (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)))
select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and t1.a>=1 and t1.a<10 and t1.b in(1,2,3);
a	b	a	b
1	1	1	1
2	2	2	2
3	3	3	3
6	3	6	3
[Note] SequoiaDB: Query message: condition[{}], selector[{ "a": null, "b": null }], order_by[{ "a": 1, "b": 1 }], hint[{ "$Range": { "IsAllEqual": true, "PrefixNum": 2, "IndexValue": [ { "1": 1, "2": 1 }, { "1": 2, "2": 2 }, { "1": 3, "2": 3 }, { "1": 6, "2": 3 } ] }, "": "union_ab4" }], limit[-1], offset[0], table[multi_field_query_optimize_25623.t2]
explain select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and t1.a>1 and t1.a<10 and t1.b in(1,2,3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	11	9.09	Using where with pushed condition ((`multi_field_query_optimize_25623`.`t1`.`a` > 1) and (`multi_field_query_optimize_25623`.`t1`.`a` < 10) and (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)) and (`multi_field_query_optimize_25623`.`t1`.`a` is not null) and (`multi_field_query_optimize_25623`.`t1`.`b` is not null))
1	SIMPLE	t2	NULL	ref	union_ab4	union_ab4	10	multi_field_query_optimize_25623.t1.a,multi_field_query_optimize_25623.t1.b	2	100.00	Using index; Using join buffer (Batched Key Access)
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25623`.`t1`.`a` AS `a`,`multi_field_query_optimize_25623`.`t1`.`b` AS `b`,`multi_field_query_optimize_25623`.`t2`.`a` AS `a`,`multi_field_query_optimize_25623`.`t2`.`b` AS `b` from `multi_field_query_optimize_25623`.`t1` join `multi_field_query_optimize_25623`.`t2` where ((`multi_field_query_optimize_25623`.`t2`.`b` = `multi_field_query_optimize_25623`.`t1`.`b`) and (`multi_field_query_optimize_25623`.`t2`.`a` = `multi_field_query_optimize_25623`.`t1`.`a`) and (`multi_field_query_optimize_25623`.`t1`.`a` > 1) and (`multi_field_query_optimize_25623`.`t1`.`a` < 10) and (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)))
select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and t1.a>1 and t1.a<10 and t1.b in(1,2,3);
a	b	a	b
2	2	2	2
3	3	3	3
6	3	6	3
[Note] SequoiaDB: Query message: condition[{}], selector[{ "a": null, "b": null }], order_by[{ "a": 1, "b": 1 }], hint[{ "$Range": { "IsAllEqual": true, "PrefixNum": 2, "IndexValue": [ { "1": 2, "2": 2 }, { "1": 3, "2": 3 }, { "1": 6, "2": 3 } ] }, "": "union_ab4" }], limit[-1], offset[0], table[multi_field_query_optimize_25623.t2]
explain select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and (t1.a>=1 and t1.a<=10) or t1.b in(1,2,3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	11	37.78	Using where with pushed condition (((`multi_field_query_optimize_25623`.`t1`.`a` >= 1) and (`multi_field_query_optimize_25623`.`t1`.`a` <= 10)) or (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)))
1	SIMPLE	t2	NULL	index	union_ab4	union_ab4	10	NULL	11	100.00	Using where; Using index; Using join buffer (Block Nested Loop)
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25623`.`t1`.`a` AS `a`,`multi_field_query_optimize_25623`.`t1`.`b` AS `b`,`multi_field_query_optimize_25623`.`t2`.`a` AS `a`,`multi_field_query_optimize_25623`.`t2`.`b` AS `b` from `multi_field_query_optimize_25623`.`t1` join `multi_field_query_optimize_25623`.`t2` where (((`multi_field_query_optimize_25623`.`t2`.`b` = `multi_field_query_optimize_25623`.`t1`.`b`) and (`multi_field_query_optimize_25623`.`t2`.`a` = `multi_field_query_optimize_25623`.`t1`.`a`) and (`multi_field_query_optimize_25623`.`t1`.`a` >= 1) and (`multi_field_query_optimize_25623`.`t1`.`a` <= 10)) or (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)))
select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and (t1.a>=1 and t1.a<=10) or t1.b in(1,2,3);
a	b	a	b
1	1	1	1
1	1	1	12
1	1	10	10
1	1	10	2
1	1	11	3
1	1	11	5
1	1	2	2
1	1	3	3
1	1	4	4
1	1	5	5
1	1	6	3
1	12	1	12
10	10	10	10
10	2	1	1
10	2	1	12
10	2	10	10
10	2	10	2
10	2	11	3
10	2	11	5
10	2	2	2
10	2	3	3
10	2	4	4
10	2	5	5
10	2	6	3
11	3	1	1
11	3	1	12
11	3	10	10
11	3	10	2
11	3	11	3
11	3	11	5
11	3	2	2
11	3	3	3
11	3	4	4
11	3	5	5
11	3	6	3
2	2	1	1
2	2	1	12
2	2	10	10
2	2	10	2
2	2	11	3
2	2	11	5
2	2	2	2
2	2	3	3
2	2	4	4
2	2	5	5
2	2	6	3
3	3	1	1
3	3	1	12
3	3	10	10
3	3	10	2
3	3	11	3
3	3	11	5
3	3	2	2
3	3	3	3
3	3	4	4
3	3	5	5
3	3	6	3
4	4	4	4
5	5	5	5
6	3	1	1
6	3	1	12
6	3	10	10
6	3	10	2
6	3	11	3
6	3	11	5
6	3	2	2
6	3	3	3
6	3	4	4
6	3	5	5
6	3	6	3
[Note] SequoiaDB: Query message: condition[{}], selector[{ "a": null, "b": null }], order_by[{ "a": 1, "b": 1 }], hint[{ "": "union_ab4" }], limit[-1], offset[0], table[multi_field_query_optimize_25623.t2]
explain select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and (t1.a>1 and t1.a<=10) or t1.b in(1,2,3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	11	37.78	Using where with pushed condition (((`multi_field_query_optimize_25623`.`t1`.`a` > 1) and (`multi_field_query_optimize_25623`.`t1`.`a` <= 10)) or (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)))
1	SIMPLE	t2	NULL	index	union_ab4	union_ab4	10	NULL	11	100.00	Using where; Using index; Using join buffer (Block Nested Loop)
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25623`.`t1`.`a` AS `a`,`multi_field_query_optimize_25623`.`t1`.`b` AS `b`,`multi_field_query_optimize_25623`.`t2`.`a` AS `a`,`multi_field_query_optimize_25623`.`t2`.`b` AS `b` from `multi_field_query_optimize_25623`.`t1` join `multi_field_query_optimize_25623`.`t2` where (((`multi_field_query_optimize_25623`.`t2`.`b` = `multi_field_query_optimize_25623`.`t1`.`b`) and (`multi_field_query_optimize_25623`.`t2`.`a` = `multi_field_query_optimize_25623`.`t1`.`a`) and (`multi_field_query_optimize_25623`.`t1`.`a` > 1) and (`multi_field_query_optimize_25623`.`t1`.`a` <= 10)) or (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)))
select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and (t1.a>1 and t1.a<=10) or t1.b in(1,2,3);
a	b	a	b
1	1	1	1
1	1	1	12
1	1	10	10
1	1	10	2
1	1	11	3
1	1	11	5
1	1	2	2
1	1	3	3
1	1	4	4
1	1	5	5
1	1	6	3
10	10	10	10
10	2	1	1
10	2	1	12
10	2	10	10
10	2	10	2
10	2	11	3
10	2	11	5
10	2	2	2
10	2	3	3
10	2	4	4
10	2	5	5
10	2	6	3
11	3	1	1
11	3	1	12
11	3	10	10
11	3	10	2
11	3	11	3
11	3	11	5
11	3	2	2
11	3	3	3
11	3	4	4
11	3	5	5
11	3	6	3
2	2	1	1
2	2	1	12
2	2	10	10
2	2	10	2
2	2	11	3
2	2	11	5
2	2	2	2
2	2	3	3
2	2	4	4
2	2	5	5
2	2	6	3
3	3	1	1
3	3	1	12
3	3	10	10
3	3	10	2
3	3	11	3
3	3	11	5
3	3	2	2
3	3	3	3
3	3	4	4
3	3	5	5
3	3	6	3
4	4	4	4
5	5	5	5
6	3	1	1
6	3	1	12
6	3	10	10
6	3	10	2
6	3	11	3
6	3	11	5
6	3	2	2
6	3	3	3
6	3	4	4
6	3	5	5
6	3	6	3
[Note] SequoiaDB: Query message: condition[{}], selector[{ "a": null, "b": null }], order_by[{ "a": 1, "b": 1 }], hint[{ "": "union_ab4" }], limit[-1], offset[0], table[multi_field_query_optimize_25623.t2]
explain select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and (t1.a>=1 and t1.a<10) or t1.b in(1,2,3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	11	37.78	Using where with pushed condition (((`multi_field_query_optimize_25623`.`t1`.`a` >= 1) and (`multi_field_query_optimize_25623`.`t1`.`a` < 10)) or (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)))
1	SIMPLE	t2	NULL	index	union_ab4	union_ab4	10	NULL	11	100.00	Using where; Using index; Using join buffer (Block Nested Loop)
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25623`.`t1`.`a` AS `a`,`multi_field_query_optimize_25623`.`t1`.`b` AS `b`,`multi_field_query_optimize_25623`.`t2`.`a` AS `a`,`multi_field_query_optimize_25623`.`t2`.`b` AS `b` from `multi_field_query_optimize_25623`.`t1` join `multi_field_query_optimize_25623`.`t2` where (((`multi_field_query_optimize_25623`.`t2`.`b` = `multi_field_query_optimize_25623`.`t1`.`b`) and (`multi_field_query_optimize_25623`.`t2`.`a` = `multi_field_query_optimize_25623`.`t1`.`a`) and (`multi_field_query_optimize_25623`.`t1`.`a` >= 1) and (`multi_field_query_optimize_25623`.`t1`.`a` < 10)) or (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)))
select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and (t1.a>=1 and t1.a<10) or t1.b in(1,2,3);
a	b	a	b
1	1	1	1
1	1	1	12
1	1	10	10
1	1	10	2
1	1	11	3
1	1	11	5
1	1	2	2
1	1	3	3
1	1	4	4
1	1	5	5
1	1	6	3
1	12	1	12
10	2	1	1
10	2	1	12
10	2	10	10
10	2	10	2
10	2	11	3
10	2	11	5
10	2	2	2
10	2	3	3
10	2	4	4
10	2	5	5
10	2	6	3
11	3	1	1
11	3	1	12
11	3	10	10
11	3	10	2
11	3	11	3
11	3	11	5
11	3	2	2
11	3	3	3
11	3	4	4
11	3	5	5
11	3	6	3
2	2	1	1
2	2	1	12
2	2	10	10
2	2	10	2
2	2	11	3
2	2	11	5
2	2	2	2
2	2	3	3
2	2	4	4
2	2	5	5
2	2	6	3
3	3	1	1
3	3	1	12
3	3	10	10
3	3	10	2
3	3	11	3
3	3	11	5
3	3	2	2
3	3	3	3
3	3	4	4
3	3	5	5
3	3	6	3
4	4	4	4
5	5	5	5
6	3	1	1
6	3	1	12
6	3	10	10
6	3	10	2
6	3	11	3
6	3	11	5
6	3	2	2
6	3	3	3
6	3	4	4
6	3	5	5
6	3	6	3
[Note] SequoiaDB: Query message: condition[{}], selector[{ "a": null, "b": null }], order_by[{ "a": 1, "b": 1 }], hint[{ "": "union_ab4" }], limit[-1], offset[0], table[multi_field_query_optimize_25623.t2]
explain select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and (t1.a>1 and t1.a<10) or t1.b in(1,2,3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	11	37.78	Using where with pushed condition (((`multi_field_query_optimize_25623`.`t1`.`a` > 1) and (`multi_field_query_optimize_25623`.`t1`.`a` < 10)) or (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)))
1	SIMPLE	t2	NULL	index	union_ab4	union_ab4	10	NULL	11	100.00	Using where; Using index; Using join buffer (Block Nested Loop)
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25623`.`t1`.`a` AS `a`,`multi_field_query_optimize_25623`.`t1`.`b` AS `b`,`multi_field_query_optimize_25623`.`t2`.`a` AS `a`,`multi_field_query_optimize_25623`.`t2`.`b` AS `b` from `multi_field_query_optimize_25623`.`t1` join `multi_field_query_optimize_25623`.`t2` where (((`multi_field_query_optimize_25623`.`t2`.`b` = `multi_field_query_optimize_25623`.`t1`.`b`) and (`multi_field_query_optimize_25623`.`t2`.`a` = `multi_field_query_optimize_25623`.`t1`.`a`) and (`multi_field_query_optimize_25623`.`t1`.`a` > 1) and (`multi_field_query_optimize_25623`.`t1`.`a` < 10)) or (`multi_field_query_optimize_25623`.`t1`.`b` in (1,2,3)))
select * from t1,t2 where t1.a = t2.a and t1.b = t2.b and (t1.a>1 and t1.a<10) or t1.b in(1,2,3);
a	b	a	b
1	1	1	1
1	1	1	12
1	1	10	10
1	1	10	2
1	1	11	3
1	1	11	5
1	1	2	2
1	1	3	3
1	1	4	4
1	1	5	5
1	1	6	3
10	2	1	1
10	2	1	12
10	2	10	10
10	2	10	2
10	2	11	3
10	2	11	5
10	2	2	2
10	2	3	3
10	2	4	4
10	2	5	5
10	2	6	3
11	3	1	1
11	3	1	12
11	3	10	10
11	3	10	2
11	3	11	3
11	3	11	5
11	3	2	2
11	3	3	3
11	3	4	4
11	3	5	5
11	3	6	3
2	2	1	1
2	2	1	12
2	2	10	10
2	2	10	2
2	2	11	3
2	2	11	5
2	2	2	2
2	2	3	3
2	2	4	4
2	2	5	5
2	2	6	3
3	3	1	1
3	3	1	12
3	3	10	10
3	3	10	2
3	3	11	3
3	3	11	5
3	3	2	2
3	3	3	3
3	3	4	4
3	3	5	5
3	3	6	3
4	4	4	4
5	5	5	5
6	3	1	1
6	3	1	12
6	3	10	10
6	3	10	2
6	3	11	3
6	3	11	5
6	3	2	2
6	3	3	3
6	3	4	4
6	3	5	5
6	3	6	3
[Note] SequoiaDB: Query message: condition[{}], selector[{ "a": null, "b": null }], order_by[{ "a": 1, "b": 1 }], hint[{ "": "union_ab4" }], limit[-1], offset[0], table[multi_field_query_optimize_25623.t2]
drop table t1,t2;
set session optimizer_switch=default;
set session sequoiadb_debug_log=off;
drop database multi_field_query_optimize_25623;

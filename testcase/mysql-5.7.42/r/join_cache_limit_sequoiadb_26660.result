drop database if exists join_cache_limit_sequoiadb_26660;
create database join_cache_limit_sequoiadb_26660;
drop database join_cache_limit_sequoiadb_26660;
create database join_cache_limit_sequoiadb_26660;
use join_cache_limit_sequoiadb_26660;
set session optimizer_switch='mrr=on,mrr_cost_based=off,block_nested_loop=on,batched_key_access=on';
set session sequoiadb_debug_log=on;
set session join_buffer_size=128;
drop table if exists t1,t2,t3;
create table t1(col1 int,col2 int);
create table t2(col1 int,col2 int,key(col1));
create table t3(col1 int,col2 int,key(col1));
insert into t1 values(1,2),(2,3),(3,4),(4,5),(5,6),(6,7),(7,8),(8,9),(9,10),(10,11),(11,12),(12,13),(13,14),(14,15),(15,16),(16,17),(17,18);
insert into t2 values(1,2),(2,3),(3,4),(4,5),(5,6),(6,7),(7,8),(8,9),(9,10),(10,11),(11,12),(12,13),(13,14),(14,15),(15,16),(16,17),(17,18);
insert into t3 values(1,2),(2,3),(3,4),(4,5),(5,6),(6,7),(7,8),(8,9),(9,10),(10,11),(11,12),(12,13),(13,14),(14,15),(15,16),(16,17),(17,18);
explain select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1 limit 20,10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	17	100.00	Using temporary; Using filesort
1	SIMPLE	t3	NULL	ref	col1	col1	5	join_cache_limit_sequoiadb_26660.t1.col1	2	100.00	Using join buffer (Batched Key Access)
1	SIMPLE	t2	NULL	ref	col1	col1	5	join_cache_limit_sequoiadb_26660.t1.col1	2	100.00	Using index; Using join buffer (Batched Key Access)
Warnings:
Note	1003	/* select#1 */ select `join_cache_limit_sequoiadb_26660`.`t1`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` AS `col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` AS `col2` from `join_cache_limit_sequoiadb_26660`.`t1` left join (`join_cache_limit_sequoiadb_26660`.`t2` join `join_cache_limit_sequoiadb_26660`.`t3`) on(((`join_cache_limit_sequoiadb_26660`.`t3`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`) and (`join_cache_limit_sequoiadb_26660`.`t2`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`))) where 1 order by `join_cache_limit_sequoiadb_26660`.`t1`.`col1` limit 20,10
select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1 limit 20,10;
col1	col2	col1	col2
[Note] Testcase: Operation log begin
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t1]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 2, 3, 4 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 2, 3, 4 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 5, 6, 7, 8 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 5, 6, 7, 8 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 9, 10, 11, 12 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 9, 10, 11, 12 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 13, 14, 15, 16 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 13, 14, 15, 16 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 17 } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 17 } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
alter table t3 drop index col1;
explain select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1 limit 20,10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	17	100.00	Using temporary; Using filesort
1	SIMPLE	t2	NULL	ref	col1	col1	5	join_cache_limit_sequoiadb_26660.t1.col1	2	100.00	Using index; Using join buffer (Batched Key Access)
1	SIMPLE	t3	NULL	ALL	NULL	NULL	NULL	NULL	17	100.00	Using where; Using join buffer (Block Nested Loop)
Warnings:
Note	1003	/* select#1 */ select `join_cache_limit_sequoiadb_26660`.`t1`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` AS `col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` AS `col2` from `join_cache_limit_sequoiadb_26660`.`t1` left join (`join_cache_limit_sequoiadb_26660`.`t2` join `join_cache_limit_sequoiadb_26660`.`t3`) on(((`join_cache_limit_sequoiadb_26660`.`t2`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`) and (`join_cache_limit_sequoiadb_26660`.`t3`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`))) where 1 order by `join_cache_limit_sequoiadb_26660`.`t1`.`col1` limit 20,10
select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1 limit 20,10;
col1	col2	col1	col2
[Note] Testcase: Operation log begin
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t1]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 2, 3, 4 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 5, 6, 7, 8 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 9, 10, 11, 12 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 13, 14, 15, 16 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 17 } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
alter table t2 drop index col1;
explain select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1 limit 20,10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	17	100.00	Using temporary; Using filesort
1	SIMPLE	t2	NULL	ALL	NULL	NULL	NULL	NULL	17	100.00	Using where; Using join buffer (Block Nested Loop)
1	SIMPLE	t3	NULL	ALL	NULL	NULL	NULL	NULL	17	100.00	Using where; Using join buffer (Block Nested Loop)
Warnings:
Note	1003	/* select#1 */ select `join_cache_limit_sequoiadb_26660`.`t1`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` AS `col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` AS `col2` from `join_cache_limit_sequoiadb_26660`.`t1` left join (`join_cache_limit_sequoiadb_26660`.`t2` join `join_cache_limit_sequoiadb_26660`.`t3`) on(((`join_cache_limit_sequoiadb_26660`.`t2`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`) and (`join_cache_limit_sequoiadb_26660`.`t3`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`))) where 1 order by `join_cache_limit_sequoiadb_26660`.`t1`.`col1` limit 20,10
select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1 limit 20,10;
col1	col2	col1	col2
[Note] Testcase: Operation log begin
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t1]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
truncate table t1;
truncate table t2;
truncate table t3;
insert into t1 values(1,2),(2,3),(3,4),(4,5),(5,6),(6,7),(7,8),(8,9),(9,10);
insert into t2 values(1,2),(1,3),(1,4),(2,1),(2,2),(2,3),(3,3),(3,4),(3,5),(4,3),(4,5),(5,4),(5,6),(6,5),(6,7),(7,7),(7,8),(8,8),(8,9),(9,8),(9,10);
insert into t3 values(1,2),(1,3),(1,4),(2,1),(2,2),(2,3),(3,3),(3,4),(3,5),(4,3),(4,5),(5,4),(5,6),(6,5),(6,7),(7,7),(7,8),(8,8),(8,9),(9,8),(9,10);
alter table t2 add index col1(col1);
alter table t3 add index col1(col1);
explain select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,tmp.col1,tmp.col2 limit 20,10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	9	100.00	Using temporary; Using filesort
1	SIMPLE	t3	NULL	ref	col1	col1	5	join_cache_limit_sequoiadb_26660.t1.col1	2	100.00	Using join buffer (Batched Key Access)
1	SIMPLE	t2	NULL	ref	col1	col1	5	join_cache_limit_sequoiadb_26660.t1.col1	2	100.00	Using index; Using join buffer (Batched Key Access)
Warnings:
Note	1003	/* select#1 */ select `join_cache_limit_sequoiadb_26660`.`t1`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` AS `col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` AS `col2` from `join_cache_limit_sequoiadb_26660`.`t1` left join (`join_cache_limit_sequoiadb_26660`.`t2` join `join_cache_limit_sequoiadb_26660`.`t3`) on(((`join_cache_limit_sequoiadb_26660`.`t3`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`) and (`join_cache_limit_sequoiadb_26660`.`t2`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`))) where 1 order by `join_cache_limit_sequoiadb_26660`.`t1`.`col1`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` limit 20,10
select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,tmp.col1,tmp.col2 limit 20,10;
col1	col2	col1	col2
3	4	3	3
3	4	3	4
3	4	3	4
3	4	3	4
3	4	3	5
3	4	3	5
3	4	3	5
4	5	4	3
4	5	4	3
4	5	4	5
[Note] Testcase: Operation log begin
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t1]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 2, 3, 4 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 1, 1, 2 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 2, 3, 3 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 3, 4, 4 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 5, 6, 7, 8 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 5, 5, 6, 6 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 7, 7, 8, 8 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 9 } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 9, 9 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
alter table t3 drop index col1;
explain select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,tmp.col1,tmp.col2 limit 20,10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	9	100.00	Using temporary; Using filesort
1	SIMPLE	t2	NULL	ref	col1	col1	5	join_cache_limit_sequoiadb_26660.t1.col1	2	100.00	Using index; Using join buffer (Batched Key Access)
1	SIMPLE	t3	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using where; Using join buffer (Block Nested Loop)
Warnings:
Note	1003	/* select#1 */ select `join_cache_limit_sequoiadb_26660`.`t1`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` AS `col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` AS `col2` from `join_cache_limit_sequoiadb_26660`.`t1` left join (`join_cache_limit_sequoiadb_26660`.`t2` join `join_cache_limit_sequoiadb_26660`.`t3`) on(((`join_cache_limit_sequoiadb_26660`.`t2`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`) and (`join_cache_limit_sequoiadb_26660`.`t3`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`))) where 1 order by `join_cache_limit_sequoiadb_26660`.`t1`.`col1`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` limit 20,10
select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,tmp.col1,tmp.col2 limit 20,10;
col1	col2	col1	col2
3	4	3	3
3	4	3	4
3	4	3	4
3	4	3	4
3	4	3	5
3	4	3	5
3	4	3	5
4	5	4	3
4	5	4	3
4	5	4	5
[Note] Testcase: Operation log begin
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t1]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 2, 3, 4 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 5, 6, 7, 8 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 9 } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
alter table t2 drop index col1;
explain select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,tmp.col1,tmp.col2 limit 20,10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	9	100.00	Using temporary; Using filesort
1	SIMPLE	t2	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using where; Using join buffer (Block Nested Loop)
1	SIMPLE	t3	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using where; Using join buffer (Block Nested Loop)
Warnings:
Note	1003	/* select#1 */ select `join_cache_limit_sequoiadb_26660`.`t1`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` AS `col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` AS `col2` from `join_cache_limit_sequoiadb_26660`.`t1` left join (`join_cache_limit_sequoiadb_26660`.`t2` join `join_cache_limit_sequoiadb_26660`.`t3`) on(((`join_cache_limit_sequoiadb_26660`.`t2`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`) and (`join_cache_limit_sequoiadb_26660`.`t3`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`))) where 1 order by `join_cache_limit_sequoiadb_26660`.`t1`.`col1`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` limit 20,10
select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,tmp.col1,tmp.col2 limit 20,10;
col1	col2	col1	col2
3	4	3	3
3	4	3	4
3	4	3	4
3	4	3	4
3	4	3	5
3	4	3	5
3	4	3	5
4	5	4	3
4	5	4	3
4	5	4	5
[Note] Testcase: Operation log begin
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t1]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
truncate table t1;
truncate table t2;
truncate table t3;
insert into t1 values(1,2),(1,3),(1,4),(2,1),(2,2),(2,3),(3,3),(3,4),(3,5),(4,3),(4,5),(5,4),(5,6),(6,5),(6,7),(7,7),(7,8),(8,8),(8,9),(9,8),(9,10);
insert into t2 values(1,2),(2,3),(3,4),(4,5),(5,6),(6,7),(7,8),(8,9),(9,10),(10,3),(11,5),(12,4),(13,6),(14,5),(15,7),(16,7),(17,8),(18,8),(19,9),(20,8),(21,10);
insert into t3 values(1,2),(2,3),(3,4),(4,5),(5,6),(6,7),(7,8),(8,9),(9,10),(10,3),(11,5),(12,4),(13,6),(14,5),(15,7),(16,7),(17,8),(18,8),(19,9),(20,8),(21,10);
alter table t2 add index col1(col1);
alter table t3 add index col1(col1);
explain select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,t1.col2 limit 20,10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using temporary; Using filesort
1	SIMPLE	t3	NULL	ref	col1	col1	5	join_cache_limit_sequoiadb_26660.t1.col1	2	100.00	Using join buffer (Batched Key Access)
1	SIMPLE	t2	NULL	ref	col1	col1	5	join_cache_limit_sequoiadb_26660.t1.col1	2	100.00	Using index; Using join buffer (Batched Key Access)
Warnings:
Note	1003	/* select#1 */ select `join_cache_limit_sequoiadb_26660`.`t1`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` AS `col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` AS `col2` from `join_cache_limit_sequoiadb_26660`.`t1` left join (`join_cache_limit_sequoiadb_26660`.`t2` join `join_cache_limit_sequoiadb_26660`.`t3`) on(((`join_cache_limit_sequoiadb_26660`.`t3`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`) and (`join_cache_limit_sequoiadb_26660`.`t2`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`))) where 1 order by `join_cache_limit_sequoiadb_26660`.`t1`.`col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` limit 20,10
select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,t1.col2 limit 20,10;
col1	col2	col1	col2
9	10	9	10
[Note] Testcase: Operation log begin
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t1]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 1, 1, 2 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 1, 1, 2 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 2, 3, 3 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 2, 3, 3 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 3, 4, 4, 5 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 3, 4, 4, 5 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 5, 6, 6, 7 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 5, 6, 6, 7 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 7, 8, 8, 9 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 7, 8, 8, 9 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 9 } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 9 } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
alter table t3 drop index col1;
explain select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,t1.col2 limit 20,10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using temporary; Using filesort
1	SIMPLE	t2	NULL	ref	col1	col1	5	join_cache_limit_sequoiadb_26660.t1.col1	2	100.00	Using index; Using join buffer (Batched Key Access)
1	SIMPLE	t3	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using where; Using join buffer (Block Nested Loop)
Warnings:
Note	1003	/* select#1 */ select `join_cache_limit_sequoiadb_26660`.`t1`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` AS `col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` AS `col2` from `join_cache_limit_sequoiadb_26660`.`t1` left join (`join_cache_limit_sequoiadb_26660`.`t2` join `join_cache_limit_sequoiadb_26660`.`t3`) on(((`join_cache_limit_sequoiadb_26660`.`t2`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`) and (`join_cache_limit_sequoiadb_26660`.`t3`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`))) where 1 order by `join_cache_limit_sequoiadb_26660`.`t1`.`col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` limit 20,10
select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,t1.col2 limit 20,10;
col1	col2	col1	col2
9	10	9	10
[Note] Testcase: Operation log begin
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t1]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 1, 1, 2 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 2, 3, 3 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 3, 4, 4, 5 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 5, 6, 6, 7 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 7, 8, 8, 9 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 9 } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
alter table t2 drop index col1;
explain select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,t1.col2 limit 20,10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using temporary; Using filesort
1	SIMPLE	t2	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using where; Using join buffer (Block Nested Loop)
1	SIMPLE	t3	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using where; Using join buffer (Block Nested Loop)
Warnings:
Note	1003	/* select#1 */ select `join_cache_limit_sequoiadb_26660`.`t1`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` AS `col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` AS `col2` from `join_cache_limit_sequoiadb_26660`.`t1` left join (`join_cache_limit_sequoiadb_26660`.`t2` join `join_cache_limit_sequoiadb_26660`.`t3`) on(((`join_cache_limit_sequoiadb_26660`.`t2`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`) and (`join_cache_limit_sequoiadb_26660`.`t3`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`))) where 1 order by `join_cache_limit_sequoiadb_26660`.`t1`.`col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` limit 20,10
select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,t1.col2 limit 20,10;
col1	col2	col1	col2
9	10	9	10
[Note] Testcase: Operation log begin
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t1]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
truncate table t1;
truncate table t2;
truncate table t3;
insert into t1 values(1,2),(1,3),(1,4),(2,1),(2,2),(2,3),(3,3),(3,4),(3,5),(4,3),(4,5),(5,4),(5,6),(6,5),(6,7),(7,7),(7,8),(8,8),(8,9),(9,8),(9,10);
insert into t2 values(1,2),(1,3),(1,4),(2,1),(2,2),(2,3),(3,3),(3,4),(3,5),(4,3),(4,5),(5,4),(5,6),(6,5),(6,7),(7,7),(7,8),(8,8),(8,9),(9,8),(9,10);
insert into t3 values(1,2),(1,3),(1,4),(2,1),(2,2),(2,3),(3,3),(3,4),(3,5),(4,3),(4,5),(5,4),(5,6),(6,5),(6,7),(7,7),(7,8),(8,8),(8,9),(9,8),(9,10);
alter table t2 add index col1(col1);
alter table t3 add index col1(col1);
explain select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,t1.col2,tmp.col1,tmp.col2 limit 20,10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using temporary; Using filesort
1	SIMPLE	t3	NULL	ref	col1	col1	5	join_cache_limit_sequoiadb_26660.t1.col1	2	100.00	Using join buffer (Batched Key Access)
1	SIMPLE	t2	NULL	ref	col1	col1	5	join_cache_limit_sequoiadb_26660.t1.col1	2	100.00	Using index; Using join buffer (Batched Key Access)
Warnings:
Note	1003	/* select#1 */ select `join_cache_limit_sequoiadb_26660`.`t1`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` AS `col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` AS `col2` from `join_cache_limit_sequoiadb_26660`.`t1` left join (`join_cache_limit_sequoiadb_26660`.`t2` join `join_cache_limit_sequoiadb_26660`.`t3`) on(((`join_cache_limit_sequoiadb_26660`.`t3`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`) and (`join_cache_limit_sequoiadb_26660`.`t2`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`))) where 1 order by `join_cache_limit_sequoiadb_26660`.`t1`.`col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` limit 20,10
select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,t1.col2,tmp.col1,tmp.col2 limit 20,10;
col1	col2	col1	col2
1	4	1	2
1	4	1	3
1	4	1	3
1	4	1	3
1	4	1	4
1	4	1	4
1	4	1	4
2	1	2	1
2	1	2	1
2	1	2	1
[Note] Testcase: Operation log begin
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t1]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 1, 1, 2 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 1, 1, 1 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 1, 1, 1 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 2, 2, 2 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 2, 3, 3 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 2, 2, 2 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 2, 3, 3 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 3, 3, 3, 3 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 3, 4, 4, 5 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 3, 3, 3, 4 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 4, 4, 4, 5 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 5 } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 5, 6, 6, 7 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 5, 5, 6, 6 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 6, 6, 7, 7 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 7, 8, 8, 9 ] } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 7, 7, 8, 8 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 8, 8, 9, 9 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 9 } }], selector[{}], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 9, 9 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
alter table t3 drop index col1;
explain select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,t1.col2,tmp.col1,tmp.col2 limit 20,10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using temporary; Using filesort
1	SIMPLE	t2	NULL	ref	col1	col1	5	join_cache_limit_sequoiadb_26660.t1.col1	2	100.00	Using index; Using join buffer (Batched Key Access)
1	SIMPLE	t3	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using where; Using join buffer (Block Nested Loop)
Warnings:
Note	1003	/* select#1 */ select `join_cache_limit_sequoiadb_26660`.`t1`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` AS `col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` AS `col2` from `join_cache_limit_sequoiadb_26660`.`t1` left join (`join_cache_limit_sequoiadb_26660`.`t2` join `join_cache_limit_sequoiadb_26660`.`t3`) on(((`join_cache_limit_sequoiadb_26660`.`t2`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`) and (`join_cache_limit_sequoiadb_26660`.`t3`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`))) where 1 order by `join_cache_limit_sequoiadb_26660`.`t1`.`col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` limit 20,10
select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,t1.col2,tmp.col1,tmp.col2 limit 20,10;
col1	col2	col1	col2
1	4	1	2
1	4	1	3
1	4	1	3
1	4	1	3
1	4	1	4
1	4	1	4
1	4	1	4
2	1	2	1
2	1	2	1
2	1	2	1
[Note] Testcase: Operation log begin
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t1]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 1, 1, 2 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 2, 3, 3 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 3, 4, 4, 5 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 5, 6, 6, 7 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: Batched keys num[4], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 7, 8, 8, 9 ] } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 9 } }], selector[{ "col1": null }], order_by[{}], hint[{ "": "col1" }], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
alter table t2 drop index col1;
explain select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,t1.col2,tmp.col1,tmp.col2 limit 20,10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using temporary; Using filesort
1	SIMPLE	t2	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using where; Using join buffer (Block Nested Loop)
1	SIMPLE	t3	NULL	ALL	NULL	NULL	NULL	NULL	21	100.00	Using where; Using join buffer (Block Nested Loop)
Warnings:
Note	1003	/* select#1 */ select `join_cache_limit_sequoiadb_26660`.`t1`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2` AS `col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1` AS `col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` AS `col2` from `join_cache_limit_sequoiadb_26660`.`t1` left join (`join_cache_limit_sequoiadb_26660`.`t2` join `join_cache_limit_sequoiadb_26660`.`t3`) on(((`join_cache_limit_sequoiadb_26660`.`t2`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`) and (`join_cache_limit_sequoiadb_26660`.`t3`.`col1` = `join_cache_limit_sequoiadb_26660`.`t1`.`col1`))) where 1 order by `join_cache_limit_sequoiadb_26660`.`t1`.`col1`,`join_cache_limit_sequoiadb_26660`.`t1`.`col2`,`join_cache_limit_sequoiadb_26660`.`t2`.`col1`,`join_cache_limit_sequoiadb_26660`.`t3`.`col2` limit 20,10
select * from t1 left join (select t2.col1,t3.col2 from t2 inner join t3 on t2.col1 = t3.col1) tmp on t1.col1 = tmp.col1 order by t1.col1,t1.col2,tmp.col1,tmp.col2 limit 20,10;
col1	col2	col1	col2
1	4	1	2
1	4	1	3
1	4	1	3
1	4	1	3
1	4	1	4
1	4	1	4
1	4	1	4
2	1	2	1
2	1	2	1
2	1	2	1
[Note] Testcase: Operation log begin
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t1]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[join_cache_limit_sequoiadb_26660.t3]
drop table t1,t2,t3;
set session sequoiadb_debug_log=off;
set session join_buffer_size=default;
set session optimizer_switch=default;
drop database join_cache_limit_sequoiadb_26660;

drop database if exists multi_field_query_optimize_25669;
create database multi_field_query_optimize_25669;
drop database multi_field_query_optimize_25669;
create database multi_field_query_optimize_25669;
use multi_field_query_optimize_25669;
set session optimizer_switch='mrr=on,mrr_cost_based=off';
set session sequoiadb_debug_log=on;
create table t1(a int,b int,key union_ab5(a,b));
insert into t1 values(0,1),(1,1),(1,2),(1,3),(1,null),(2,null),(2,1),(2,2),(3,2),(3,3),(4,3),(4,null),(null,1),(null,4),(null,null);
explain select * from t1 where a<2 or (a=1 and b>1 and b<3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3)))
select * from t1 where a<2 or (a=1 and b>1 and b<3);
a	b
0	1
1	1
1	2
1	3
1	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "a": { "$lt": 2 } }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<2 or (a=1 and b>=1 and b<3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3)))
select * from t1 where a<2 or (a=1 and b>=1 and b<3);
a	b
0	1
1	1
1	2
1	3
1	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "a": { "$lt": 2 } }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<2 or (a=1 and b>1 and b<=3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3)))
select * from t1 where a<2 or (a=1 and b>1 and b<=3);
a	b
0	1
1	1
1	2
1	3
1	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "a": { "$lt": 2 } }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<2 or (a=1 and b>=1 and b<=3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3)))
select * from t1 where a<2 or (a=1 and b>=1 and b<=3);
a	b
0	1
1	1
1	2
1	3
1	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "a": { "$lt": 2 } }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<=2 or (a=1 and b>1 and b<3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3)))
select * from t1 where a<=2 or (a=1 and b>1 and b<3);
a	b
0	1
1	1
1	2
1	3
1	NULL
2	1
2	2
2	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "a": { "$lte": 2 } }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<=2 or (a=1 and b>=1 and b<3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3)))
select * from t1 where a<=2 or (a=1 and b>=1 and b<3);
a	b
0	1
1	1
1	2
1	3
1	NULL
2	1
2	2
2	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "a": { "$lte": 2 } }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<=2 or (a=1 and b>1 and b<=3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3)))
select * from t1 where a<=2 or (a=1 and b>1 and b<=3);
a	b
0	1
1	1
1	2
1	3
1	NULL
2	1
2	2
2	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "a": { "$lte": 2 } }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<=2 or (a=1 and b>=1 and b<=3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3)))
select * from t1 where a<=2 or (a=1 and b>=1 and b<=3);
a	b
0	1
1	1
1	2
1	3
1	NULL
2	1
2	2
2	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "a": { "$lte": 2 } }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<2 or a is null or (a=1 and b>1 and b<3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3)))
select * from t1 where a<2 or a is null or (a=1 and b>1 and b<3);
a	b
0	1
1	1
1	2
1	3
1	NULL
NULL	1
NULL	4
NULL	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$or": [ { "a": { "$lt": 2 } }, { "a": { "$isnull": 1 } }, { "$and": [ { "a": { "$et": 1 } }, { "b": { "$gt": 1 } }, { "b": { "$lt": 3 } } ] } ] }, { "$or": [ { "a": { "$isnull": 1 } }, { "a": { "$lt": 2 } } ] } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<2 or a is null or (a=1 and b>=1 and b<3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3)))
select * from t1 where a<2 or a is null or (a=1 and b>=1 and b<3);
a	b
0	1
1	1
1	2
1	3
1	NULL
NULL	1
NULL	4
NULL	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$or": [ { "a": { "$lt": 2 } }, { "a": { "$isnull": 1 } }, { "$and": [ { "a": { "$et": 1 } }, { "b": { "$gte": 1 } }, { "b": { "$lt": 3 } } ] } ] }, { "$or": [ { "a": { "$isnull": 1 } }, { "a": { "$lt": 2 } } ] } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<2 or a is null or (a=1 and b>1 and b<=3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3)))
select * from t1 where a<2 or a is null or (a=1 and b>1 and b<=3);
a	b
0	1
1	1
1	2
1	3
1	NULL
NULL	1
NULL	4
NULL	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$or": [ { "a": { "$lt": 2 } }, { "a": { "$isnull": 1 } }, { "$and": [ { "a": { "$et": 1 } }, { "b": { "$gt": 1 } }, { "b": { "$lte": 3 } } ] } ] }, { "$or": [ { "a": { "$isnull": 1 } }, { "a": { "$lt": 2 } } ] } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<2 or a is null or (a=1 and b>=1 and b<=3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` < 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3)))
select * from t1 where a<2 or a is null or (a=1 and b>=1 and b<=3);
a	b
0	1
1	1
1	2
1	3
1	NULL
NULL	1
NULL	4
NULL	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$or": [ { "a": { "$lt": 2 } }, { "a": { "$isnull": 1 } }, { "$and": [ { "a": { "$et": 1 } }, { "b": { "$gte": 1 } }, { "b": { "$lte": 3 } } ] } ] }, { "$or": [ { "a": { "$isnull": 1 } }, { "a": { "$lt": 2 } } ] } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<=2 or a is null or (a=1 and b>1 and b<3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3)))
select * from t1 where a<=2 or a is null or (a=1 and b>1 and b<3);
a	b
0	1
1	1
1	2
1	3
1	NULL
2	1
2	2
2	NULL
NULL	1
NULL	4
NULL	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$or": [ { "a": { "$lte": 2 } }, { "a": { "$isnull": 1 } }, { "$and": [ { "a": { "$et": 1 } }, { "b": { "$gt": 1 } }, { "b": { "$lt": 3 } } ] } ] }, { "$or": [ { "a": { "$isnull": 1 } }, { "a": { "$lte": 2 } } ] } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<=2 or a is null or (a=1 and b>=1 and b<3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3)))
select * from t1 where a<=2 or a is null or (a=1 and b>=1 and b<3);
a	b
0	1
1	1
1	2
1	3
1	NULL
2	1
2	2
2	NULL
NULL	1
NULL	4
NULL	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$or": [ { "a": { "$lte": 2 } }, { "a": { "$isnull": 1 } }, { "$and": [ { "a": { "$et": 1 } }, { "b": { "$gte": 1 } }, { "b": { "$lt": 3 } } ] } ] }, { "$or": [ { "a": { "$isnull": 1 } }, { "a": { "$lte": 2 } } ] } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<=2 or a is null or (a=1 and b>1 and b<=3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3)))
select * from t1 where a<=2 or a is null or (a=1 and b>1 and b<=3);
a	b
0	1
1	1
1	2
1	3
1	NULL
2	1
2	2
2	NULL
NULL	1
NULL	4
NULL	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$or": [ { "a": { "$lte": 2 } }, { "a": { "$isnull": 1 } }, { "$and": [ { "a": { "$et": 1 } }, { "b": { "$gt": 1 } }, { "b": { "$lte": 3 } } ] } ] }, { "$or": [ { "a": { "$isnull": 1 } }, { "a": { "$lte": 2 } } ] } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a<=2 or a is null or (a=1 and b>=1 and b<=3);
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	4	100.00	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3))); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` <= 2) or isnull(`multi_field_query_optimize_25669`.`t1`.`a`) or ((`multi_field_query_optimize_25669`.`t1`.`a` = 1) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3)))
select * from t1 where a<=2 or a is null or (a=1 and b>=1 and b<=3);
a	b
0	1
1	1
1	2
1	3
1	NULL
2	1
2	2
2	NULL
NULL	1
NULL	4
NULL	NULL
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$or": [ { "a": { "$lte": 2 } }, { "a": { "$isnull": 1 } }, { "$and": [ { "a": { "$et": 1 } }, { "b": { "$gte": 1 } }, { "b": { "$lte": 3 } } ] } ] }, { "$or": [ { "a": { "$isnull": 1 } }, { "a": { "$lte": 2 } } ] } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a>2 and b>1 and b<3;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	11	11.11	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` > 2) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3)); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` > 2) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3))
select * from t1 where a>2 and b>1 and b<3;
a	b
3	2
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "a": { "$gt": 2 } }, { "b": { "$gt": 1 } }, { "b": { "$lt": 3 } } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a>2 and b>=1 and b<3;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	11	11.11	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` > 2) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3)); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` > 2) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3))
select * from t1 where a>2 and b>=1 and b<3;
a	b
3	2
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "a": { "$gt": 2 } }, { "b": { "$gte": 1 } }, { "b": { "$lt": 3 } } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a>2 and b>1 and b<=3;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	11	11.11	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` > 2) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3)); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` > 2) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3))
select * from t1 where a>2 and b>1 and b<=3;
a	b
3	2
3	3
4	3
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "a": { "$gt": 2 } }, { "b": { "$gt": 1 } }, { "b": { "$lte": 3 } } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a>2 and b>=1 and b<=3;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	5	NULL	11	11.11	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` > 2) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3)); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` > 2) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3))
select * from t1 where a>2 and b>=1 and b<=3;
a	b
3	2
3	3
4	3
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "a": { "$gt": 2 } }, { "b": { "$gte": 1 } }, { "b": { "$lte": 3 } } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a>=2 and b>1 and b<3;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	10	NULL	8	11.11	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` >= 2) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3)); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` >= 2) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3))
select * from t1 where a>=2 and b>1 and b<3;
a	b
2	2
3	2
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$and": [ { "a": { "$gte": 2 } }, { "b": { "$gt": 1 } }, { "b": { "$lt": 3 } } ] }, { "a": { "$gte": 2 }, "b": { "$gt": 1 } } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a>=2 and b>=1 and b<3;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	10	NULL	8	11.11	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` >= 2) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3)); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` >= 2) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` < 3))
select * from t1 where a>=2 and b>=1 and b<3;
a	b
2	1
2	2
3	2
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$and": [ { "a": { "$gte": 2 } }, { "b": { "$gte": 1 } }, { "b": { "$lt": 3 } } ] }, { "a": { "$gte": 2 }, "b": { "$gte": 1 } } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a>=2 and b>1 and b<=3;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	10	NULL	8	11.11	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` >= 2) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3)); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` >= 2) and (`multi_field_query_optimize_25669`.`t1`.`b` > 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3))
select * from t1 where a>=2 and b>1 and b<=3;
a	b
2	2
3	2
3	3
4	3
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$and": [ { "a": { "$gte": 2 } }, { "b": { "$gt": 1 } }, { "b": { "$lte": 3 } } ] }, { "a": { "$gte": 2 }, "b": { "$gt": 1 } } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
explain select * from t1 where a>=2 and b>=1 and b<=3;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	union_ab5	union_ab5	10	NULL	8	11.11	Using where with pushed condition ((`multi_field_query_optimize_25669`.`t1`.`a` >= 2) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3)); Using index
Warnings:
Note	1003	/* select#1 */ select `multi_field_query_optimize_25669`.`t1`.`a` AS `a`,`multi_field_query_optimize_25669`.`t1`.`b` AS `b` from `multi_field_query_optimize_25669`.`t1` where ((`multi_field_query_optimize_25669`.`t1`.`a` >= 2) and (`multi_field_query_optimize_25669`.`t1`.`b` >= 1) and (`multi_field_query_optimize_25669`.`t1`.`b` <= 3))
select * from t1 where a>=2 and b>=1 and b<=3;
a	b
2	1
2	2
3	2
3	3
4	3
[Note] Testcase: Operation log begin
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$and": [ { "a": { "$gte": 2 } }, { "b": { "$gte": 1 } }, { "b": { "$lte": 3 } } ] }, { "a": { "$gte": 2 }, "b": { "$gte": 1 } } ] }], selector[{ "a": null, "b": null }], order_by[{}], hint[{ "": "union_ab5" }], limit[-1], offset[0], table[multi_field_query_optimize_25669.t1]
drop table t1;
set session optimizer_switch=default;
set session sequoiadb_debug_log=off;
drop database multi_field_query_optimize_25669;

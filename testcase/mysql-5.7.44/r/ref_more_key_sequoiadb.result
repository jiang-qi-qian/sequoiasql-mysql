drop database if exists db_ref_more_key_sequoiadb;
create database db_ref_more_key_sequoiadb;
drop database db_ref_more_key_sequoiadb;
create database db_ref_more_key_sequoiadb;
use db_ref_more_key_sequoiadb;
set session optimizer_trace="enabled=on";
create table t1 (a int,b int,c int,d int);
alter table t1 add index idx_ac (a,c);
alter table t1 add index idx_ab (a,b);
alter table t1 add index idx_abc(a,b,c);
insert into t1 values(1,1,1,1),(1,2,2,2),(1,3,3,3),(1,4,4,4),(1,5,5,5),(1,6,6,6),(1,7,7,7),(1,8,8,8),(1,9,9,9);
create table t2 (a int,b int,c int,d int);
insert into t2 values(1,2,3,4),(2,3,4,5);
flush tables;
set session ref_prefer_more_keypart = off;
select * from t1 where a=1 and d=1;
a	b	c	d
1	1	1	1
SELECT * FROM information_schema.optimizer_trace;
QUERY	TRACE	MISSING_BYTES_BEYOND_MAX_MEM_SIZE	INSUFFICIENT_PRIVILEGES
select * from t1 where a=1 and d=1	{
  "steps": [
    {
      "join_preparation": {
        "select#": 1,
        "steps": [
          {
            "expanded_query": "/* select#1 */ select `t1`.`a` AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d` from `t1` where ((`t1`.`a` = 1) and (`t1`.`d` = 1))"
          }
        ]
      }
    },
    {
      "join_optimization": {
        "select#": 1,
        "steps": [
          {
            "condition_processing": {
              "condition": "WHERE",
              "original_condition": "((`t1`.`a` = 1) and (`t1`.`d` = 1))",
              "steps": [
                {
                  "transformation": "equality_propagation",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(1, `t1`.`d`))"
                },
                {
                  "transformation": "constant_propagation",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(1, `t1`.`d`))"
                },
                {
                  "transformation": "trivial_condition_removal",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(1, `t1`.`d`))"
                }
              ]
            }
          },
          {
            "substitute_generated_columns": {
            }
          },
          {
            "table_dependencies": [
              {
                "table": "`t1`",
                "row_may_be_null": false,
                "map_bit": 0,
                "depends_on_map_bits": [
                ]
              }
            ]
          },
          {
            "ref_optimizer_key_uses": [
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              }
            ]
          },
          {
            "rows_estimation": [
              {
                "table": "`t1`",
                "range_analysis": {
                  "table_scan": {
                    "rows": 9,
                    "cost": 11.9
                  },
                  "potential_range_indexes": [
                    {
                      "index": "idx_ac",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "c"
                      ]
                    },
                    {
                      "index": "idx_ab",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "b"
                      ]
                    },
                    {
                      "index": "idx_abc",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "b",
                        "c"
                      ]
                    }
                  ],
                  "setup_range_conditions": [
                  ],
                  "group_index_range": {
                    "chosen": false,
                    "cause": "not_group_by_or_distinct"
                  },
                  "analyzing_range_alternatives": {
                    "range_scan_alternatives": [
                      {
                        "index": "idx_ac",
                        "ranges": [
                          "1 <= a <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": false,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 2,
                        "cost": 3.41,
                        "chosen": true
                      },
                      {
                        "index": "idx_ab",
                        "ranges": [
                          "1 <= a <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": false,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 2,
                        "cost": 3.41,
                        "chosen": false,
                        "cause": "cost"
                      },
                      {
                        "index": "idx_abc",
                        "ranges": [
                          "1 <= a <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": false,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 2,
                        "cost": 3.41,
                        "chosen": false,
                        "cause": "cost"
                      }
                    ],
                    "analyzing_roworder_intersect": {
                      "usable": false,
                      "cause": "too_few_roworder_scans"
                    }
                  },
                  "chosen_range_access_summary": {
                    "range_access_plan": {
                      "type": "range_scan",
                      "index": "idx_ac",
                      "rows": 2,
                      "ranges": [
                        "1 <= a <= 1"
                      ]
                    },
                    "rows_for_plan": 2,
                    "cost_for_plan": 3.41,
                    "chosen": true
                  }
                }
              }
            ]
          },
          {
            "considered_execution_plans": [
              {
                "plan_prefix": [
                ],
                "table": "`t1`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "access_type": "ref",
                      "index": "idx_ac",
                      "rows": 2,
                      "cost": 2.4,
                      "chosen": true
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_ab",
                      "rows": 2,
                      "cost": 2.4,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_abc",
                      "rows": 2,
                      "cost": 2.4,
                      "chosen": false
                    },
                    {
                      "access_type": "range",
                      "range_details": {
                        "used_index": "idx_ac"
                      },
                      "chosen": false,
                      "cause": "heuristic_index_cheaper"
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 2,
                "cost_for_plan": 2.4,
                "chosen": true
              }
            ]
          },
          {
            "attaching_conditions_to_tables": {
              "original_condition": "((`t1`.`d` = 1) and (`t1`.`a` = 1))",
              "attached_conditions_computation": [
              ],
              "attached_conditions_summary": [
                {
                  "table": "`t1`",
                  "attached": "(`t1`.`d` = 1)"
                }
              ]
            }
          },
          {
            "refine_plan": [
              {
                "table": "`t1`"
              }
            ]
          }
        ]
      }
    },
    {
      "join_execution": {
        "select#": 1,
        "steps": [
        ]
      }
    }
  ]
}	0	0
explain select * from t1 where a=1 and d=1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	idx_ac,idx_ab,idx_abc	idx_ac	5	const	2	11.11	Using where with pushed condition (`db_ref_more_key_sequoiadb`.`t1`.`d` = 1)
Warnings:
Note	1003	/* select#1 */ select `db_ref_more_key_sequoiadb`.`t1`.`a` AS `a`,`db_ref_more_key_sequoiadb`.`t1`.`b` AS `b`,`db_ref_more_key_sequoiadb`.`t1`.`c` AS `c`,`db_ref_more_key_sequoiadb`.`t1`.`d` AS `d` from `db_ref_more_key_sequoiadb`.`t1` where ((`db_ref_more_key_sequoiadb`.`t1`.`d` = 1) and (`db_ref_more_key_sequoiadb`.`t1`.`a` = 1))
select * from t2 join t1 on t2.a=t1.a and t2.b=t1.d;
a	b	c	d	a	b	c	d
1	2	3	4	1	2	2	2
SELECT * FROM information_schema.optimizer_trace;
QUERY	TRACE	MISSING_BYTES_BEYOND_MAX_MEM_SIZE	INSUFFICIENT_PRIVILEGES
select * from t2 join t1 on t2.a=t1.a and t2.b=t1.d	{
  "steps": [
    {
      "join_preparation": {
        "select#": 1,
        "steps": [
          {
            "expanded_query": "/* select#1 */ select `t2`.`a` AS `a`,`t2`.`b` AS `b`,`t2`.`c` AS `c`,`t2`.`d` AS `d`,`t1`.`a` AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d` from (`t2` join `t1` on(((`t2`.`a` = `t1`.`a`) and (`t2`.`b` = `t1`.`d`))))"
          },
          {
            "transformations_to_nested_joins": {
              "transformations": [
                "JOIN_condition_to_WHERE",
                "parenthesis_removal"
              ],
              "expanded_query": "/* select#1 */ select `t2`.`a` AS `a`,`t2`.`b` AS `b`,`t2`.`c` AS `c`,`t2`.`d` AS `d`,`t1`.`a` AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d` from `t2` join `t1` where ((`t2`.`a` = `t1`.`a`) and (`t2`.`b` = `t1`.`d`))"
            }
          }
        ]
      }
    },
    {
      "join_optimization": {
        "select#": 1,
        "steps": [
          {
            "condition_processing": {
              "condition": "WHERE",
              "original_condition": "((`t2`.`a` = `t1`.`a`) and (`t2`.`b` = `t1`.`d`))",
              "steps": [
                {
                  "transformation": "equality_propagation",
                  "resulting_condition": "(multiple equal(`t2`.`a`, `t1`.`a`) and multiple equal(`t2`.`b`, `t1`.`d`))"
                },
                {
                  "transformation": "constant_propagation",
                  "resulting_condition": "(multiple equal(`t2`.`a`, `t1`.`a`) and multiple equal(`t2`.`b`, `t1`.`d`))"
                },
                {
                  "transformation": "trivial_condition_removal",
                  "resulting_condition": "(multiple equal(`t2`.`a`, `t1`.`a`) and multiple equal(`t2`.`b`, `t1`.`d`))"
                }
              ]
            }
          },
          {
            "substitute_generated_columns": {
            }
          },
          {
            "table_dependencies": [
              {
                "table": "`t2`",
                "row_may_be_null": false,
                "map_bit": 0,
                "depends_on_map_bits": [
                ]
              },
              {
                "table": "`t1`",
                "row_may_be_null": false,
                "map_bit": 1,
                "depends_on_map_bits": [
                ]
              }
            ]
          },
          {
            "ref_optimizer_key_uses": [
              {
                "table": "`t1`",
                "field": "a",
                "equals": "`t2`.`a`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "`t2`.`a`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "`t2`.`a`",
                "null_rejecting": true
              }
            ]
          },
          {
            "rows_estimation": [
              {
                "table": "`t2`",
                "table_scan": {
                  "rows": 2,
                  "cost": 2
                }
              },
              {
                "table": "`t1`",
                "table_scan": {
                  "rows": 9,
                  "cost": 8
                }
              }
            ]
          },
          {
            "considered_execution_plans": [
              {
                "plan_prefix": [
                ],
                "table": "`t2`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "rows_to_scan": 2,
                      "access_type": "scan",
                      "resulting_rows": 2,
                      "cost": 2.4,
                      "chosen": true
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 2,
                "cost_for_plan": 2.4,
                "rest_of_plan": [
                  {
                    "plan_prefix": [
                      "`t2`"
                    ],
                    "table": "`t1`",
                    "best_access_path": {
                      "considered_access_paths": [
                        {
                          "access_type": "ref",
                          "index": "idx_ac",
                          "rows": 2,
                          "cost": 4.8,
                          "chosen": true
                        },
                        {
                          "access_type": "ref",
                          "index": "idx_ab",
                          "rows": 2,
                          "cost": 4.8,
                          "chosen": false
                        },
                        {
                          "access_type": "ref",
                          "index": "idx_abc",
                          "rows": 2,
                          "cost": 4.8,
                          "chosen": false
                        },
                        {
                          "access_type": "scan",
                          "cost": 9.8,
                          "rows": 9,
                          "chosen": false,
                          "cause": "cost"
                        }
                      ]
                    },
                    "condition_filtering_pct": 100,
                    "rows_for_plan": 4,
                    "cost_for_plan": 7.2,
                    "chosen": true
                  }
                ]
              },
              {
                "plan_prefix": [
                ],
                "table": "`t1`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "access_type": "ref",
                      "index": "idx_ac",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_ab",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_abc",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "rows_to_scan": 9,
                      "access_type": "scan",
                      "resulting_rows": 9,
                      "cost": 9.8,
                      "chosen": true
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 9,
                "cost_for_plan": 9.8,
                "pruned_by_cost": true
              }
            ]
          },
          {
            "attaching_conditions_to_tables": {
              "original_condition": "((`t1`.`d` = `t2`.`b`) and (`t1`.`a` = `t2`.`a`))",
              "attached_conditions_computation": [
              ],
              "attached_conditions_summary": [
                {
                  "table": "`t2`",
                  "attached": "(`t2`.`a` is not null)"
                },
                {
                  "table": "`t1`",
                  "attached": "(`t1`.`d` = `t2`.`b`)"
                }
              ]
            }
          },
          {
            "refine_plan": [
              {
                "table": "`t2`"
              },
              {
                "table": "`t1`"
              }
            ]
          }
        ]
      }
    },
    {
      "join_execution": {
        "select#": 1,
        "steps": [
        ]
      }
    }
  ]
}	0	0
explain select * from t2 join t1 on t2.a=t1.a and t2.b=t1.d;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	ALL	NULL	NULL	NULL	NULL	2	100.00	Using where with pushed condition (`db_ref_more_key_sequoiadb`.`t2`.`a` is not null)
1	SIMPLE	t1	NULL	ref	idx_ac,idx_ab,idx_abc	idx_ac	5	db_ref_more_key_sequoiadb.t2.a	2	11.11	Using where
Warnings:
Note	1003	/* select#1 */ select `db_ref_more_key_sequoiadb`.`t2`.`a` AS `a`,`db_ref_more_key_sequoiadb`.`t2`.`b` AS `b`,`db_ref_more_key_sequoiadb`.`t2`.`c` AS `c`,`db_ref_more_key_sequoiadb`.`t2`.`d` AS `d`,`db_ref_more_key_sequoiadb`.`t1`.`a` AS `a`,`db_ref_more_key_sequoiadb`.`t1`.`b` AS `b`,`db_ref_more_key_sequoiadb`.`t1`.`c` AS `c`,`db_ref_more_key_sequoiadb`.`t1`.`d` AS `d` from `db_ref_more_key_sequoiadb`.`t2` join `db_ref_more_key_sequoiadb`.`t1` where ((`db_ref_more_key_sequoiadb`.`t1`.`d` = `db_ref_more_key_sequoiadb`.`t2`.`b`) and (`db_ref_more_key_sequoiadb`.`t1`.`a` = `db_ref_more_key_sequoiadb`.`t2`.`a`))
select * from t1 where a=1 and b=1 and c=1;
a	b	c	d
1	1	1	1
SELECT * FROM information_schema.optimizer_trace;
QUERY	TRACE	MISSING_BYTES_BEYOND_MAX_MEM_SIZE	INSUFFICIENT_PRIVILEGES
select * from t1 where a=1 and b=1 and c=1	{
  "steps": [
    {
      "join_preparation": {
        "select#": 1,
        "steps": [
          {
            "expanded_query": "/* select#1 */ select `t1`.`a` AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d` from `t1` where ((`t1`.`a` = 1) and (`t1`.`b` = 1) and (`t1`.`c` = 1))"
          }
        ]
      }
    },
    {
      "join_optimization": {
        "select#": 1,
        "steps": [
          {
            "condition_processing": {
              "condition": "WHERE",
              "original_condition": "((`t1`.`a` = 1) and (`t1`.`b` = 1) and (`t1`.`c` = 1))",
              "steps": [
                {
                  "transformation": "equality_propagation",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(1, `t1`.`b`) and multiple equal(1, `t1`.`c`))"
                },
                {
                  "transformation": "constant_propagation",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(1, `t1`.`b`) and multiple equal(1, `t1`.`c`))"
                },
                {
                  "transformation": "trivial_condition_removal",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(1, `t1`.`b`) and multiple equal(1, `t1`.`c`))"
                }
              ]
            }
          },
          {
            "substitute_generated_columns": {
            }
          },
          {
            "table_dependencies": [
              {
                "table": "`t1`",
                "row_may_be_null": false,
                "map_bit": 0,
                "depends_on_map_bits": [
                ]
              }
            ]
          },
          {
            "ref_optimizer_key_uses": [
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "c",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "b",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "b",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "c",
                "equals": "1",
                "null_rejecting": false
              }
            ]
          },
          {
            "rows_estimation": [
              {
                "table": "`t1`",
                "range_analysis": {
                  "table_scan": {
                    "rows": 9,
                    "cost": 11.9
                  },
                  "potential_range_indexes": [
                    {
                      "index": "idx_ac",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "c"
                      ]
                    },
                    {
                      "index": "idx_ab",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "b"
                      ]
                    },
                    {
                      "index": "idx_abc",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "b",
                        "c"
                      ]
                    }
                  ],
                  "setup_range_conditions": [
                  ],
                  "group_index_range": {
                    "chosen": false,
                    "cause": "not_group_by_or_distinct"
                  },
                  "analyzing_range_alternatives": {
                    "range_scan_alternatives": [
                      {
                        "index": "idx_ac",
                        "ranges": [
                          "1 <= a <= 1 AND 1 <= c <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": true,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 2,
                        "cost": 3.41,
                        "chosen": true
                      },
                      {
                        "index": "idx_ab",
                        "ranges": [
                          "1 <= a <= 1 AND 1 <= b <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": true,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 2,
                        "cost": 3.41,
                        "chosen": false,
                        "cause": "cost"
                      },
                      {
                        "index": "idx_abc",
                        "ranges": [
                          "1 <= a <= 1 AND 1 <= b <= 1 AND 1 <= c <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": true,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 2,
                        "cost": 3.41,
                        "chosen": false,
                        "cause": "cost"
                      }
                    ],
                    "analyzing_roworder_intersect": {
                      "intersecting_indexes": [
                        {
                          "index": "idx_abc",
                          "index_scan_cost": 1.0008,
                          "cumulated_index_scan_cost": 1.0008,
                          "disk_sweep_cost": 1.7563,
                          "cumulated_total_cost": 2.7571,
                          "usable": true,
                          "matching_rows_now": 2,
                          "isect_covering_with_this_index": false,
                          "chosen": true
                        },
                        {
                          "index": "idx_ab",
                          "cumulated_total_cost": 2.7571,
                          "usable": false,
                          "cause": "does_not_reduce_cost_of_intersect"
                        },
                        {
                          "index": "idx_ac",
                          "cumulated_total_cost": 2.7571,
                          "usable": false,
                          "cause": "does_not_reduce_cost_of_intersect"
                        }
                      ],
                      "clustered_pk": {
                        "clustered_pk_added_to_intersect": false,
                        "cause": "no_clustered_pk_index"
                      },
                      "chosen": false,
                      "cause": "too_few_indexes_to_merge"
                    }
                  },
                  "chosen_range_access_summary": {
                    "range_access_plan": {
                      "type": "range_scan",
                      "index": "idx_ac",
                      "rows": 2,
                      "ranges": [
                        "1 <= a <= 1 AND 1 <= c <= 1"
                      ]
                    },
                    "rows_for_plan": 2,
                    "cost_for_plan": 3.41,
                    "chosen": true
                  }
                }
              }
            ]
          },
          {
            "considered_execution_plans": [
              {
                "plan_prefix": [
                ],
                "table": "`t1`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "access_type": "ref",
                      "index": "idx_ac",
                      "rows": 2,
                      "cost": 2.4,
                      "chosen": true
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_ab",
                      "rows": 2,
                      "cost": 2.4,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_abc",
                      "rows": 2,
                      "cost": 2.4,
                      "chosen": false
                    },
                    {
                      "access_type": "range",
                      "range_details": {
                        "used_index": "idx_ac"
                      },
                      "chosen": false,
                      "cause": "heuristic_index_cheaper"
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 2,
                "cost_for_plan": 2.4,
                "chosen": true
              }
            ]
          },
          {
            "attaching_conditions_to_tables": {
              "original_condition": "((`t1`.`c` = 1) and (`t1`.`b` = 1) and (`t1`.`a` = 1))",
              "attached_conditions_computation": [
              ],
              "attached_conditions_summary": [
                {
                  "table": "`t1`",
                  "attached": "(`t1`.`b` = 1)"
                }
              ]
            }
          },
          {
            "refine_plan": [
              {
                "table": "`t1`"
              }
            ]
          }
        ]
      }
    },
    {
      "join_execution": {
        "select#": 1,
        "steps": [
        ]
      }
    }
  ]
}	0	0
explain select * from t1 where a=1 and b=1 and c=1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	idx_ac,idx_ab,idx_abc	idx_ac	10	const,const	2	11.11	Using where with pushed condition (`db_ref_more_key_sequoiadb`.`t1`.`b` = 1)
Warnings:
Note	1003	/* select#1 */ select `db_ref_more_key_sequoiadb`.`t1`.`a` AS `a`,`db_ref_more_key_sequoiadb`.`t1`.`b` AS `b`,`db_ref_more_key_sequoiadb`.`t1`.`c` AS `c`,`db_ref_more_key_sequoiadb`.`t1`.`d` AS `d` from `db_ref_more_key_sequoiadb`.`t1` where ((`db_ref_more_key_sequoiadb`.`t1`.`c` = 1) and (`db_ref_more_key_sequoiadb`.`t1`.`b` = 1) and (`db_ref_more_key_sequoiadb`.`t1`.`a` = 1))
select * from t2 join t1 on t2.a=t1.a and t2.b=t1.b and t2.c=t1.c;
a	b	c	d	a	b	c	d
SELECT * FROM information_schema.optimizer_trace;
QUERY	TRACE	MISSING_BYTES_BEYOND_MAX_MEM_SIZE	INSUFFICIENT_PRIVILEGES
select * from t2 join t1 on t2.a=t1.a and t2.b=t1.b and t2.c=t1.c	{
  "steps": [
    {
      "join_preparation": {
        "select#": 1,
        "steps": [
          {
            "expanded_query": "/* select#1 */ select `t2`.`a` AS `a`,`t2`.`b` AS `b`,`t2`.`c` AS `c`,`t2`.`d` AS `d`,`t1`.`a` AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d` from (`t2` join `t1` on(((`t2`.`a` = `t1`.`a`) and (`t2`.`b` = `t1`.`b`) and (`t2`.`c` = `t1`.`c`))))"
          },
          {
            "transformations_to_nested_joins": {
              "transformations": [
                "JOIN_condition_to_WHERE",
                "parenthesis_removal"
              ],
              "expanded_query": "/* select#1 */ select `t2`.`a` AS `a`,`t2`.`b` AS `b`,`t2`.`c` AS `c`,`t2`.`d` AS `d`,`t1`.`a` AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d` from `t2` join `t1` where ((`t2`.`a` = `t1`.`a`) and (`t2`.`b` = `t1`.`b`) and (`t2`.`c` = `t1`.`c`))"
            }
          }
        ]
      }
    },
    {
      "join_optimization": {
        "select#": 1,
        "steps": [
          {
            "condition_processing": {
              "condition": "WHERE",
              "original_condition": "((`t2`.`a` = `t1`.`a`) and (`t2`.`b` = `t1`.`b`) and (`t2`.`c` = `t1`.`c`))",
              "steps": [
                {
                  "transformation": "equality_propagation",
                  "resulting_condition": "(multiple equal(`t2`.`a`, `t1`.`a`) and multiple equal(`t2`.`b`, `t1`.`b`) and multiple equal(`t2`.`c`, `t1`.`c`))"
                },
                {
                  "transformation": "constant_propagation",
                  "resulting_condition": "(multiple equal(`t2`.`a`, `t1`.`a`) and multiple equal(`t2`.`b`, `t1`.`b`) and multiple equal(`t2`.`c`, `t1`.`c`))"
                },
                {
                  "transformation": "trivial_condition_removal",
                  "resulting_condition": "(multiple equal(`t2`.`a`, `t1`.`a`) and multiple equal(`t2`.`b`, `t1`.`b`) and multiple equal(`t2`.`c`, `t1`.`c`))"
                }
              ]
            }
          },
          {
            "substitute_generated_columns": {
            }
          },
          {
            "table_dependencies": [
              {
                "table": "`t2`",
                "row_may_be_null": false,
                "map_bit": 0,
                "depends_on_map_bits": [
                ]
              },
              {
                "table": "`t1`",
                "row_may_be_null": false,
                "map_bit": 1,
                "depends_on_map_bits": [
                ]
              }
            ]
          },
          {
            "ref_optimizer_key_uses": [
              {
                "table": "`t1`",
                "field": "a",
                "equals": "`t2`.`a`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "c",
                "equals": "`t2`.`c`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "`t2`.`a`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "b",
                "equals": "`t2`.`b`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "`t2`.`a`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "b",
                "equals": "`t2`.`b`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "c",
                "equals": "`t2`.`c`",
                "null_rejecting": true
              }
            ]
          },
          {
            "rows_estimation": [
              {
                "table": "`t2`",
                "table_scan": {
                  "rows": 2,
                  "cost": 2
                }
              },
              {
                "table": "`t1`",
                "table_scan": {
                  "rows": 9,
                  "cost": 8
                }
              }
            ]
          },
          {
            "considered_execution_plans": [
              {
                "plan_prefix": [
                ],
                "table": "`t2`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "rows_to_scan": 2,
                      "access_type": "scan",
                      "resulting_rows": 2,
                      "cost": 2.4,
                      "chosen": true
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 2,
                "cost_for_plan": 2.4,
                "rest_of_plan": [
                  {
                    "plan_prefix": [
                      "`t2`"
                    ],
                    "table": "`t1`",
                    "best_access_path": {
                      "considered_access_paths": [
                        {
                          "access_type": "ref",
                          "index": "idx_ac",
                          "rows": 2,
                          "cost": 4.8,
                          "chosen": true
                        },
                        {
                          "access_type": "ref",
                          "index": "idx_ab",
                          "rows": 2,
                          "cost": 4.8,
                          "chosen": false
                        },
                        {
                          "access_type": "ref",
                          "index": "idx_abc",
                          "rows": 2,
                          "cost": 4.8,
                          "chosen": false
                        },
                        {
                          "access_type": "scan",
                          "cost": 9.8,
                          "rows": 9,
                          "chosen": false,
                          "cause": "cost"
                        }
                      ]
                    },
                    "condition_filtering_pct": 100,
                    "rows_for_plan": 4,
                    "cost_for_plan": 7.2,
                    "chosen": true
                  }
                ]
              },
              {
                "plan_prefix": [
                ],
                "table": "`t1`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "access_type": "ref",
                      "index": "idx_ac",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_ab",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_abc",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "rows_to_scan": 9,
                      "access_type": "scan",
                      "resulting_rows": 9,
                      "cost": 9.8,
                      "chosen": true
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 9,
                "cost_for_plan": 9.8,
                "pruned_by_cost": true
              }
            ]
          },
          {
            "attaching_conditions_to_tables": {
              "original_condition": "((`t1`.`c` = `t2`.`c`) and (`t1`.`b` = `t2`.`b`) and (`t1`.`a` = `t2`.`a`))",
              "attached_conditions_computation": [
              ],
              "attached_conditions_summary": [
                {
                  "table": "`t2`",
                  "attached": "((`t2`.`a` is not null) and (`t2`.`c` is not null))"
                },
                {
                  "table": "`t1`",
                  "attached": "(`t1`.`b` = `t2`.`b`)"
                }
              ]
            }
          },
          {
            "refine_plan": [
              {
                "table": "`t2`"
              },
              {
                "table": "`t1`"
              }
            ]
          }
        ]
      }
    },
    {
      "join_execution": {
        "select#": 1,
        "steps": [
        ]
      }
    }
  ]
}	0	0
explain select * from t2 join t1 on t2.a=t1.a and t2.b=t1.b and t2.c=t1.c;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	ALL	NULL	NULL	NULL	NULL	2	100.00	Using where with pushed condition ((`db_ref_more_key_sequoiadb`.`t2`.`a` is not null) and (`db_ref_more_key_sequoiadb`.`t2`.`c` is not null))
1	SIMPLE	t1	NULL	ref	idx_ac,idx_ab,idx_abc	idx_ac	10	db_ref_more_key_sequoiadb.t2.a,db_ref_more_key_sequoiadb.t2.c	2	11.11	Using where
Warnings:
Note	1003	/* select#1 */ select `db_ref_more_key_sequoiadb`.`t2`.`a` AS `a`,`db_ref_more_key_sequoiadb`.`t2`.`b` AS `b`,`db_ref_more_key_sequoiadb`.`t2`.`c` AS `c`,`db_ref_more_key_sequoiadb`.`t2`.`d` AS `d`,`db_ref_more_key_sequoiadb`.`t1`.`a` AS `a`,`db_ref_more_key_sequoiadb`.`t1`.`b` AS `b`,`db_ref_more_key_sequoiadb`.`t1`.`c` AS `c`,`db_ref_more_key_sequoiadb`.`t1`.`d` AS `d` from `db_ref_more_key_sequoiadb`.`t2` join `db_ref_more_key_sequoiadb`.`t1` where ((`db_ref_more_key_sequoiadb`.`t1`.`c` = `db_ref_more_key_sequoiadb`.`t2`.`c`) and (`db_ref_more_key_sequoiadb`.`t1`.`b` = `db_ref_more_key_sequoiadb`.`t2`.`b`) and (`db_ref_more_key_sequoiadb`.`t1`.`a` = `db_ref_more_key_sequoiadb`.`t2`.`a`))
analyze table t1,t2;
Table	Op	Msg_type	Msg_text
db_ref_more_key_sequoiadb.t1	analyze	status	OK
db_ref_more_key_sequoiadb.t2	analyze	status	OK
select * from t1 where a=1 and c=0;
a	b	c	d
SELECT * FROM information_schema.optimizer_trace;
QUERY	TRACE	MISSING_BYTES_BEYOND_MAX_MEM_SIZE	INSUFFICIENT_PRIVILEGES
select * from t1 where a=1 and c=0	{
  "steps": [
    {
      "join_preparation": {
        "select#": 1,
        "steps": [
          {
            "expanded_query": "/* select#1 */ select `t1`.`a` AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d` from `t1` where ((`t1`.`a` = 1) and (`t1`.`c` = 0))"
          }
        ]
      }
    },
    {
      "join_optimization": {
        "select#": 1,
        "steps": [
          {
            "condition_processing": {
              "condition": "WHERE",
              "original_condition": "((`t1`.`a` = 1) and (`t1`.`c` = 0))",
              "steps": [
                {
                  "transformation": "equality_propagation",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(0, `t1`.`c`))"
                },
                {
                  "transformation": "constant_propagation",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(0, `t1`.`c`))"
                },
                {
                  "transformation": "trivial_condition_removal",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(0, `t1`.`c`))"
                }
              ]
            }
          },
          {
            "substitute_generated_columns": {
            }
          },
          {
            "table_dependencies": [
              {
                "table": "`t1`",
                "row_may_be_null": false,
                "map_bit": 0,
                "depends_on_map_bits": [
                ]
              }
            ]
          },
          {
            "ref_optimizer_key_uses": [
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "c",
                "equals": "0",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              }
            ]
          },
          {
            "rows_estimation": [
              {
                "table": "`t1`",
                "range_analysis": {
                  "table_scan": {
                    "rows": 9,
                    "cost": 11.9
                  },
                  "potential_range_indexes": [
                    {
                      "index": "idx_ac",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "c"
                      ]
                    },
                    {
                      "index": "idx_ab",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "b"
                      ]
                    },
                    {
                      "index": "idx_abc",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "b",
                        "c"
                      ]
                    }
                  ],
                  "setup_range_conditions": [
                  ],
                  "group_index_range": {
                    "chosen": false,
                    "cause": "not_group_by_or_distinct"
                  },
                  "analyzing_range_alternatives": {
                    "range_scan_alternatives": [
                      {
                        "index": "idx_ac",
                        "ranges": [
                          "1 <= a <= 1 AND 0 <= c <= 0"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": true,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 2,
                        "cost": 3.41,
                        "chosen": true
                      },
                      {
                        "index": "idx_ab",
                        "ranges": [
                          "1 <= a <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": false,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 9,
                        "cost": 11.81,
                        "chosen": false,
                        "cause": "cost"
                      },
                      {
                        "index": "idx_abc",
                        "ranges": [
                          "1 <= a <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": false,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 9,
                        "cost": 11.81,
                        "chosen": false,
                        "cause": "cost"
                      }
                    ],
                    "analyzing_roworder_intersect": {
                      "usable": false,
                      "cause": "too_few_roworder_scans"
                    }
                  },
                  "chosen_range_access_summary": {
                    "range_access_plan": {
                      "type": "range_scan",
                      "index": "idx_ac",
                      "rows": 2,
                      "ranges": [
                        "1 <= a <= 1 AND 0 <= c <= 0"
                      ]
                    },
                    "rows_for_plan": 2,
                    "cost_for_plan": 3.41,
                    "chosen": true
                  }
                }
              }
            ]
          },
          {
            "considered_execution_plans": [
              {
                "plan_prefix": [
                ],
                "table": "`t1`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "access_type": "ref",
                      "index": "idx_ac",
                      "rows": 2,
                      "cost": 2.4,
                      "chosen": true
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_ab",
                      "rows": 9,
                      "cost": 3.8,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_abc",
                      "rows": 9,
                      "cost": 3.8,
                      "chosen": false
                    },
                    {
                      "access_type": "range",
                      "range_details": {
                        "used_index": "idx_ac"
                      },
                      "chosen": false,
                      "cause": "heuristic_index_cheaper"
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 2,
                "cost_for_plan": 2.4,
                "chosen": true
              }
            ]
          },
          {
            "attaching_conditions_to_tables": {
              "original_condition": "((`t1`.`c` = 0) and (`t1`.`a` = 1))",
              "attached_conditions_computation": [
              ],
              "attached_conditions_summary": [
                {
                  "table": "`t1`",
                  "attached": null
                }
              ]
            }
          },
          {
            "refine_plan": [
              {
                "table": "`t1`"
              }
            ]
          }
        ]
      }
    },
    {
      "join_execution": {
        "select#": 1,
        "steps": [
        ]
      }
    }
  ]
}	0	0
explain select * from t1 where a=1 and c=0;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	idx_ac,idx_ab,idx_abc	idx_ac	10	const,const	2	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `db_ref_more_key_sequoiadb`.`t1`.`a` AS `a`,`db_ref_more_key_sequoiadb`.`t1`.`b` AS `b`,`db_ref_more_key_sequoiadb`.`t1`.`c` AS `c`,`db_ref_more_key_sequoiadb`.`t1`.`d` AS `d` from `db_ref_more_key_sequoiadb`.`t1` where ((`db_ref_more_key_sequoiadb`.`t1`.`c` = 0) and (`db_ref_more_key_sequoiadb`.`t1`.`a` = 1))
flush tables;
set session ref_prefer_more_keypart = on;
select * from t1 where a=1 and d=1;
a	b	c	d
1	1	1	1
SELECT * FROM information_schema.optimizer_trace;
QUERY	TRACE	MISSING_BYTES_BEYOND_MAX_MEM_SIZE	INSUFFICIENT_PRIVILEGES
select * from t1 where a=1 and d=1	{
  "steps": [
    {
      "join_preparation": {
        "select#": 1,
        "steps": [
          {
            "expanded_query": "/* select#1 */ select `t1`.`a` AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d` from `t1` where ((`t1`.`a` = 1) and (`t1`.`d` = 1))"
          }
        ]
      }
    },
    {
      "join_optimization": {
        "select#": 1,
        "steps": [
          {
            "condition_processing": {
              "condition": "WHERE",
              "original_condition": "((`t1`.`a` = 1) and (`t1`.`d` = 1))",
              "steps": [
                {
                  "transformation": "equality_propagation",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(1, `t1`.`d`))"
                },
                {
                  "transformation": "constant_propagation",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(1, `t1`.`d`))"
                },
                {
                  "transformation": "trivial_condition_removal",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(1, `t1`.`d`))"
                }
              ]
            }
          },
          {
            "substitute_generated_columns": {
            }
          },
          {
            "table_dependencies": [
              {
                "table": "`t1`",
                "row_may_be_null": false,
                "map_bit": 0,
                "depends_on_map_bits": [
                ]
              }
            ]
          },
          {
            "ref_optimizer_key_uses": [
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              }
            ]
          },
          {
            "rows_estimation": [
              {
                "table": "`t1`",
                "range_analysis": {
                  "table_scan": {
                    "rows": 9,
                    "cost": 11.9
                  },
                  "potential_range_indexes": [
                    {
                      "index": "idx_ac",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "c"
                      ]
                    },
                    {
                      "index": "idx_ab",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "b"
                      ]
                    },
                    {
                      "index": "idx_abc",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "b",
                        "c"
                      ]
                    }
                  ],
                  "setup_range_conditions": [
                  ],
                  "group_index_range": {
                    "chosen": false,
                    "cause": "not_group_by_or_distinct"
                  },
                  "analyzing_range_alternatives": {
                    "range_scan_alternatives": [
                      {
                        "index": "idx_ac",
                        "ranges": [
                          "1 <= a <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": false,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 9,
                        "cost": 11.81,
                        "chosen": true
                      },
                      {
                        "index": "idx_ab",
                        "ranges": [
                          "1 <= a <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": false,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 9,
                        "cost": 11.81,
                        "chosen": false,
                        "cause": "cost"
                      },
                      {
                        "index": "idx_abc",
                        "ranges": [
                          "1 <= a <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": false,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 9,
                        "cost": 11.81,
                        "chosen": false,
                        "cause": "cost"
                      }
                    ],
                    "analyzing_roworder_intersect": {
                      "usable": false,
                      "cause": "too_few_roworder_scans"
                    }
                  },
                  "chosen_range_access_summary": {
                    "range_access_plan": {
                      "type": "range_scan",
                      "index": "idx_ac",
                      "rows": 9,
                      "ranges": [
                        "1 <= a <= 1"
                      ]
                    },
                    "rows_for_plan": 9,
                    "cost_for_plan": 11.81,
                    "chosen": true
                  }
                }
              }
            ]
          },
          {
            "considered_execution_plans": [
              {
                "plan_prefix": [
                ],
                "table": "`t1`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "access_type": "ref",
                      "index": "idx_ac",
                      "rows": 9,
                      "cost": 3.8,
                      "chosen": true
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_ab",
                      "rows": 9,
                      "cost": 3.8,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_abc",
                      "rows": 9,
                      "cost": 3.8,
                      "chosen": false
                    },
                    {
                      "access_type": "range",
                      "range_details": {
                        "used_index": "idx_ac"
                      },
                      "chosen": false,
                      "cause": "heuristic_index_cheaper"
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 9,
                "cost_for_plan": 3.8,
                "chosen": true
              }
            ]
          },
          {
            "attaching_conditions_to_tables": {
              "original_condition": "((`t1`.`d` = 1) and (`t1`.`a` = 1))",
              "attached_conditions_computation": [
              ],
              "attached_conditions_summary": [
                {
                  "table": "`t1`",
                  "attached": "(`t1`.`d` = 1)"
                }
              ]
            }
          },
          {
            "refine_plan": [
              {
                "table": "`t1`"
              }
            ]
          }
        ]
      }
    },
    {
      "join_execution": {
        "select#": 1,
        "steps": [
        ]
      }
    }
  ]
}	0	0
explain select * from t1 where a=1 and d=1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	idx_ac,idx_ab,idx_abc	idx_ac	5	const	9	11.11	Using where with pushed condition (`db_ref_more_key_sequoiadb`.`t1`.`d` = 1)
Warnings:
Note	1003	/* select#1 */ select `db_ref_more_key_sequoiadb`.`t1`.`a` AS `a`,`db_ref_more_key_sequoiadb`.`t1`.`b` AS `b`,`db_ref_more_key_sequoiadb`.`t1`.`c` AS `c`,`db_ref_more_key_sequoiadb`.`t1`.`d` AS `d` from `db_ref_more_key_sequoiadb`.`t1` where ((`db_ref_more_key_sequoiadb`.`t1`.`d` = 1) and (`db_ref_more_key_sequoiadb`.`t1`.`a` = 1))
select * from t2 join t1 on t2.a=t1.a and t2.b=t1.d;
a	b	c	d	a	b	c	d
1	2	3	4	1	2	2	2
SELECT * FROM information_schema.optimizer_trace;
QUERY	TRACE	MISSING_BYTES_BEYOND_MAX_MEM_SIZE	INSUFFICIENT_PRIVILEGES
select * from t2 join t1 on t2.a=t1.a and t2.b=t1.d	{
  "steps": [
    {
      "join_preparation": {
        "select#": 1,
        "steps": [
          {
            "expanded_query": "/* select#1 */ select `t2`.`a` AS `a`,`t2`.`b` AS `b`,`t2`.`c` AS `c`,`t2`.`d` AS `d`,`t1`.`a` AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d` from (`t2` join `t1` on(((`t2`.`a` = `t1`.`a`) and (`t2`.`b` = `t1`.`d`))))"
          },
          {
            "transformations_to_nested_joins": {
              "transformations": [
                "JOIN_condition_to_WHERE",
                "parenthesis_removal"
              ],
              "expanded_query": "/* select#1 */ select `t2`.`a` AS `a`,`t2`.`b` AS `b`,`t2`.`c` AS `c`,`t2`.`d` AS `d`,`t1`.`a` AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d` from `t2` join `t1` where ((`t2`.`a` = `t1`.`a`) and (`t2`.`b` = `t1`.`d`))"
            }
          }
        ]
      }
    },
    {
      "join_optimization": {
        "select#": 1,
        "steps": [
          {
            "condition_processing": {
              "condition": "WHERE",
              "original_condition": "((`t2`.`a` = `t1`.`a`) and (`t2`.`b` = `t1`.`d`))",
              "steps": [
                {
                  "transformation": "equality_propagation",
                  "resulting_condition": "(multiple equal(`t2`.`a`, `t1`.`a`) and multiple equal(`t2`.`b`, `t1`.`d`))"
                },
                {
                  "transformation": "constant_propagation",
                  "resulting_condition": "(multiple equal(`t2`.`a`, `t1`.`a`) and multiple equal(`t2`.`b`, `t1`.`d`))"
                },
                {
                  "transformation": "trivial_condition_removal",
                  "resulting_condition": "(multiple equal(`t2`.`a`, `t1`.`a`) and multiple equal(`t2`.`b`, `t1`.`d`))"
                }
              ]
            }
          },
          {
            "substitute_generated_columns": {
            }
          },
          {
            "table_dependencies": [
              {
                "table": "`t2`",
                "row_may_be_null": false,
                "map_bit": 0,
                "depends_on_map_bits": [
                ]
              },
              {
                "table": "`t1`",
                "row_may_be_null": false,
                "map_bit": 1,
                "depends_on_map_bits": [
                ]
              }
            ]
          },
          {
            "ref_optimizer_key_uses": [
              {
                "table": "`t1`",
                "field": "a",
                "equals": "`t2`.`a`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "`t2`.`a`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "`t2`.`a`",
                "null_rejecting": true
              }
            ]
          },
          {
            "rows_estimation": [
              {
                "table": "`t2`",
                "table_scan": {
                  "rows": 2,
                  "cost": 2
                }
              },
              {
                "table": "`t1`",
                "table_scan": {
                  "rows": 9,
                  "cost": 8
                }
              }
            ]
          },
          {
            "considered_execution_plans": [
              {
                "plan_prefix": [
                ],
                "table": "`t2`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "rows_to_scan": 2,
                      "access_type": "scan",
                      "resulting_rows": 2,
                      "cost": 2.4,
                      "chosen": true
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 2,
                "cost_for_plan": 2.4,
                "rest_of_plan": [
                  {
                    "plan_prefix": [
                      "`t2`"
                    ],
                    "table": "`t1`",
                    "best_access_path": {
                      "considered_access_paths": [
                        {
                          "access_type": "ref",
                          "index": "idx_ac",
                          "rows": 9,
                          "cost": 7.6,
                          "chosen": true
                        },
                        {
                          "access_type": "ref",
                          "index": "idx_ab",
                          "rows": 9,
                          "cost": 7.6,
                          "chosen": false
                        },
                        {
                          "access_type": "ref",
                          "index": "idx_abc",
                          "rows": 9,
                          "cost": 7.6,
                          "chosen": false
                        },
                        {
                          "rows_to_scan": 9,
                          "access_type": "scan",
                          "using_join_cache": true,
                          "buffers_needed": 1,
                          "resulting_rows": 9,
                          "cost": 11.601,
                          "chosen": false
                        }
                      ]
                    },
                    "condition_filtering_pct": 100,
                    "rows_for_plan": 18,
                    "cost_for_plan": 10,
                    "chosen": true
                  }
                ]
              },
              {
                "plan_prefix": [
                ],
                "table": "`t1`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "access_type": "ref",
                      "index": "idx_ac",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_ab",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_abc",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "rows_to_scan": 9,
                      "access_type": "scan",
                      "resulting_rows": 9,
                      "cost": 9.8,
                      "chosen": true
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 9,
                "cost_for_plan": 9.8,
                "pruned_by_heuristic": true
              }
            ]
          },
          {
            "attaching_conditions_to_tables": {
              "original_condition": "((`t1`.`d` = `t2`.`b`) and (`t1`.`a` = `t2`.`a`))",
              "attached_conditions_computation": [
              ],
              "attached_conditions_summary": [
                {
                  "table": "`t2`",
                  "attached": "(`t2`.`a` is not null)"
                },
                {
                  "table": "`t1`",
                  "attached": "(`t1`.`d` = `t2`.`b`)"
                }
              ]
            }
          },
          {
            "refine_plan": [
              {
                "table": "`t2`"
              },
              {
                "table": "`t1`"
              }
            ]
          }
        ]
      }
    },
    {
      "join_execution": {
        "select#": 1,
        "steps": [
        ]
      }
    }
  ]
}	0	0
explain select * from t2 join t1 on t2.a=t1.a and t2.b=t1.d;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	ALL	NULL	NULL	NULL	NULL	2	100.00	Using where with pushed condition (`db_ref_more_key_sequoiadb`.`t2`.`a` is not null)
1	SIMPLE	t1	NULL	ref	idx_ac,idx_ab,idx_abc	idx_ac	5	db_ref_more_key_sequoiadb.t2.a	9	11.11	Using where
Warnings:
Note	1003	/* select#1 */ select `db_ref_more_key_sequoiadb`.`t2`.`a` AS `a`,`db_ref_more_key_sequoiadb`.`t2`.`b` AS `b`,`db_ref_more_key_sequoiadb`.`t2`.`c` AS `c`,`db_ref_more_key_sequoiadb`.`t2`.`d` AS `d`,`db_ref_more_key_sequoiadb`.`t1`.`a` AS `a`,`db_ref_more_key_sequoiadb`.`t1`.`b` AS `b`,`db_ref_more_key_sequoiadb`.`t1`.`c` AS `c`,`db_ref_more_key_sequoiadb`.`t1`.`d` AS `d` from `db_ref_more_key_sequoiadb`.`t2` join `db_ref_more_key_sequoiadb`.`t1` where ((`db_ref_more_key_sequoiadb`.`t1`.`d` = `db_ref_more_key_sequoiadb`.`t2`.`b`) and (`db_ref_more_key_sequoiadb`.`t1`.`a` = `db_ref_more_key_sequoiadb`.`t2`.`a`))
select * from t1 where a=1 and b=1 and c=1;
a	b	c	d
1	1	1	1
SELECT * FROM information_schema.optimizer_trace;
QUERY	TRACE	MISSING_BYTES_BEYOND_MAX_MEM_SIZE	INSUFFICIENT_PRIVILEGES
select * from t1 where a=1 and b=1 and c=1	{
  "steps": [
    {
      "join_preparation": {
        "select#": 1,
        "steps": [
          {
            "expanded_query": "/* select#1 */ select `t1`.`a` AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d` from `t1` where ((`t1`.`a` = 1) and (`t1`.`b` = 1) and (`t1`.`c` = 1))"
          }
        ]
      }
    },
    {
      "join_optimization": {
        "select#": 1,
        "steps": [
          {
            "condition_processing": {
              "condition": "WHERE",
              "original_condition": "((`t1`.`a` = 1) and (`t1`.`b` = 1) and (`t1`.`c` = 1))",
              "steps": [
                {
                  "transformation": "equality_propagation",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(1, `t1`.`b`) and multiple equal(1, `t1`.`c`))"
                },
                {
                  "transformation": "constant_propagation",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(1, `t1`.`b`) and multiple equal(1, `t1`.`c`))"
                },
                {
                  "transformation": "trivial_condition_removal",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(1, `t1`.`b`) and multiple equal(1, `t1`.`c`))"
                }
              ]
            }
          },
          {
            "substitute_generated_columns": {
            }
          },
          {
            "table_dependencies": [
              {
                "table": "`t1`",
                "row_may_be_null": false,
                "map_bit": 0,
                "depends_on_map_bits": [
                ]
              }
            ]
          },
          {
            "ref_optimizer_key_uses": [
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "c",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "b",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "b",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "c",
                "equals": "1",
                "null_rejecting": false
              }
            ]
          },
          {
            "rows_estimation": [
              {
                "table": "`t1`",
                "range_analysis": {
                  "table_scan": {
                    "rows": 9,
                    "cost": 11.9
                  },
                  "potential_range_indexes": [
                    {
                      "index": "idx_ac",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "c"
                      ]
                    },
                    {
                      "index": "idx_ab",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "b"
                      ]
                    },
                    {
                      "index": "idx_abc",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "b",
                        "c"
                      ]
                    }
                  ],
                  "setup_range_conditions": [
                  ],
                  "group_index_range": {
                    "chosen": false,
                    "cause": "not_group_by_or_distinct"
                  },
                  "analyzing_range_alternatives": {
                    "range_scan_alternatives": [
                      {
                        "index": "idx_ac",
                        "ranges": [
                          "1 <= a <= 1 AND 1 <= c <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": true,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 2,
                        "cost": 3.41,
                        "chosen": true
                      },
                      {
                        "index": "idx_ab",
                        "ranges": [
                          "1 <= a <= 1 AND 1 <= b <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": true,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 2,
                        "cost": 3.41,
                        "chosen": false,
                        "cause": "cost"
                      },
                      {
                        "index": "idx_abc",
                        "ranges": [
                          "1 <= a <= 1 AND 1 <= b <= 1 AND 1 <= c <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": true,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 2,
                        "cost": 3.41,
                        "chosen": false,
                        "cause": "cost"
                      }
                    ],
                    "analyzing_roworder_intersect": {
                      "intersecting_indexes": [
                        {
                          "index": "idx_abc",
                          "index_scan_cost": 1.0008,
                          "cumulated_index_scan_cost": 1.0008,
                          "disk_sweep_cost": 1.7563,
                          "cumulated_total_cost": 2.7571,
                          "usable": true,
                          "matching_rows_now": 2,
                          "isect_covering_with_this_index": false,
                          "chosen": true
                        },
                        {
                          "index": "idx_ab",
                          "cumulated_total_cost": 2.7571,
                          "usable": false,
                          "cause": "does_not_reduce_cost_of_intersect"
                        },
                        {
                          "index": "idx_ac",
                          "cumulated_total_cost": 2.7571,
                          "usable": false,
                          "cause": "does_not_reduce_cost_of_intersect"
                        }
                      ],
                      "clustered_pk": {
                        "clustered_pk_added_to_intersect": false,
                        "cause": "no_clustered_pk_index"
                      },
                      "chosen": false,
                      "cause": "too_few_indexes_to_merge"
                    }
                  },
                  "chosen_range_access_summary": {
                    "range_access_plan": {
                      "type": "range_scan",
                      "index": "idx_ac",
                      "rows": 2,
                      "ranges": [
                        "1 <= a <= 1 AND 1 <= c <= 1"
                      ]
                    },
                    "rows_for_plan": 2,
                    "cost_for_plan": 3.41,
                    "chosen": true
                  }
                }
              }
            ]
          },
          {
            "considered_execution_plans": [
              {
                "plan_prefix": [
                ],
                "table": "`t1`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "access_type": "ref",
                      "index": "idx_ac",
                      "rows": 2,
                      "cost": 2.4,
                      "chosen": true
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_ab",
                      "rows": 2,
                      "cost": 2.4,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_abc",
                      "rows": 2,
                      "cost": 2.4,
                      "chosen": true
                    },
                    {
                      "rows_to_scan": 2,
                      "access_type": "range",
                      "range_details": {
                        "used_index": "idx_ac"
                      },
                      "resulting_rows": 2,
                      "cost": 3.81,
                      "chosen": false
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 2,
                "cost_for_plan": 2.4,
                "chosen": true
              }
            ]
          },
          {
            "attaching_conditions_to_tables": {
              "original_condition": "((`t1`.`c` = 1) and (`t1`.`b` = 1) and (`t1`.`a` = 1))",
              "attached_conditions_computation": [
              ],
              "attached_conditions_summary": [
                {
                  "table": "`t1`",
                  "attached": null
                }
              ]
            }
          },
          {
            "refine_plan": [
              {
                "table": "`t1`"
              }
            ]
          }
        ]
      }
    },
    {
      "join_execution": {
        "select#": 1,
        "steps": [
        ]
      }
    }
  ]
}	0	0
explain select * from t1 where a=1 and b=1 and c=1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	idx_ac,idx_ab,idx_abc	idx_abc	15	const,const,const	2	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `db_ref_more_key_sequoiadb`.`t1`.`a` AS `a`,`db_ref_more_key_sequoiadb`.`t1`.`b` AS `b`,`db_ref_more_key_sequoiadb`.`t1`.`c` AS `c`,`db_ref_more_key_sequoiadb`.`t1`.`d` AS `d` from `db_ref_more_key_sequoiadb`.`t1` where ((`db_ref_more_key_sequoiadb`.`t1`.`c` = 1) and (`db_ref_more_key_sequoiadb`.`t1`.`b` = 1) and (`db_ref_more_key_sequoiadb`.`t1`.`a` = 1))
select * from t2 join t1 on t2.a=t1.a and t2.b=t1.b and t2.c=t1.c;
a	b	c	d	a	b	c	d
SELECT * FROM information_schema.optimizer_trace;
QUERY	TRACE	MISSING_BYTES_BEYOND_MAX_MEM_SIZE	INSUFFICIENT_PRIVILEGES
select * from t2 join t1 on t2.a=t1.a and t2.b=t1.b and t2.c=t1.c	{
  "steps": [
    {
      "join_preparation": {
        "select#": 1,
        "steps": [
          {
            "expanded_query": "/* select#1 */ select `t2`.`a` AS `a`,`t2`.`b` AS `b`,`t2`.`c` AS `c`,`t2`.`d` AS `d`,`t1`.`a` AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d` from (`t2` join `t1` on(((`t2`.`a` = `t1`.`a`) and (`t2`.`b` = `t1`.`b`) and (`t2`.`c` = `t1`.`c`))))"
          },
          {
            "transformations_to_nested_joins": {
              "transformations": [
                "JOIN_condition_to_WHERE",
                "parenthesis_removal"
              ],
              "expanded_query": "/* select#1 */ select `t2`.`a` AS `a`,`t2`.`b` AS `b`,`t2`.`c` AS `c`,`t2`.`d` AS `d`,`t1`.`a` AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d` from `t2` join `t1` where ((`t2`.`a` = `t1`.`a`) and (`t2`.`b` = `t1`.`b`) and (`t2`.`c` = `t1`.`c`))"
            }
          }
        ]
      }
    },
    {
      "join_optimization": {
        "select#": 1,
        "steps": [
          {
            "condition_processing": {
              "condition": "WHERE",
              "original_condition": "((`t2`.`a` = `t1`.`a`) and (`t2`.`b` = `t1`.`b`) and (`t2`.`c` = `t1`.`c`))",
              "steps": [
                {
                  "transformation": "equality_propagation",
                  "resulting_condition": "(multiple equal(`t2`.`a`, `t1`.`a`) and multiple equal(`t2`.`b`, `t1`.`b`) and multiple equal(`t2`.`c`, `t1`.`c`))"
                },
                {
                  "transformation": "constant_propagation",
                  "resulting_condition": "(multiple equal(`t2`.`a`, `t1`.`a`) and multiple equal(`t2`.`b`, `t1`.`b`) and multiple equal(`t2`.`c`, `t1`.`c`))"
                },
                {
                  "transformation": "trivial_condition_removal",
                  "resulting_condition": "(multiple equal(`t2`.`a`, `t1`.`a`) and multiple equal(`t2`.`b`, `t1`.`b`) and multiple equal(`t2`.`c`, `t1`.`c`))"
                }
              ]
            }
          },
          {
            "substitute_generated_columns": {
            }
          },
          {
            "table_dependencies": [
              {
                "table": "`t2`",
                "row_may_be_null": false,
                "map_bit": 0,
                "depends_on_map_bits": [
                ]
              },
              {
                "table": "`t1`",
                "row_may_be_null": false,
                "map_bit": 1,
                "depends_on_map_bits": [
                ]
              }
            ]
          },
          {
            "ref_optimizer_key_uses": [
              {
                "table": "`t1`",
                "field": "a",
                "equals": "`t2`.`a`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "c",
                "equals": "`t2`.`c`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "`t2`.`a`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "b",
                "equals": "`t2`.`b`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "`t2`.`a`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "b",
                "equals": "`t2`.`b`",
                "null_rejecting": true
              },
              {
                "table": "`t1`",
                "field": "c",
                "equals": "`t2`.`c`",
                "null_rejecting": true
              }
            ]
          },
          {
            "rows_estimation": [
              {
                "table": "`t2`",
                "table_scan": {
                  "rows": 2,
                  "cost": 2
                }
              },
              {
                "table": "`t1`",
                "table_scan": {
                  "rows": 9,
                  "cost": 8
                }
              }
            ]
          },
          {
            "considered_execution_plans": [
              {
                "plan_prefix": [
                ],
                "table": "`t2`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "rows_to_scan": 2,
                      "access_type": "scan",
                      "resulting_rows": 2,
                      "cost": 2.4,
                      "chosen": true
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 2,
                "cost_for_plan": 2.4,
                "rest_of_plan": [
                  {
                    "plan_prefix": [
                      "`t2`"
                    ],
                    "table": "`t1`",
                    "best_access_path": {
                      "considered_access_paths": [
                        {
                          "access_type": "ref",
                          "index": "idx_ac",
                          "rows": 1,
                          "cost": 2.4,
                          "chosen": true
                        },
                        {
                          "access_type": "ref",
                          "index": "idx_ab",
                          "rows": 1,
                          "cost": 2.4,
                          "chosen": false
                        },
                        {
                          "access_type": "ref",
                          "index": "idx_abc",
                          "rows": 1,
                          "cost": 2.4,
                          "chosen": true
                        },
                        {
                          "access_type": "scan",
                          "cost": 9.8,
                          "rows": 9,
                          "chosen": false,
                          "cause": "cost"
                        }
                      ]
                    },
                    "condition_filtering_pct": 100,
                    "rows_for_plan": 2,
                    "cost_for_plan": 4.8,
                    "chosen": true
                  }
                ]
              },
              {
                "plan_prefix": [
                ],
                "table": "`t1`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "access_type": "ref",
                      "index": "idx_ac",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_ab",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_abc",
                      "usable": false,
                      "chosen": false
                    },
                    {
                      "rows_to_scan": 9,
                      "access_type": "scan",
                      "resulting_rows": 9,
                      "cost": 9.8,
                      "chosen": true
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 9,
                "cost_for_plan": 9.8,
                "pruned_by_cost": true
              }
            ]
          },
          {
            "attaching_conditions_to_tables": {
              "original_condition": "((`t1`.`c` = `t2`.`c`) and (`t1`.`b` = `t2`.`b`) and (`t1`.`a` = `t2`.`a`))",
              "attached_conditions_computation": [
              ],
              "attached_conditions_summary": [
                {
                  "table": "`t2`",
                  "attached": "(((`t2`.`a` is not null) and (`t2`.`b` is not null)) and (`t2`.`c` is not null))"
                },
                {
                  "table": "`t1`",
                  "attached": null
                }
              ]
            }
          },
          {
            "refine_plan": [
              {
                "table": "`t2`"
              },
              {
                "table": "`t1`"
              }
            ]
          }
        ]
      }
    },
    {
      "join_execution": {
        "select#": 1,
        "steps": [
        ]
      }
    }
  ]
}	0	0
explain select * from t2 join t1 on t2.a=t1.a and t2.b=t1.b and t2.c=t1.c;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	ALL	NULL	NULL	NULL	NULL	2	100.00	Using where with pushed condition ((`db_ref_more_key_sequoiadb`.`t2`.`a` is not null) and (`db_ref_more_key_sequoiadb`.`t2`.`b` is not null) and (`db_ref_more_key_sequoiadb`.`t2`.`c` is not null))
1	SIMPLE	t1	NULL	ref	idx_ac,idx_ab,idx_abc	idx_abc	15	db_ref_more_key_sequoiadb.t2.a,db_ref_more_key_sequoiadb.t2.b,db_ref_more_key_sequoiadb.t2.c	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `db_ref_more_key_sequoiadb`.`t2`.`a` AS `a`,`db_ref_more_key_sequoiadb`.`t2`.`b` AS `b`,`db_ref_more_key_sequoiadb`.`t2`.`c` AS `c`,`db_ref_more_key_sequoiadb`.`t2`.`d` AS `d`,`db_ref_more_key_sequoiadb`.`t1`.`a` AS `a`,`db_ref_more_key_sequoiadb`.`t1`.`b` AS `b`,`db_ref_more_key_sequoiadb`.`t1`.`c` AS `c`,`db_ref_more_key_sequoiadb`.`t1`.`d` AS `d` from `db_ref_more_key_sequoiadb`.`t2` join `db_ref_more_key_sequoiadb`.`t1` where ((`db_ref_more_key_sequoiadb`.`t1`.`c` = `db_ref_more_key_sequoiadb`.`t2`.`c`) and (`db_ref_more_key_sequoiadb`.`t1`.`b` = `db_ref_more_key_sequoiadb`.`t2`.`b`) and (`db_ref_more_key_sequoiadb`.`t1`.`a` = `db_ref_more_key_sequoiadb`.`t2`.`a`))
analyze table t1,t2;
Table	Op	Msg_type	Msg_text
db_ref_more_key_sequoiadb.t1	analyze	status	OK
db_ref_more_key_sequoiadb.t2	analyze	status	OK
select * from t1 where a=1 and c=0;
a	b	c	d
SELECT * FROM information_schema.optimizer_trace;
QUERY	TRACE	MISSING_BYTES_BEYOND_MAX_MEM_SIZE	INSUFFICIENT_PRIVILEGES
select * from t1 where a=1 and c=0	{
  "steps": [
    {
      "join_preparation": {
        "select#": 1,
        "steps": [
          {
            "expanded_query": "/* select#1 */ select `t1`.`a` AS `a`,`t1`.`b` AS `b`,`t1`.`c` AS `c`,`t1`.`d` AS `d` from `t1` where ((`t1`.`a` = 1) and (`t1`.`c` = 0))"
          }
        ]
      }
    },
    {
      "join_optimization": {
        "select#": 1,
        "steps": [
          {
            "condition_processing": {
              "condition": "WHERE",
              "original_condition": "((`t1`.`a` = 1) and (`t1`.`c` = 0))",
              "steps": [
                {
                  "transformation": "equality_propagation",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(0, `t1`.`c`))"
                },
                {
                  "transformation": "constant_propagation",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(0, `t1`.`c`))"
                },
                {
                  "transformation": "trivial_condition_removal",
                  "resulting_condition": "(multiple equal(1, `t1`.`a`) and multiple equal(0, `t1`.`c`))"
                }
              ]
            }
          },
          {
            "substitute_generated_columns": {
            }
          },
          {
            "table_dependencies": [
              {
                "table": "`t1`",
                "row_may_be_null": false,
                "map_bit": 0,
                "depends_on_map_bits": [
                ]
              }
            ]
          },
          {
            "ref_optimizer_key_uses": [
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "c",
                "equals": "0",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              },
              {
                "table": "`t1`",
                "field": "a",
                "equals": "1",
                "null_rejecting": false
              }
            ]
          },
          {
            "rows_estimation": [
              {
                "table": "`t1`",
                "range_analysis": {
                  "table_scan": {
                    "rows": 9,
                    "cost": 11.9
                  },
                  "potential_range_indexes": [
                    {
                      "index": "idx_ac",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "c"
                      ]
                    },
                    {
                      "index": "idx_ab",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "b"
                      ]
                    },
                    {
                      "index": "idx_abc",
                      "usable": true,
                      "key_parts": [
                        "a",
                        "b",
                        "c"
                      ]
                    }
                  ],
                  "setup_range_conditions": [
                  ],
                  "group_index_range": {
                    "chosen": false,
                    "cause": "not_group_by_or_distinct"
                  },
                  "analyzing_range_alternatives": {
                    "range_scan_alternatives": [
                      {
                        "index": "idx_ac",
                        "ranges": [
                          "1 <= a <= 1 AND 0 <= c <= 0"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": true,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 2,
                        "cost": 3.41,
                        "chosen": true
                      },
                      {
                        "index": "idx_ab",
                        "ranges": [
                          "1 <= a <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": false,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 9,
                        "cost": 11.81,
                        "chosen": false,
                        "cause": "cost"
                      },
                      {
                        "index": "idx_abc",
                        "ranges": [
                          "1 <= a <= 1"
                        ],
                        "index_dives_for_eq_ranges": true,
                        "rowid_ordered": false,
                        "using_mrr": false,
                        "index_only": false,
                        "rows": 9,
                        "cost": 11.81,
                        "chosen": false,
                        "cause": "cost"
                      }
                    ],
                    "analyzing_roworder_intersect": {
                      "usable": false,
                      "cause": "too_few_roworder_scans"
                    }
                  },
                  "chosen_range_access_summary": {
                    "range_access_plan": {
                      "type": "range_scan",
                      "index": "idx_ac",
                      "rows": 2,
                      "ranges": [
                        "1 <= a <= 1 AND 0 <= c <= 0"
                      ]
                    },
                    "rows_for_plan": 2,
                    "cost_for_plan": 3.41,
                    "chosen": true
                  }
                }
              }
            ]
          },
          {
            "considered_execution_plans": [
              {
                "plan_prefix": [
                ],
                "table": "`t1`",
                "best_access_path": {
                  "considered_access_paths": [
                    {
                      "access_type": "ref",
                      "index": "idx_ac",
                      "rows": 2,
                      "cost": 2.4,
                      "chosen": true
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_ab",
                      "rows": 9,
                      "cost": 3.8,
                      "chosen": false
                    },
                    {
                      "access_type": "ref",
                      "index": "idx_abc",
                      "rows": 9,
                      "cost": 3.8,
                      "chosen": false
                    },
                    {
                      "access_type": "range",
                      "range_details": {
                        "used_index": "idx_ac"
                      },
                      "chosen": false,
                      "cause": "heuristic_index_cheaper"
                    }
                  ]
                },
                "condition_filtering_pct": 100,
                "rows_for_plan": 2,
                "cost_for_plan": 2.4,
                "chosen": true
              }
            ]
          },
          {
            "attaching_conditions_to_tables": {
              "original_condition": "((`t1`.`c` = 0) and (`t1`.`a` = 1))",
              "attached_conditions_computation": [
              ],
              "attached_conditions_summary": [
                {
                  "table": "`t1`",
                  "attached": null
                }
              ]
            }
          },
          {
            "refine_plan": [
              {
                "table": "`t1`"
              }
            ]
          }
        ]
      }
    },
    {
      "join_execution": {
        "select#": 1,
        "steps": [
        ]
      }
    }
  ]
}	0	0
explain select * from t1 where a=1 and c=0;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	idx_ac,idx_ab,idx_abc	idx_ac	10	const,const	2	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `db_ref_more_key_sequoiadb`.`t1`.`a` AS `a`,`db_ref_more_key_sequoiadb`.`t1`.`b` AS `b`,`db_ref_more_key_sequoiadb`.`t1`.`c` AS `c`,`db_ref_more_key_sequoiadb`.`t1`.`d` AS `d` from `db_ref_more_key_sequoiadb`.`t1` where ((`db_ref_more_key_sequoiadb`.`t1`.`c` = 0) and (`db_ref_more_key_sequoiadb`.`t1`.`a` = 1))
drop database db_ref_more_key_sequoiadb;

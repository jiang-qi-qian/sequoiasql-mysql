drop database if exists bka_non_equivalence_sequoiadb;
create database bka_non_equivalence_sequoiadb;
use bka_non_equivalence_sequoiadb;
CREATE TABLE t1 (c1 int, c2 int, c3 int, c4 int) ENGINE = sequoiadb;
ALTER TABLE t1 ADD INDEX c4321(c4, c3, c2, c1);
ALTER TABLE t1 ADD INDEX c321(c3, c2, c1);
ALTER TABLE t1 ADD INDEX c21(c2, c1);
INSERT INTO `t1` VALUES (0,1,6,6),
(0,7,6,0),
(0,7,7,3),
(0,7,8,1),
(0,9,5,8),
(0,9,7,9),
(1,9,9,0),
(2,8,5,2),
(2,8,6,5),
(2,8,6,7),
(2,8,6,7),
(2,8,7,2),
(2,9,0,4),
(3,7,6,8),
(3,7,7,6),
(3,8,0,6),
(3,9,3,1),
(3,9,6,5),
(3,9,7,7),
(4,9,3,9),
(5,6,6,2),
(5,6,6,3),
(5,7,0,9),
(5,7,8,2),
(5,7,9,5),
(5,8,6,7),
(5,8,7,1),
(5,9,1,8),
(6,6,3,9),
(6,9,4,6),
(6,9,7,0),
(6,9,9,7),
(7,7,2,2),
(7,7,2,9),
(7,7,3,3),
(7,7,6,1),
(7,7,6,9),
(7,8,8,7),
(7,9,3,7),
(7,9,4,3),
(7,9,5,1),
(7,9,5,9),
(7,9,6,1),
(7,9,8,4),
(8,8,5,3),
(8,8,6,6),
(8,9,9,1),
(9,8,4,6),
(9,9,9,0),
(9,9,9,8);
CREATE TABLE t2 LIKE t1;
INSERT INTO t2 SELECT * FROM t1;
SET SESSION optimizer_switch = 'mrr=on,batched_key_access=on';
EXPLAIN SELECT * FROM t1 INNER JOIN t2 ON t1.`c1` <= t2.`c2` AND t1.`c3` = t2.`c3` WHERE `t2`.`c2` <= 2 OR `t2`.`c1` IS NULL ;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	index	c321,c21	c4321	20	NULL	50	40.00	Using where with pushed condition (((`bka_non_equivalence_sequoiadb`.`t2`.`c2` <= 2) or isnull(`bka_non_equivalence_sequoiadb`.`t2`.`c1`)) and (`bka_non_equivalence_sequoiadb`.`t2`.`c3` is not null)); Using index
1	SIMPLE	t1	NULL	ref	c321	c321	5	bka_non_equivalence_sequoiadb.t2.c3	6	33.33	Using index condition; Using join buffer (Batched Key Access)
Warnings:
Note	1003	/* select#1 */ select `bka_non_equivalence_sequoiadb`.`t1`.`c1` AS `c1`,`bka_non_equivalence_sequoiadb`.`t1`.`c2` AS `c2`,`bka_non_equivalence_sequoiadb`.`t1`.`c3` AS `c3`,`bka_non_equivalence_sequoiadb`.`t1`.`c4` AS `c4`,`bka_non_equivalence_sequoiadb`.`t2`.`c1` AS `c1`,`bka_non_equivalence_sequoiadb`.`t2`.`c2` AS `c2`,`bka_non_equivalence_sequoiadb`.`t2`.`c3` AS `c3`,`bka_non_equivalence_sequoiadb`.`t2`.`c4` AS `c4` from `bka_non_equivalence_sequoiadb`.`t1` join `bka_non_equivalence_sequoiadb`.`t2` where ((`bka_non_equivalence_sequoiadb`.`t1`.`c3` = `bka_non_equivalence_sequoiadb`.`t2`.`c3`) and ((`bka_non_equivalence_sequoiadb`.`t2`.`c2` <= 2) or isnull(`bka_non_equivalence_sequoiadb`.`t2`.`c1`)) and (`bka_non_equivalence_sequoiadb`.`t1`.`c1` <= `bka_non_equivalence_sequoiadb`.`t2`.`c2`))
SELECT * FROM t1 INNER JOIN t2 ON t1.`c1` <= t2.`c2` AND t1.`c3` = t2.`c3` WHERE `t2`.`c2` <= 2 OR `t2`.`c1` IS NULL ;
c1	c2	c3	c4	c1	c2	c3	c4
0	1	6	6	0	1	6	6
0	7	6	0	0	1	6	6
SET SESSION optimizer_switch = 'mrr=off,batched_key_access=off';
EXPLAIN SELECT * FROM t1 INNER JOIN t2 ON t1.`c1` <= t2.`c2` AND t1.`c3` = t2.`c3` WHERE `t2`.`c2` <= 2 OR `t2`.`c1` IS NULL ;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	index	c321,c21	c4321	20	NULL	50	40.00	Using where with pushed condition (((`bka_non_equivalence_sequoiadb`.`t2`.`c2` <= 2) or isnull(`bka_non_equivalence_sequoiadb`.`t2`.`c1`)) and (`bka_non_equivalence_sequoiadb`.`t2`.`c3` is not null)); Using index
1	SIMPLE	t1	NULL	ref	c321	c321	5	bka_non_equivalence_sequoiadb.t2.c3	6	33.33	Using where
Warnings:
Note	1003	/* select#1 */ select `bka_non_equivalence_sequoiadb`.`t1`.`c1` AS `c1`,`bka_non_equivalence_sequoiadb`.`t1`.`c2` AS `c2`,`bka_non_equivalence_sequoiadb`.`t1`.`c3` AS `c3`,`bka_non_equivalence_sequoiadb`.`t1`.`c4` AS `c4`,`bka_non_equivalence_sequoiadb`.`t2`.`c1` AS `c1`,`bka_non_equivalence_sequoiadb`.`t2`.`c2` AS `c2`,`bka_non_equivalence_sequoiadb`.`t2`.`c3` AS `c3`,`bka_non_equivalence_sequoiadb`.`t2`.`c4` AS `c4` from `bka_non_equivalence_sequoiadb`.`t1` join `bka_non_equivalence_sequoiadb`.`t2` where ((`bka_non_equivalence_sequoiadb`.`t1`.`c3` = `bka_non_equivalence_sequoiadb`.`t2`.`c3`) and ((`bka_non_equivalence_sequoiadb`.`t2`.`c2` <= 2) or isnull(`bka_non_equivalence_sequoiadb`.`t2`.`c1`)) and (`bka_non_equivalence_sequoiadb`.`t1`.`c1` <= `bka_non_equivalence_sequoiadb`.`t2`.`c2`))
SELECT * FROM t1 INNER JOIN t2 ON t1.`c1` <= t2.`c2` AND t1.`c3` = t2.`c3` WHERE `t2`.`c2` <= 2 OR `t2`.`c1` IS NULL ;
c1	c2	c3	c4	c1	c2	c3	c4
0	1	6	6	0	1	6	6
0	7	6	0	0	1	6	6
drop database bka_non_equivalence_sequoiadb;

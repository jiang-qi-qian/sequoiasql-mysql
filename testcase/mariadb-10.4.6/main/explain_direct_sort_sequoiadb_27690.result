drop database if exists explain_direct_sort_27690;
create database explain_direct_sort_27690;
drop database explain_direct_sort_27690;
create database explain_direct_sort_27690;
use explain_direct_sort_27690;
set session optimizer_switch='mrr=on,mrr_cost_based=off';
set session sequoiadb_debug_log=on;
set session join_cache_level = 8;
drop table if exists t1,t2;
create table t1(
col1 int,
col2 varchar(10),
col3 varchar(10),
col4 varchar(10),
key idx_col1(col1),
key idx_col2(col2),
key idx_col12(col1,col2),
unique key uniq_idx4(col4)
);
insert into t1 values(2,'defg','abd','abd');
insert into t1 values(4,'abc','abcdef','xyz');
insert into t1 values(null,null,null,null);
insert into t1 values(3,'abd','def','defg');
insert into t1 values(0,'abde','xyz','def');
insert into t1 values(5,'xyz','abc','efg');
insert into t1 values(6,'abcdef','abde','abc');
insert into t1 values(1,'def','defg','abcdef');
select * from t1 order by col1;
col1	col2	col3	col4
NULL	NULL	NULL	NULL
0	abde	xyz	def
1	def	defg	abcdef
2	defg	abd	abd
3	abd	def	defg
4	abc	abcdef	xyz
5	xyz	abc	efg
6	abcdef	abde	abc
select * from t1 order by col2;
col1	col2	col3	col4
NULL	NULL	NULL	NULL
4	abc	abcdef	xyz
6	abcdef	abde	abc
3	abd	def	defg
0	abde	xyz	def
1	def	defg	abcdef
2	defg	abd	abd
5	xyz	abc	efg
select * from t1 order by col3;
col1	col2	col3	col4
NULL	NULL	NULL	NULL
5	xyz	abc	efg
4	abc	abcdef	xyz
2	defg	abd	abd
6	abcdef	abde	abc
3	abd	def	defg
1	def	defg	abcdef
0	abde	xyz	def
select * from t1 order by col4;
col1	col2	col3	col4
NULL	NULL	NULL	NULL
6	abcdef	abde	abc
1	def	defg	abcdef
2	defg	abd	abd
0	abde	xyz	def
3	abd	def	defg
5	xyz	abc	efg
4	abc	abcdef	xyz
create table t2 like t1;
insert into t2 select * from t1;
explain select * from t1 left join t2 on t1.col1 = t2.col1 order by t1.col1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	8	Using temporary; Using filesort
1	SIMPLE	t2	ref	idx_col1,idx_col12	idx_col12	5	explain_direct_sort_27690.t1.col1	1	Using where; Using join buffer (flat, BKAH join); Using MRR
select * from t1 left join t2 on t1.col1 = t2.col1 order by t1.col1;
col1	col2	col3	col4	col1	col2	col3	col4
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
0	abde	xyz	def	0	abde	xyz	def
1	def	defg	abcdef	1	def	defg	abcdef
2	defg	abd	abd	2	defg	abd	abd
3	abd	def	defg	3	abd	def	defg
4	abc	abcdef	xyz	4	abc	abcdef	xyz
5	xyz	abc	efg	5	xyz	abc	efg
6	abcdef	abde	abc	6	abcdef	abde	abc
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[7], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 4, 3, 0, 5, 6, 1 ] } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 left join t2 on t1.col1 = t2.col1 order by t1.col1 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	8	Using temporary; Using filesort
1	SIMPLE	t2	ref	idx_col1,idx_col12	idx_col12	5	explain_direct_sort_27690.t1.col1	1	Using where; Using join buffer (flat, BKAH join); Using MRR
select * from t1 left join t2 on t1.col1 = t2.col1 order by t1.col1 desc;
col1	col2	col3	col4	col1	col2	col3	col4
6	abcdef	abde	abc	6	abcdef	abde	abc
5	xyz	abc	efg	5	xyz	abc	efg
4	abc	abcdef	xyz	4	abc	abcdef	xyz
3	abd	def	defg	3	abd	def	defg
2	defg	abd	abd	2	defg	abd	abd
1	def	defg	abcdef	1	def	defg	abcdef
0	abde	xyz	def	0	abde	xyz	def
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[7], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 4, 3, 0, 5, 6, 1 ] } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 left join t2 on t1.col1 = t2.col1 where t1.col1 between 1 and 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	2	Using where with pushed condition
1	SIMPLE	t2	ref	idx_col1,idx_col12	idx_col12	5	explain_direct_sort_27690.t1.col1	1	Using where; Using join buffer (flat, BKAH join); Using MRR
select * from t1 left join t2 on t1.col1 = t2.col1 where t1.col1 between 1 and 3;
col1	col2	col3	col4	col1	col2	col3	col4
1	def	defg	abcdef	1	def	defg	abcdef
2	defg	abd	abd	2	defg	abd	abd
3	abd	def	defg	3	abd	def	defg
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "col1": { "$gte": 1 } }, { "col1": { "$lte": 3 } } ] }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[3], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 2, 3 ] } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 left join t2 on t1.col1 = t2.col1 where t1.col1 between 1 and 3 order by t1.col1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	2	Using where with pushed condition; Using temporary; Using filesort
1	SIMPLE	t2	ref	idx_col1,idx_col12	idx_col12	5	explain_direct_sort_27690.t1.col1	1	Using where; Using join buffer (flat, BKAH join); Using MRR
select * from t1 left join t2 on t1.col1 = t2.col1 where t1.col1 between 1 and 3 order by t1.col1;
col1	col2	col3	col4	col1	col2	col3	col4
1	def	defg	abcdef	1	def	defg	abcdef
2	defg	abd	abd	2	defg	abd	abd
3	abd	def	defg	3	abd	def	defg
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "col1": { "$gte": 1 } }, { "col1": { "$lte": 3 } } ] }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[3], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 1, 2, 3 ] } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 left join t2 on t1.col1 = t2.col1 and t1.col2 = t2.col2 order by t1.col1,t2.col2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	8	Using temporary; Using filesort
1	SIMPLE	t2	ref	idx_col1,idx_col2,idx_col12	idx_col1	5	explain_direct_sort_27690.t1.col1	2	Using where; Using join buffer (flat, BKAH join); Using MRR
select * from t1 left join t2 on t1.col1 = t2.col1 and t1.col2 = t2.col2 order by t1.col1,t2.col2;
col1	col2	col3	col4	col1	col2	col3	col4
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
0	abde	xyz	def	0	abde	xyz	def
1	def	defg	abcdef	1	def	defg	abcdef
2	defg	abd	abd	2	defg	abd	abd
3	abd	def	defg	3	abd	def	defg
4	abc	abcdef	xyz	4	abc	abcdef	xyz
5	xyz	abc	efg	5	xyz	abc	efg
6	abcdef	abde	abc	6	abcdef	abde	abc
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[7], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 4, 3, 0, 5, 6, 1 ] } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 left join t2 on t1.col1 = t2.col1 and t1.col2 = t2.col2 order by t1.col1 desc ,t2.col2 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	8	Using temporary; Using filesort
1	SIMPLE	t2	ref	idx_col1,idx_col2,idx_col12	idx_col1	5	explain_direct_sort_27690.t1.col1	2	Using where; Using join buffer (flat, BKAH join); Using MRR
select * from t1 left join t2 on t1.col1 = t2.col1 and t1.col2 = t2.col2 order by t1.col1 desc ,t2.col2 desc;
col1	col2	col3	col4	col1	col2	col3	col4
6	abcdef	abde	abc	6	abcdef	abde	abc
5	xyz	abc	efg	5	xyz	abc	efg
4	abc	abcdef	xyz	4	abc	abcdef	xyz
3	abd	def	defg	3	abd	def	defg
2	defg	abd	abd	2	defg	abd	abd
1	def	defg	abcdef	1	def	defg	abcdef
0	abde	xyz	def	0	abde	xyz	def
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[7], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 4, 3, 0, 5, 6, 1 ] } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 left join t2 on t1.col1 = t2.col1 order by t1.col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	8	Using temporary; Using filesort
1	SIMPLE	t2	ref	idx_col1,idx_col12	idx_col12	5	explain_direct_sort_27690.t1.col1	1	Using where; Using join buffer (flat, BKAH join); Using MRR
select * from t1 left join t2 on t1.col1 = t2.col1 order by t1.col3;
col1	col2	col3	col4	col1	col2	col3	col4
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
5	xyz	abc	efg	5	xyz	abc	efg
4	abc	abcdef	xyz	4	abc	abcdef	xyz
2	defg	abd	abd	2	defg	abd	abd
6	abcdef	abde	abc	6	abcdef	abde	abc
3	abd	def	defg	3	abd	def	defg
1	def	defg	abcdef	1	def	defg	abcdef
0	abde	xyz	def	0	abde	xyz	def
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[7], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 4, 3, 0, 5, 6, 1 ] } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 left join t2 ignore index(idx_col1, idx_col12) on t1.col1 = t2.col1 order by t1.col1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	8	Using temporary; Using filesort
1	SIMPLE	t2	hash_ALL	NULL	#hash#$hj	5	explain_direct_sort_27690.t1.col1	8	Using where; Using join buffer (flat, BNLH join)
select * from t1 left join t2 ignore index(idx_col1) on t1.col1 = t2.col1 order by t1.col1;
col1	col2	col3	col4	col1	col2	col3	col4
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
0	abde	xyz	def	0	abde	xyz	def
1	def	defg	abcdef	1	def	defg	abcdef
2	defg	abd	abd	2	defg	abd	abd
3	abd	def	defg	3	abd	def	defg
4	abc	abcdef	xyz	4	abc	abcdef	xyz
5	xyz	abc	efg	5	xyz	abc	efg
6	abcdef	abde	abc	6	abcdef	abde	abc
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[7], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 4, 3, 0, 5, 6, 1 ] } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 left join t2 ignore index(idx_col1, idx_col12) on t1.col1 = t2.col1 order by t1.col1 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	8	Using temporary; Using filesort
1	SIMPLE	t2	hash_ALL	NULL	#hash#$hj	5	explain_direct_sort_27690.t1.col1	8	Using where; Using join buffer (flat, BNLH join)
select * from t1 left join t2 ignore index(idx_col1) on t1.col1 = t2.col1 order by t1.col1 desc;
col1	col2	col3	col4	col1	col2	col3	col4
6	abcdef	abde	abc	6	abcdef	abde	abc
5	xyz	abc	efg	5	xyz	abc	efg
4	abc	abcdef	xyz	4	abc	abcdef	xyz
3	abd	def	defg	3	abd	def	defg
2	defg	abd	abd	2	defg	abd	abd
1	def	defg	abcdef	1	def	defg	abcdef
0	abde	xyz	def	0	abde	xyz	def
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[7], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 4, 3, 0, 5, 6, 1 ] } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 left join t2 ignore index(idx_col1, idx_col2) on t1.col1 = t2.col1 and t1.col2 = t2.col2 order by t1.col1,t2.col2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	8	Using temporary; Using filesort
1	SIMPLE	t2	ref	idx_col12	idx_col12	18	explain_direct_sort_27690.t1.col1,explain_direct_sort_27690.t1.col2	2	Using where; Using join buffer (flat, BKAH join); Using MRR
select * from t1 left join t2 ignore index(idx_col1, idx_col2) on t1.col1 = t2.col1 and t1.col2 = t2.col2 order by t1.col1,t2.col2;
col1	col2	col3	col4	col1	col2	col3	col4
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
0	abde	xyz	def	0	abde	xyz	def
1	def	defg	abcdef	1	def	defg	abcdef
2	defg	abd	abd	2	defg	abd	abd
3	abd	def	defg	3	abd	def	defg
4	abc	abcdef	xyz	4	abc	abcdef	xyz
5	xyz	abc	efg	5	xyz	abc	efg
6	abcdef	abde	abc	6	abcdef	abde	abc
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[7], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "$Range": { "IsAllEqual": true, "PrefixNum": 2, "IndexValue": [ { "1": 2, "2": "defg" }, { "1": 4, "2": "abc" }, { "1": 3, "2": "abd" }, { "1": 0, "2": "abde" }, { "1": 5, "2": "xyz" }, { "1": 6, "2": "abcdef" }, { "1": 1, "2": "def" } ] }, "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 left join t2 ignore index(idx_col1, idx_col2) on t1.col1 = t2.col1 and t1.col2 = t2.col2 order by t1.col1 desc ,t2.col2 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	8	Using temporary; Using filesort
1	SIMPLE	t2	ref	idx_col12	idx_col12	18	explain_direct_sort_27690.t1.col1,explain_direct_sort_27690.t1.col2	2	Using where; Using join buffer (flat, BKAH join); Using MRR
select * from t1 left join t2 ignore index(idx_col1, idx_col2) on t1.col1 = t2.col1 and t1.col2 = t2.col2 order by t1.col1 desc ,t2.col2 desc;
col1	col2	col3	col4	col1	col2	col3	col4
6	abcdef	abde	abc	6	abcdef	abde	abc
5	xyz	abc	efg	5	xyz	abc	efg
4	abc	abcdef	xyz	4	abc	abcdef	xyz
3	abd	def	defg	3	abd	def	defg
2	defg	abd	abd	2	defg	abd	abd
1	def	defg	abcdef	1	def	defg	abcdef
0	abde	xyz	def	0	abde	xyz	def
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[7], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "$Range": { "IsAllEqual": true, "PrefixNum": 2, "IndexValue": [ { "1": 2, "2": "defg" }, { "1": 4, "2": "abc" }, { "1": 3, "2": "abd" }, { "1": 0, "2": "abde" }, { "1": 5, "2": "xyz" }, { "1": 6, "2": "abcdef" }, { "1": 1, "2": "def" } ] }, "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 left join t2 on t1.col1 = t2.col1 order by t1.col1 limit 2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	8	Using temporary; Using filesort
1	SIMPLE	t2	ref	idx_col1,idx_col12	idx_col12	5	explain_direct_sort_27690.t1.col1	1	Using where; Using join buffer (flat, BKAH join); Using MRR
select * from t1 left join t2 on t1.col1 = t2.col1 order by t1.col1 limit 2;
col1	col2	col3	col4	col1	col2	col3	col4
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
0	abde	xyz	def	0	abde	xyz	def
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[7], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 4, 3, 0, 5, 6, 1 ] } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 left join t2 on t1.col1 = t2.col1 order by t1.col1 desc limit 1,2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	8	Using temporary; Using filesort
1	SIMPLE	t2	ref	idx_col1,idx_col12	idx_col12	5	explain_direct_sort_27690.t1.col1	1	Using where; Using join buffer (flat, BKAH join); Using MRR
select * from t1 left join t2 on t1.col1 = t2.col1 order by t1.col1 desc limit 1,2;
col1	col2	col3	col4	col1	col2	col3	col4
5	xyz	abc	efg	5	xyz	abc	efg
4	abc	abcdef	xyz	4	abc	abcdef	xyz
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[7], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 4, 3, 0, 5, 6, 1 ] } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
set session optimizer_limit_pushdown_threshold=1;
explain select * from t1 left join t2 on t1.col1 = t2.col1 and t1.col2 = t2.col2 order by t1.col1,t2.col2 limit 2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	8	Using temporary; Using filesort
1	SIMPLE	t2	ref	idx_col1,idx_col2,idx_col12	idx_col1	5	explain_direct_sort_27690.t1.col1	2	Using where; Using join buffer (flat, BKAH join); Using MRR
select * from t1 left join t2 on t1.col1 = t2.col1 and t1.col2 = t2.col2 order by t1.col1,t2.col2 limit 2;
col1	col2	col3	col4	col1	col2	col3	col4
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
0	abde	xyz	def	0	abde	xyz	def
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[7], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 2, 4, 3, 0, 5, 6, 1 ] } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 left join t2 on t1.col1 = t2.col1 and t1.col2 = t2.col2 where t1.col1 < 3 order by t1.col1 desc ,t2.col2 desc limit 1,2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	2	Using where with pushed condition; Using temporary; Using filesort
1	SIMPLE	t2	ref	idx_col1,idx_col2,idx_col12	idx_col1	5	explain_direct_sort_27690.t1.col1	2	Using where; Using join buffer (flat, BKAH join); Using MRR
select * from t1 left join t2 on t1.col1 = t2.col1 and t1.col2 = t2.col2 where t1.col1 < 3 order by t1.col1 desc ,t2.col2 desc limit 1,2;
col1	col2	col3	col4	col1	col2	col3	col4
1	def	defg	abcdef	1	def	defg	abcdef
0	abde	xyz	def	0	abde	xyz	def
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 3 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[explain_direct_sort_27690.t1]
[Note] SequoiaDB: Query message: Batched keys num[3], table[explain_direct_sort_27690.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$in": [ 0, 1, 2 ] } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
set session join_cache_level = 0;
explain select * from t1 join t2 on t1.col1 = t2.col1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	idx_col1,idx_col12	NULL	NULL	NULL	8	Using where with pushed condition
1	SIMPLE	t2	ref	idx_col1,idx_col12	idx_col12	5	explain_direct_sort_27690.t1.col1	1	
select * from t1 join t2 on t1.col1 = t2.col1;
col1	col2	col3	col4	col1	col2	col3	col4
0	abde	xyz	def	0	abde	xyz	def
1	def	defg	abcdef	1	def	defg	abcdef
2	defg	abd	abd	2	defg	abd	abd
3	abd	def	defg	3	abd	def	defg
4	abc	abcdef	xyz	4	abc	abcdef	xyz
5	xyz	abc	efg	5	xyz	abc	efg
6	abcdef	abde	abc	6	abcdef	abde	abc
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 1 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 join t2 on t1.col1 = t2.col1 order by t1.col1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	idx_col1,idx_col12	NULL	NULL	NULL	8	Using where with pushed condition; Using filesort
1	SIMPLE	t2	ref	idx_col1,idx_col12	idx_col12	5	explain_direct_sort_27690.t1.col1	1	
select * from t1 join t2 on t1.col1 = t2.col1 order by t1.col1;
col1	col2	col3	col4	col1	col2	col3	col4
0	abde	xyz	def	0	abde	xyz	def
1	def	defg	abcdef	1	def	defg	abcdef
2	defg	abd	abd	2	defg	abd	abd
3	abd	def	defg	3	abd	def	defg
4	abc	abcdef	xyz	4	abc	abcdef	xyz
5	xyz	abc	efg	5	xyz	abc	efg
6	abcdef	abde	abc	6	abcdef	abde	abc
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 6 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 join t2 on t1.col1 = t2.col1 order by t1.col1 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	idx_col1,idx_col12	NULL	NULL	NULL	8	Using where with pushed condition; Using filesort
1	SIMPLE	t2	ref	idx_col1,idx_col12	idx_col12	5	explain_direct_sort_27690.t1.col1	1	
select * from t1 join t2 on t1.col1 = t2.col1 order by t1.col1 desc;
col1	col2	col3	col4	col1	col2	col3	col4
6	abcdef	abde	abc	6	abcdef	abde	abc
5	xyz	abc	efg	5	xyz	abc	efg
4	abc	abcdef	xyz	4	abc	abcdef	xyz
3	abd	def	defg	3	abd	def	defg
2	defg	abd	abd	2	defg	abd	abd
1	def	defg	abcdef	1	def	defg	abcdef
0	abde	xyz	def	0	abde	xyz	def
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 0 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
explain select * from t1 join t2 on t1.col1 = t2.col1 order by t1.col2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	idx_col1,idx_col12	NULL	NULL	NULL	8	Using where with pushed condition; Using filesort
1	SIMPLE	t2	ref	idx_col1,idx_col12	idx_col12	5	explain_direct_sort_27690.t1.col1	1	
select * from t1 join t2 on t1.col1 = t2.col1 order by t1.col2;
col1	col2	col3	col4	col1	col2	col3	col4
4	abc	abcdef	xyz	4	abc	abcdef	xyz
6	abcdef	abde	abc	6	abcdef	abde	abc
3	abd	def	defg	3	abd	def	defg
0	abde	xyz	def	0	abde	xyz	def
1	def	defg	abcdef	1	def	defg	abcdef
2	defg	abd	abd	2	defg	abd	abd
5	xyz	abc	efg	5	xyz	abc	efg
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 5 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[explain_direct_sort_27690.t2]
drop table t1,t2;
set session optimizer_switch=default;
set session sequoiadb_debug_log=off;
set session optimizer_limit_pushdown_threshold=default;
set session join_cache_level = default;
drop database explain_direct_sort_27690;

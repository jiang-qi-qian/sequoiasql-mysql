drop database if exists count_limit_sort_pushdown_sequoiadb_3;
create database count_limit_sort_pushdown_sequoiadb_3;
use count_limit_sort_pushdown_sequoiadb_3;
drop table if exists t1,t2,t3,t4,t5,replace_table1,replace_table2,replace_table3,replace_table4,replace_table5,replace_table6,replace_table7,t1_partition,t2_partition,t3_partition;
create table t1(
col1 int,
col2 varchar(10),
col3 datetime,
col4 varchar(10),
key idx_col1(col1),
key idx_col2(col2),
key idx_col12(col1,col2),
key idx_col3(col3)
);
insert into t1 values(0,'abc','20221115114010','abc');
insert into t1 values(null,'abc','20221115114010','abc');
insert into t1 values(5,'abcdef','20221115114015','abcdef');
insert into t1 values(3,null,'20221115114015','abcdef');
insert into t1 values(7,'def','20221115114020','def');
insert into t1 values(2,'def',null,'def');
insert into t1 values(4,'abcde','20221115114020','efg');
insert into t1 values(0,'abcde','20221115114020',null);
insert into t1 values(6,'def','20221115114210','def');
insert into t1 values(1,'defg ','20221115114510','defg');
insert into t1 values(3,'xyz','20221115114510','xyz ');
insert into t1 values(2,'xyzz ','20221115114510','xyzz ');
insert into t1 values(null,null,null,null);
insert into t1 values(null,null,null,null);
create table t2 like t1;
insert into t2 select * from t1;
create table t3(
col1 int primary key,
col2 varchar(10),
col3 varchar(10)
);
insert into t3 values(3,'user01 ','abc');
insert into t3 values(1,'user02','def ');
insert into t3 values(2,'user03 ','ghi ');
insert into t3 values(6,null,'def ');
insert into t3 values(4,'user02',null);
create table t4 select * from t3;
create table t5 select * from t1;
create table t1_partition(
col1 int,
col2 varchar(10),
col3 datetime,
col4 varchar(10),
col5 int,
key idx_col1(col1),
key idx_col2(col2),
key idx_col12(col1,col2),
key idx_col3(col3)
)
partition by range columns (col5)
subpartition by key (col1)
subpartitions 2 (
partition p0 values less than (4),
partition p1 values less than (7),
partition p2 values less than (11)
);
insert into t1_partition values(0,'abc','20221115114010','abc',3);
insert into t1_partition values(null,'abc','20221115114010','abc',2);
insert into t1_partition values(5,'abcdef','20221115114015','abcdef',5);
insert into t1_partition values(3,null,'20221115114015','abcdef',3);
insert into t1_partition values(7,'def','20221115114020','def',4);
insert into t1_partition values(2,'def',null,'def',1);
insert into t1_partition values(4,'abcde','20221115114020','efg',5);
insert into t1_partition values(1,'abcde','20221115114020',null,3);
insert into t1_partition values(6,'def','20221115114210','def',1);
insert into t1_partition values(1,'defg ','20221115114510','defg',5);
insert into t1_partition values(3,'xyz','20221115114510','xyz ',4);
insert into t1_partition values(2,'xyz ','20221115114510','xyz ',1);
insert into t1_partition values(8,'xyz ','20221115114510','xyz ',3);
insert into t1_partition values(11,'abcde','20221115114020','efg',2);
insert into t1_partition values(9,'def','20221115114020','def',2);
insert into t1_partition values(10,'abcdef','20221115114015','abcdef',4);
insert into t1_partition values(null,null,null,null,null);
insert into t1_partition values(null,null,null,null,null);
create table t2_partition like t1_partition;
insert into t2_partition select * from t1_partition;
create table t3_partition select * from t1_partition;
create view v1 as select * from t1 where col1 > 2 limit 1,10;
create view v2 as select * from t1 where col1 > 2 order by col2 limit 5;
create view v3 as select * from t1 where col1 > 2 group by col3 limit 4;
create view v4 as select *,count(*) from t1 where col1 > 2 group by col4 order by col4 limit 6;
create view v5 as select * from t1 where col1 > 2 group by col4 order by col4 limit 6;
create view v6 as select *,count(*) from t1 where col1 > 2 order by col1 limit 6;
create view v7 as  (select count(*) from t1, t2 where t1.col1>=2 and t2.col1 <=6  ) UNION (select count(*) from t1 where col4<"zzz") limit 8;
create view v8 as  (select t1.* from t1, t2 where t1.col1>=2 and t2.col1 <=6  group by t1.col1 order by t1.col1 limit 10 ) UNION (select * from t1 where col4<"zzz"  group by col2 order by col3 limit 3 ) limit 8;
create table replace_table1(
col1 int
);
create table replace_table2(
col1 int,
col2 varchar(10),
col3 datetime,
col4 varchar(10),
col5 int,
key idx_col1(col1),
key idx_col2(col2),
key idx_col12(col1,col2),
key idx_col3(col3)
);
create table replace_table3(
col1 int,
col2 int
);
create table replace_table4(
col1 int,
col2 varchar(10),
col3 datetime,
col4 varchar(10),
col5 varchar(10),
key idx_col1(col1),
key idx_col2(col2),
key idx_col12(col1,col2),
key idx_col3(col3)
);
create table replace_table5(
col1 int,
col2 varchar(10)
);
create table replace_table6(
col1 int,
col2 varchar(10),
col3 datetime,
col4 varchar(10),
col5 int,
col6 varchar(10),
col7 datetime,
col8 varchar(10),
col9 int,
col10 varchar(10),
col11 datetime,
col12 varchar(10),
key idx_col1(col1),
key idx_col2(col2),
key idx_col12(col1,col2),
key idx_col3(col3)
);
create table replace_table7(
col4 varchar(10)
);
analyze table  t1,t2,t3,t4,t5,replace_table1,replace_table2,replace_table3,replace_table4,replace_table5,replace_table6,replace_table7,t1_partition,t2_partition,t3_partition;
Table	Op	Msg_type	Msg_text
count_limit_sort_pushdown_sequoiadb_3.t1	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.t1	analyze	status	OK
count_limit_sort_pushdown_sequoiadb_3.t2	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.t2	analyze	status	OK
count_limit_sort_pushdown_sequoiadb_3.t3	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.t3	analyze	status	OK
count_limit_sort_pushdown_sequoiadb_3.t4	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.t4	analyze	status	OK
count_limit_sort_pushdown_sequoiadb_3.t5	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.t5	analyze	status	OK
count_limit_sort_pushdown_sequoiadb_3.replace_table1	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.replace_table1	analyze	status	OK
count_limit_sort_pushdown_sequoiadb_3.replace_table2	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.replace_table2	analyze	status	OK
count_limit_sort_pushdown_sequoiadb_3.replace_table3	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.replace_table3	analyze	status	OK
count_limit_sort_pushdown_sequoiadb_3.replace_table4	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.replace_table4	analyze	status	OK
count_limit_sort_pushdown_sequoiadb_3.replace_table5	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.replace_table5	analyze	status	OK
count_limit_sort_pushdown_sequoiadb_3.replace_table6	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.replace_table6	analyze	status	OK
count_limit_sort_pushdown_sequoiadb_3.replace_table7	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.replace_table7	analyze	status	OK
count_limit_sort_pushdown_sequoiadb_3.t1_partition	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.t1_partition	analyze	status	OK
count_limit_sort_pushdown_sequoiadb_3.t2_partition	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.t2_partition	analyze	status	OK
count_limit_sort_pushdown_sequoiadb_3.t3_partition	analyze	status	Engine-independent statistics collected
count_limit_sort_pushdown_sequoiadb_3.t3_partition	analyze	status	OK
set session sequoiadb_debug_log=on;
set session sequoiadb_optimizer_options='direct_count,direct_sort,direct_limit';
set session sequoiadb_cls_pushdown_expand=on;
set session optimizer_switch='optimizer_sort_pushdown=on';
set session optimizer_index_sort_prune=on;
explain replace into replace_table1 select count(1) from t1 where col1>=1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table1 select count(1) from t1 where col1>=1;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gte": 1 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gte": 1 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
9
truncate table replace_table1;
explain replace into t5 select * from t1 where col1>=1 limit 2,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into t5 select * from t1 where col1>=1 limit 2,3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[3], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
0	abcde	2022-11-15 11:40:20	NULL
1	defg 	2022-11-15 11:45:10	defg
2	def	NULL	def
2	xyzz 	2022-11-15 11:45:10	xyzz 
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	NULL	2022-11-15 11:40:15	abcdef
3	NULL	2022-11-15 11:40:15	abcdef
3	xyz	2022-11-15 11:45:10	xyz 
3	xyz	2022-11-15 11:45:10	xyz 
4	abcde	2022-11-15 11:40:20	efg
5	abcdef	2022-11-15 11:40:15	abcdef
6	def	2022-11-15 11:42:10	def
7	def	2022-11-15 11:40:20	def
NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL
NULL	abc	2022-11-15 11:40:10	abc
truncate table t5;
explain replace into t5 select * from t1 where col1>1 group by col1 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
replace into t5 select * from t1 where col1>1 group by col1 desc;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gt": 1 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
select * from t5;
col1	col2	col3	col4
2	def	NULL	def
3	NULL	2022-11-15 11:40:15	abcdef
4	abcde	2022-11-15 11:40:20	efg
5	abcdef	2022-11-15 11:40:15	abcdef
6	def	2022-11-15 11:42:10	def
7	def	2022-11-15 11:40:20	def
truncate table t5;
explain replace into t5 select * from t1 where col3>="20221115114210" order by col4 limit 2,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
replace into t5 select * from t1 where col3>="20221115114210" order by col4 limit 2,3;
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[3], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into t5 select * from t1 where col3>="20221115114210" group by col3 limit 2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
replace into t5 select * from t1 where col3>="20221115114210" group by col3 limit 2;
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 2 }]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
6	def	2022-11-15 11:42:10	def
truncate table t5;
explain replace into t5 select * from t1 where col4>"bcd" group by col3 order by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into t5 select * from t1 where col4>"bcd" group by col3 order by col3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col4": { "$gt": "bcd" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
2	def	NULL	def
6	def	2022-11-15 11:42:10	def
7	def	2022-11-15 11:40:20	def
truncate table t5;
explain replace into t5 select * from t1 where col2>="def" group by col1 order by col4 limit 2,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into t5 select * from t1 where col2>="def" group by col2 order by col4 limit 2,3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$gte": "def" } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 3 }]
select * from t5;
col1	col2	col3	col4
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain  replace into t3_partition select * from t1_partition where col2>="def" group by col1 order by col4 limit 2,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1_partition	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into t3_partition select * from t1_partition where col2>="def" group by col2 order by col4 limit 2,3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$gte": "def" } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" }, "col5": { "$first": "$col5" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 3 }]
select * from t3_partition;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	3
1	abcde	2022-11-15 11:40:20	NULL	3
1	defg 	2022-11-15 11:45:10	defg	5
10	abcdef	2022-11-15 11:40:15	abcdef	4
11	abcde	2022-11-15 11:40:20	efg	2
2	def	NULL	def	1
2	xyz 	2022-11-15 11:45:10	xyz 	1
2	xyz 	2022-11-15 11:45:10	xyz 	1
3	NULL	2022-11-15 11:40:15	abcdef	3
3	xyz	2022-11-15 11:45:10	xyz 	4
3	xyz	2022-11-15 11:45:10	xyz 	4
4	abcde	2022-11-15 11:40:20	efg	5
5	abcdef	2022-11-15 11:40:15	abcdef	5
6	def	2022-11-15 11:42:10	def	1
7	def	2022-11-15 11:40:20	def	4
8	xyz 	2022-11-15 11:45:10	xyz 	3
9	def	2022-11-15 11:40:20	def	2
NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL
NULL	abc	2022-11-15 11:40:10	abc	2
truncate table t3_partition;
explain replace into t5 select * from t1 where col2>"def" order by col4 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition; Using filesort
replace into t5 select * from t1 where col2>"def" order by col4 desc;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "def" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into replace_table1 select count(1) from t1 where col1>1 group by col1 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table1 select count(1) from t1 where col1>1 group by col1 desc;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": -1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
1
1
1
2
2
truncate table replace_table1;
explain replace into replace_table1 select count(1) from t1 where col3>="20221115114210" group by col3 limit 1,1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using index
replace into replace_table1 select count(1) from t1 where col3>="20221115114210" group by col3 limit 1,1;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col3": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }], selector[{ "_id": null, "col3": null }], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
3
truncate table replace_table1;
explain replace into replace_table1 select count(1) from t1 where col4>"bcd" group by col3 order by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table1 select count(1) from t1 where col4>"bcd" group by col3 order by col3;
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.replace_table1]
[Note] SequoiaDB: Query message: condition[{ "col4": { "$gt": "bcd" } }], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
1
2
3
truncate table replace_table1;
explain replace into replace_table1 select count(col1) from t1 where col2>="def" group by col1 order by col1 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	index	idx_col2	idx_col12	18	NULL	#	Using where with pushed condition; Using index
replace into replace_table1 select count(col1) from t1 where col2>="def" group by col1 order by col1 limit 1;
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.replace_table1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gte": "def" } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain replace into replace_table1 select count(1) from t1 where col2>="def" limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition; Using index
replace into replace_table1 select count(1) from t1 where col2>="def" limit 1;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col2": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col2": { "$gte": "def" } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col2": { "$gte": "def" } }],hint[{ "": "idx_col2" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
6
truncate table replace_table1;
explain replace into replace_table1 select count(1) from t1 where col2>="bcd" order by col4 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition
replace into replace_table1 select count(1) from t1 where col2>="bcd" order by col4 desc;
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.replace_table1]
[Note] SequoiaDB: optimizer count: 1, condition: { "col2": { "$gte": "bcd" } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col2": { "$gte": "bcd" } }],hint[{ "": "idx_col2" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
6
truncate table replace_table1;
explain replace into replace_table1 select count(1) from t1 where col3>="20221115114210" order by col4 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
replace into replace_table1 select count(1) from t1 where col3>="20221115114210" order by col4 limit 1;
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.replace_table1]
[Note] SequoiaDB: optimizer count: 1, condition: { "col3": { "$gte": "2022-11-15 11:42:10" } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }],hint[{ "": "idx_col3" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
4
truncate table replace_table1;
explain replace into replace_table1(select count(1) from t1 where col1>1) union ALL (select count(1) from t2 where col4<"zzz") limit 1,1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	UNION	t2	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(1) from t1 where col1>1) union ALL (select count(1) from t2 where col4<"zzz") limit 1,1;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gt": 1 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gt": 1 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col4": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col4": { "$lt": "zzz" } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col4": { "$lt": "zzz" } }],hint[{}] table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
11
truncate table replace_table1;
explain replace into t5(select * from t1 where col1>=1 limit 2,4) union ALL (select *  from t2 where col2>"def" limit 2,3) limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	UNION	t2	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1>=1 limit 2,4) union ALL (select *  from t2 where col2>"def" limit 2,3) limit 1,3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[4], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "def" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[3], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
3	NULL	2022-11-15 11:40:15	abcdef
3	xyz	2022-11-15 11:45:10	xyz 
4	abcde	2022-11-15 11:40:20	efg
truncate table t5;
explain replace into t5(select * from t1 where col1>=1 group by col1 desc) union ALL (select * from t2 where col2>"def" group by col2 desc) limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1>=1 group by col1 desc) union ALL (select * from t2 where col2>"def" group by col2 desc) limit 1,3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 1 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$gt": "def" } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
select * from t5;
col1	col2	col3	col4
4	abcde	2022-11-15 11:40:20	efg
5	abcdef	2022-11-15 11:40:15	abcdef
6	def	2022-11-15 11:42:10	def
truncate table t5;
explain replace into replace_table7(select col4 from t1 where col1>1 order by col4 desc) union ALL (select col4 from t2 where col3>="20221115114210" order by col4 limit 1) order by col4 limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into replace_table7(select col4 from t1 where col1>1 order by col4 desc) union ALL (select col4 from t2 where col3>="20221115114210" order by col4 limit 1) order by col4 limit 1,3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table7;
col4
abcdef
def
def
truncate table replace_table7;
explain replace into t5(select * from t1 where col1>1 group by col1 limit 2,4 ) union ALL (select * from t2 where col3>="20221115114210" group by col4 limit 2,3) order by col1  limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into t5(select * from t1 where col1>1 group by col1 limit 2,4 ) union ALL (select * from t2 where col3>="20221115114210" group by col4 limit 2,3) order by col1  limit 1,3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gt": 1 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 4 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 3 }]
select * from t5;
col1	col2	col3	col4
3	xyz	2022-11-15 11:45:10	xyz 
4	abcde	2022-11-15 11:40:20	efg
5	abcdef	2022-11-15 11:40:15	abcdef
truncate table t5;
explain replace into t5(select * from t1 where col4>"bcd" group by col3 order by col3) union ALL (select * from t2 where col3>="20221115114210" group by col3 order by col3) order by col1  limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into t5(select * from t1 where col4>"bcd" group by col3 order by col3) union ALL (select * from t2 where col3>="20221115114210" group by col3 order by col3) order by col1  limit 1,3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col4": { "$gt": "bcd" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
2	def	NULL	def
6	def	2022-11-15 11:42:10	def
truncate table t5;
explain replace into t5(select * from t1 where col4>"bcd" group by col3 order by col3  limit 0,3) union ALL (select * from t2 where col3>="20221115114210" group by col3 order by col3  limit 0,2) order by col1  limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into t5(select * from t1 where col4>"bcd" group by col3 order by col3  limit 0,3) union ALL (select * from t2 where col3>="20221115114210" group by col3 order by col3  limit 0,2) order by col1  limit 1,3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col4": { "$gt": "bcd" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 2 }]
select * from t5;
col1	col2	col3	col4
2	def	NULL	def
6	def	2022-11-15 11:42:10	def
6	def	2022-11-15 11:42:10	def
truncate table t5;
explain replace into t5(select * from t1 where col1>=1 limit 2,3) union ALL (select * from t2 where col2>"def" order by col4 desc) limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	UNION	t2	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1>=1 limit 2,3) union ALL (select * from t2 where col2>"def" order by col4 desc) limit 1,3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[3], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "def" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
3	NULL	2022-11-15 11:40:15	abcdef
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into replace_table7(select col2 from t1 where col1>1 group by col2 desc) union ALL (select col2 from t2 where col3>="20221115114210" order by col2 limit 1) order by col2 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	index	idx_col1,idx_col12	idx_col12	18	NULL	#	Using where with pushed condition; Using index; Using pushed GROUP BY
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into replace_table7(select col2 from t1 where col1>1 group by col2 desc) union ALL (select col2 from t2 where col3>="20221115114210" order by col2 limit 1) order by col2 limit 1;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gt": 1 } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" } } }], sort[{ "$sort": { "col2": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
truncate table t5;
explain replace into replace_table1(select col1 from t1 where col1>1 group by col1 desc  limit 1) union ALL (select col1 from t2 where col3>="20221115114210" order by col1 limit 1) order by col1 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using pushed GROUP BY
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into replace_table1(select col1 from t1 where col1>1 group by col1 desc  limit 1) union ALL (select col1 from t2 where col3>="20221115114210" order by col1 limit 1) order by col1 limit 1;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gt": 1 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" } } }], sort[{ "$sort": { "col1": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain replace into t5(select * from t1 where col4>="def" order by col4 limit 2,3) union ALL(select * from t2 where col1>=1 group by col2 order by col2 limit 2,1) order by col3 limit 2,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into t5(select * from t1 where col4>="def" order by col4 limit 2,3) union (select * from t2 where col1>=1 group by col2 order by col2 limit 2,1) order by col3 limit 2,3;
[Note] SequoiaDB: Query message: condition[{ "col4": { "$gte": "def" } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[3], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 1 } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
6	def	2022-11-15 11:42:10	def
truncate table t5;
explain replace into replace_table7 (select col2 from t1 where col1>=1 limit 1)  UNION ALL (select col2 from t1 where col2>="def" order by col4 desc limit 1) UNION ALL (select col2 from t2 where col1>=1 group by col2 order by col2 desc limit 1) order by col2 desc limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col12	5	NULL	#	Using where with pushed condition; Using index
2	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
3	UNION	t2	index	idx_col1,idx_col12	idx_col12	18	NULL	#	Using where with pushed condition; Using index; Using pushed GROUP BY; Using pushed ORDER BY
NULL	UNION RESULT	<union1,2,3>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into replace_table7(select col2 from t1 where col1>=1 limit 1)  UNION ALL (select col2 from t1 where col2>="def" order by col4 desc limit 1) UNION ALL (select col2 from t2 where col1>=1 group by col2 order by col2 desc limit 1) order by col2 desc limit 1;
[Note] SequoiaDB: optimizer selector object: { "col1": null, "col2": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{ "col1": null, "col2": null }], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gte": "def" } }], selector[{}], order_by[{ "col4": -1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 1 } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" } } }], sort[{ "$sort": { "col2": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table7;
col4
NULL
xyzz 
truncate table replace_table7;
explain replace into t5 (select * from t1 where col1>=1 limit 1) UNION ALL (select * from t2 where col2>"defg" order by col2 desc) UNION ALL (select * from t1 where col2>"defg" order by col2 desc limit 1) UNION ALL (select * from t2 where col1>=1 group by col2 order by col2 desc limit 2,1) order by col2 desc limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	UNION	t2	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition
3	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
4	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2,3,4>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into t5 (select * from t1 where col1>=1 limit 1) UNION ALL (select * from t2 where col2>"defg" order by col2 desc) UNION ALL (select * from t1 where col2>"defg" order by col2 desc limit 1) UNION ALL (select * from t2 where col1>=1 group by col2 order by col2 desc limit 2,1) order by col2 desc limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "defg" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "defg" } }], selector[{}], order_by[{ "col2": -1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 1 } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": -1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
2	xyzz 	2022-11-15 11:45:10	xyzz 
truncate table t5;
explain replace into replace_table7(select col4 from t1_partition where col1>=1 limit 1) UNION ALL (select col4 from t2_partition where col4>"defg" order by col4 desc) UNION ALL (select col4 from t1_partition where col4>"defg" order by col4 desc limit 1) UNION ALL (select col4 from t2_partition where col1>=1 group by col4 order by col4 desc limit 1) order by col4 desc limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1_partition	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	UNION	t2_partition	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition
3	UNION	t1_partition	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
4	UNION	t2_partition	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2,3,4>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into replace_table7(select col4 from t1_partition where col1>=1 limit 1) UNION ALL (select col4 from t2_partition where col4>"defg" order by col4 desc) UNION ALL (select col4 from t1_partition where col4>"defg" order by col4 desc limit 1) UNION ALL (select col4 from t2_partition where col1>=1 group by col4 order by col4 desc limit 1) order by col4 desc limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1_partition]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col4": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2_partition
[Note] SequoiaDB: Query message: condition[{ "col4": { "$gt": "defg" } }], selector[{ "_id": null, "col4": null }], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2_partition]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col4": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1_partition
[Note] SequoiaDB: Query message: condition[{ "col4": { "$gt": "defg" } }], selector[{ "_id": null, "col4": null }], order_by[{ "col4": -1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1_partition]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 1 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table7;
col4
xyz 
truncate table replace_table7;
explain replace into t5(select * from t1 where col1>=1 order by col1 desc) union ALL (select * from t2 where col2>"def" order by col4 desc) limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	UNION	t2	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1>=1 order by col1 desc) union ALL (select * from t2 where col2>"def" order by col4 desc) limit 1,3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "def" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
2	def	NULL	def
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	NULL	2022-11-15 11:40:15	abcdef
truncate table t5;
explain replace into replace_table1(select count(*) from t1 where col1>=1 group by col1 desc) union ALL (select count(*) from t2 where col2>"def" group by col2 desc) limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	UNION	t2	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition; Using index
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*) from t1 where col1>=1 group by col1 desc) union ALL (select count(*) from t2 where col2>"def" group by col2 desc) limit 1,3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col2": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "def" } }], selector[{ "_id": null, "col2": null }], order_by[{ "col2": -1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
1
1
1
truncate table replace_table1;
explain replace into replace_table1(select count(*) from t1 where col1>1 group by col1 limit 2,4 ) union ALL (select count(*) from t2 where col3>="20221115114210" group by col4 limit 2,3)   limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	UNION	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary; Using filesort
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*) from t1 where col1>1 group by col1 limit 2,4 ) union ALL (select count(*) from t2 where col3>="20221115114210" group by col4 limit 2,3)  limit 1,3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
1
1
1
truncate table replace_table1;
explain replace into replace_table1(select count(*) from t1 where col4>"bcd" group by col3 order by col3) union ALL (select count(*) from t2 where col3>="20221115114210" group by col3 order by col3)  limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	UNION	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using index
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*) from t1 where col4>"bcd" group by col3 order by col3) union ALL (select count(*) from t2 where col3>="20221115114210" group by col3 order by col3)  limit 1,3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col3": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }], selector[{ "_id": null, "col3": null }], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
1
2
3
truncate table replace_table1;
explain replace into replace_table1(select count(*) from t1 where col4>"bcd" group by col3 order by col3  limit 0,3) union ALL (select count(*) from t2 where col3>="20221115114210" group by col3 order by col3  limit 0,2)  limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	UNION	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using index
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*) from t1 where col4>"bcd" group by col3 order by col3  limit 0,3) union ALL (select count(*) from t2 where col3>="20221115114210" group by col3 order by col3  limit 0,2)  limit 1,3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col3": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }], selector[{ "_id": null, "col3": null }], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
1
1
2
truncate table replace_table1;
explain  replace into replace_table1(select count(*) from t1 where col1>=1 limit 0,4) union ALL (select count(*)  from t2 where col2>"def" limit 0,3) limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	UNION	t2	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition; Using index
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*) from t1 where col1>=1 limit 0,4) union ALL (select count(*)  from t2 where col2>"def" limit 0,3) limit 1,3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gte": 1 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gte": 1 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col2": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col2": { "$gt": "def" } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col2": { "$gt": "def" } }],hint[{ "": "idx_col2" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
3
truncate table replace_table1;
explain replace into replace_table1(select count(1) from t1 where col1>=1 order by col1 desc) union ALL (select count(1) from t2 where col2>"def" order by col4 desc) limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	UNION	t2	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(1) from t1 where col1>=1 order by col1 desc) union ALL (select count(1) from t2 where col2>"def" order by col4 desc) limit 1,3;
[Note] SequoiaDB: optimizer count: 1, condition: { "col2": { "$gt": "def" } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col2": { "$gt": "def" } }],hint[{ "": "idx_col2" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
3
truncate table replace_table1;
explain replace into replace_table1(select count(col4) from t1 where col1>1 order by col4 desc) union ALL (select count(col4) from t2 where col3>="20221115114210" order by col4 limit 1)  limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	UNION	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(col4) from t1 where col1>1 order by col4 desc) union ALL (select count(col4) from t2 where col3>="20221115114210" order by col4 limit 1)  limit 1,3;
[Note] SequoiaDB: optimizer count: 1, condition: { "col4": { "$isnull": 0 }, "col3": { "$gte": "2022-11-15 11:42:10" } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col4": { "$isnull": 0 }, "col3": { "$gte": "2022-11-15 11:42:10" } }],hint[{ "": "idx_col3" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
4
truncate table replace_table1;
explain replace into replace_table1(select count(1) from t1 where col1>1) UNION (select count(1) from t2 where col4<"zzz") limit 1,1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	UNION	t2	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(1) from t1 where col1>1) UNION (select count(1) from t2 where col4<"zzz") limit 1,1;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gt": 1 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gt": 1 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col4": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col4": { "$lt": "zzz" } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col4": { "$lt": "zzz" } }],hint[{}] table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
11
truncate table replace_table1;
explain replace into t5(select * from t1 where col1>=1 limit 2,4) UNION (select *  from t2 where col2>"def" limit 2,3) limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	UNION	t2	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1>=1 limit 2,4) UNION (select *  from t2 where col2>"def" limit 2,3) limit 1,3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[4], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "def" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[3], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
3	NULL	2022-11-15 11:40:15	abcdef
3	xyz	2022-11-15 11:45:10	xyz 
4	abcde	2022-11-15 11:40:20	efg
truncate table t5;
explain replace into t5(select * from t1 where col1>=1 group by col1 desc) UNION (select * from t2 where col2>"def" group by col2 desc) limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1>=1 group by col1 desc) UNION (select * from t2 where col2>"def" group by col2 desc) limit 1,3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 1 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$gt": "def" } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
select * from t5;
col1	col2	col3	col4
4	abcde	2022-11-15 11:40:20	efg
5	abcdef	2022-11-15 11:40:15	abcdef
6	def	2022-11-15 11:42:10	def
truncate table t5;
explain replace into replace_table1(select col1 from t1 where col1>1 order by col1 desc) UNION (select col1 from t2 where col3>="20221115114210" order by col4 limit 1) order by col1 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into replace_table1(select col1 from t1 where col1>1 order by col1 desc) UNION (select col1 from t2 where col3>="20221115114210" order by col4 limit 1) order by col1 limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{ "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
truncate table t5;
explain replace into t5(select * from t1 where col1>1 group by col1 limit 2,4 ) UNION (select * from t2 where col3>="20221115114210" group by col4 limit 2,3) order by col1  limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into t5(select * from t1 where col1>1 group by col1 limit 2,4 ) UNION (select * from t2 where col3>="20221115114210" group by col4 limit 2,3) order by col1  limit 1,3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gt": 1 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 4 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 3 }]
select * from t5;
col1	col2	col3	col4
3	xyz	2022-11-15 11:45:10	xyz 
4	abcde	2022-11-15 11:40:20	efg
5	abcdef	2022-11-15 11:40:15	abcdef
truncate table t5;
explain replace into t5(select * from t1 where col4>"bcd" group by col3 order by col3) UNION (select * from t2 where col3>="20221115114210" group by col3 order by col3) order by col1  limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into t5(select * from t1 where col4>"bcd" group by col3 order by col3) UNION (select * from t2 where col3>="20221115114210" group by col3 order by col3) order by col1  limit 1,3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col4": { "$gt": "bcd" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
select * from t5;
col1	col2	col3	col4
2	def	NULL	def
6	def	2022-11-15 11:42:10	def
7	def	2022-11-15 11:40:20	def
truncate table t5;
explain replace into t5(select * from t1 where col4>"bcd" group by col3 order by col3  limit 0,3) UNION (select * from t2 where col3>="20221115114210" group by col3 order by col3  limit 0,2) order by col1  limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into t5(select * from t1 where col4>"bcd" group by col3 order by col3  limit 0,3) UNION (select * from t2 where col3>="20221115114210" group by col3 order by col3  limit 0,2) order by col1  limit 1,3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col4": { "$gt": "bcd" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 2 }]
select * from t5;
col1	col2	col3	col4
2	def	NULL	def
6	def	2022-11-15 11:42:10	def
7	def	2022-11-15 11:40:20	def
truncate table t5;
explain replace into t5(select * from t1 where col1>=1 limit 2,3) UNION (select * from t2 where col2>"def" order by col4 desc) limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	UNION	t2	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1>=1 limit 2,3) UNION (select * from t2 where col2>"def" order by col4 desc) limit 1,3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[3], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "def" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
3	NULL	2022-11-15 11:40:15	abcdef
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into replace_table7(select col4 from t1 where col1>1 group by col4 desc) UNION (select col4 from t2 where col3>="20221115114210" order by col4 limit 1) order by col4 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into replace_table7(select col4 from t1 where col1>1 group by col4 desc) UNION (select col4 from t2 where col3>="20221115114210" order by col4 limit 1) order by col4 limit 1;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gt": 1 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table7;
col4
abcdef
truncate table replace_table7;
explain replace into replace_table1(select col1 from t1 where col1>1 group by col1 desc  limit 1) UNION (select col1 from t2 where col3>="20221115114210" order by col1 limit 1) order by col1 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using pushed GROUP BY
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into replace_table1(select col1 from t1 where col1>1 group by col1 desc  limit 1) UNION (select col1 from t2 where col3>="20221115114210" order by col1 limit 1) order by col1 limit 1;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gt": 1 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" } } }], sort[{ "$sort": { "col1": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
truncate table t5;
explain replace into t5(select * from t1 where col4>="def" order by col4 limit 2,3) UNION (select * from t2 where col1>=1 group by col2 order by col2 limit 2,1) order by col3 limit 2,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
2	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into t5(select * from t1 where col4>="def" order by col4 limit 2,3) UNION (select * from t2 where col1>=1 group by col2 order by col2 limit 2,1) order by col3 limit 2,3;
[Note] SequoiaDB: Query message: condition[{ "col4": { "$gte": "def" } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[3], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 1 } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
6	def	2022-11-15 11:42:10	def
truncate table t5;
explain replace into t5 (select * from t1 where col1>=1 limit 2,3)  UNION (select * from t1 where col2>="def" order by col4  limit 2,3) UNION (select * from t2 where col1>=1 group by col2 order by col2  limit 2,1) order by col3  limit 2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
3	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2,3>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into t5(select * from t1 where col1>=1 limit 2,3)  UNION (select * from t1 where col2>="def" order by col4  limit 2,3) UNION (select * from t2 where col1>=1 group by col2 order by col2  limit 2,1) order by col3  limit 2;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[3], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gte": "def" } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[3], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 1 } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
3	NULL	2022-11-15 11:40:15	abcdef
5	abcdef	2022-11-15 11:40:15	abcdef
truncate table t5;
explain replace into t5 (select * from t1 where col1>=1 limit 2,3) UNION (select * from t2 where col2>"def" order by col4 ) UNION (select * from t1 where col2>="def" order by col4  limit 2,3) UNION (select * from t2 where col1>=1 group by col2 order by col2  limit 2,1) order by col3  limit 2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	UNION	t2	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition
3	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
4	UNION	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2,3,4>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into t5(select * from t1 where col1>=1 limit 2,3) UNION (select * from t2 where col2>"def" order by col4 ) UNION (select * from t1 where col2>="def" order by col4  limit 2,3) UNION (select * from t2 where col1>=1 group by col2 order by col2  limit 2,1) order by col3  limit 2;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[3], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "def" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gte": "def" } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[3], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 1 } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
3	NULL	2022-11-15 11:40:15	abcdef
5	abcdef	2022-11-15 11:40:15	abcdef
truncate table t5;
explain  replace into replace_table7(select col4 from t1_partition where col1>=1 limit 1) UNION (select col4 from t2_partition where col4>"def" order by col4 ) UNION (select col4 from t1_partition where col4>="def" order by col4  limit 1) UNION (select col4 from t2_partition where col1>=1 group by col4 order by col4  limit 1) order by col4  limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1_partition	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	UNION	t2_partition	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition
3	UNION	t1_partition	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
4	UNION	t2_partition	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2,3,4>	ALL	NULL	NULL	NULL	NULL	#	Using filesort
replace into replace_table7(select col4 from t1_partition where col1>=1 limit 1) UNION (select col4 from t2_partition where col4>"def" order by col4 ) UNION (select col4 from t1_partition where col4>="def" order by col4  limit 1) UNION (select col4 from t2_partition where col1>=1 group by col4 order by col4  limit 1) order by col4  limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1_partition]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col4": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2_partition
[Note] SequoiaDB: Query message: condition[{ "col4": { "$gt": "def" } }], selector[{ "_id": null, "col4": null }], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2_partition]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col4": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1_partition
[Note] SequoiaDB: Query message: condition[{ "col4": { "$gte": "def" } }], selector[{ "_id": null, "col4": null }], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1_partition]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 1 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table7;
col4
NULL
truncate table replace_table7;
explain replace into t5(select * from t1 where col1>=1 order by col1 desc) UNION (select * from t2 where col2>"def" order by col4 desc) limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	UNION	t2	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1>=1 order by col1 desc) UNION (select * from t2 where col2>"def" order by col4 desc) limit 1,3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "def" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
2	def	NULL	def
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	NULL	2022-11-15 11:40:15	abcdef
truncate table t5;
explain replace into replace_table1(select count(*) from t1 where col1>=1 group by col1 desc) UNION (select count(*) from t2 where col2>"def" group by col2 desc) limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	UNION	t2	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition; Using index
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*) from t1 where col1>=1 group by col1 desc) UNION (select count(*) from t2 where col2>"def" group by col2 desc) limit 1,3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col2": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "def" } }], selector[{ "_id": null, "col2": null }], order_by[{ "col2": -1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
1
2
2
truncate table replace_table1;
explain replace into replace_table1(select count(*) from t1 where col1>1 group by col1 limit 2,4 ) UNION (select count(*) from t2 where col3>="20221115114210" group by col4 limit 2,3)   limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	UNION	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary; Using filesort
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*) from t1 where col1>1 group by col1 limit 2,4 ) UNION (select count(*) from t2 where col3>="20221115114210" group by col4 limit 2,3)  limit 1,3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
truncate table replace_table1;
explain replace into replace_table1(select count(*) from t1 where col4>"bcd" group by col3 order by col3) UNION (select count(*) from t2 where col3>="20221115114210" group by col3 order by col3)  limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	UNION	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using index
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*) from t1 where col4>"bcd" group by col3 order by col3) UNION (select count(*) from t2 where col3>="20221115114210" group by col3 order by col3)  limit 1,3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col3": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }], selector[{ "_id": null, "col3": null }], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
2
3
truncate table replace_table1;
explain replace into replace_table1(select count(*) from t1 where col4>"bcd" group by col3 order by col3  limit 0,3) UNION (select count(*) from t2 where col3>="20221115114210" group by col3 order by col3  limit 0,2)  limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	UNION	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using index
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*) from t1 where col4>"bcd" group by col3 order by col3  limit 0,3) UNION (select count(*) from t2 where col3>="20221115114210" group by col3 order by col3  limit 0,2)  limit 1,3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col3": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }], selector[{ "_id": null, "col3": null }], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
2
3
truncate table replace_table1;
explain  replace into replace_table1(select count(*) from t1 where col1>=1 limit 0,4) UNION (select count(*)  from t2 where col2>"def" limit 0,3) limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	UNION	t2	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition; Using index
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*) from t1 where col1>=1 limit 0,4) UNION (select count(*)  from t2 where col2>"def" limit 0,3) limit 1,3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gte": 1 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gte": 1 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col2": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col2": { "$gt": "def" } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col2": { "$gt": "def" } }],hint[{ "": "idx_col2" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
3
truncate table replace_table1;
explain  replace into replace_table1(select count(1) from t1 where col1>=1 order by col1 desc) UNION (select count(1) from t2 where col2>"def" order by col4 desc) limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	UNION	t2	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(1) from t1 where col1>=1 order by col1 desc) UNION (select count(1) from t2 where col2>"def" order by col4 desc) limit 1,3;
[Note] SequoiaDB: optimizer count: 1, condition: { "col2": { "$gt": "def" } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col2": { "$gt": "def" } }],hint[{ "": "idx_col2" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
3
truncate table replace_table1;
explain  replace into replace_table1(select count(1) from t1 where col1>1 order by col1 desc) UNION (select count(1) from t2 where col3>="20221115114210" order by col4 limit 2,3)  limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	UNION	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(1) from t1 where col1>1 order by col1 desc) UNION (select count(1) from t2 where col3>="20221115114210" order by col4 limit 2,3)  limit 1,3;
[Note] SequoiaDB: optimizer count: 1, condition: { "col3": { "$gte": "2022-11-15 11:42:10" } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col3": { "$gte": "2022-11-15 11:42:10" } }],hint[{ "": "idx_col3" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
truncate table replace_table1;
explain replace into replace_table1(select count(1) from t1, t2 where t1.col1>=4 and t2.col1 <=6 ) UNION (select count(1) from t1 where col4<"zzz") limit 0,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
1	PRIMARY	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
2	UNION	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(1) from t1, t2 where t1.col1>=4 and t2.col1 <=6 ) UNION (select count(1) from t1 where col4<"zzz") limit 0,3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 4 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col4": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col4": { "$lt": "zzz" } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col4": { "$lt": "zzz" } }],hint[{}] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
11
40
truncate table replace_table1;
explain replace into replace_table1(select count(1) from t1, t2 where t1.col1>=4 and t2.col1 <=6 ) UNION (select count(1) from t1,t2  where t1.col4 >='def' and t2.col4<"zzz") UNION (select count(1) from t1 where col4<"zzz") limit 0,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
1	PRIMARY	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
2	UNION	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition
2	UNION	t2	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using join buffer (flat, BNL join)
3	UNION	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,2,3>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(1) from t1, t2 where t1.col1>=4 and t2.col1 <=6 ) UNION (select count(1) from t1,t2  where t1.col4 >='def' and t2.col4<"zzz") UNION (select count(1) from t1 where col4<"zzz") limit 0,3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 4 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col4": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col4": { "$gte": "def" } }], selector[{ "_id": null, "col4": null }], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col4": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col4": { "$lt": "zzz" } }], selector[{ "_id": null, "col4": null }], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col4": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col4": { "$lt": "zzz" } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col4": { "$lt": "zzz" } }],hint[{}] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
11
40
77
truncate table replace_table1;
explain replace into t5(select t1.* from t1, t2 where t1.col1>=2 and t2.col1 <=6 group by t1.col3 order by t1.col3  limit 1,4) UNION (select * from t1 where col3>="20221115114210" group by col3 order by col3  limit 0,2) limit 0,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
1	PRIMARY	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
2	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select t1.* from t1, t2 where t1.col1>=2 and t2.col1 <=6 group by t1.col3 order by t1.col3  limit 1,4) UNION (select * from t1 where col3>="20221115114210" group by col3 order by col3  limit 0,2) limit 0,3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 2 }]
select * from t5;
col1	col2	col3	col4
3	NULL	2022-11-15 11:40:15	abcdef
4	abcde	2022-11-15 11:40:20	efg
6	def	2022-11-15 11:42:10	def
truncate table t5;
explain replace into t5(select t1.* from t1, t2 where t1.col1>=2 and t2.col1 <=6 group by t1.col3 order by t1.col3  limit 1,4) UNION (select t2.*  from t1,t2  where t1.col4 >='def' and t2.col4<"zzz" group by col3 order by col3  limit 0,2) UNION (select * from t1 where col3>="20221115114210" group by col3 order by col3  limit 0,2) limit 0,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
1	PRIMARY	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
2	UNION	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	UNION	t2	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using join buffer (flat, BNL join)
3	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,2,3>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select t1.* from t1, t2 where t1.col1>=2 and t2.col1 <=6 group by t1.col3 order by t1.col3  limit 1,4) UNION (select t2.*  from t1,t2  where t1.col4 >='def' and t2.col4<"zzz" group by col3 order by col3  limit 0,2) UNION (select * from t1 where col3>="20221115114210" group by col3 order by col3  limit 0,2) limit 0,3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col4": { "$lt": "zzz" } }], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col4": { "$gte": "def" } }], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 2 }]
select * from t5;
col1	col2	col3	col4
3	NULL	2022-11-15 11:40:15	abcdef
4	abcde	2022-11-15 11:40:20	efg
6	def	2022-11-15 11:42:10	def
truncate table t5;
explain replace into replace_table3 select count(*),(select count(col1) from t1 where col1>=1) from t2 where col3>"20221115114210";
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table3 select count(*),(select count(col1) from t1 where col1>=1) from t2 where col3>"20221115114210";
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col3": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col3": { "$gt": "2022-11-15 11:42:10" } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }],hint[{ "": "idx_col3" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$isnull": 0 }, "col1": { "$gte": 1 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$isnull": 0 }, "col1": { "$gte": 1 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
3	9
truncate table replace_table3;
explain replace into replace_table2 select *,(select col1 from t1 where col1>=1 limit 2,1) from t2 where col3>"20221115114210"  limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table2 select *,(select col1 from t1 where col1>=1 limit 2,1) from t2 where col3>"20221115114210"  limit 1,3;
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[3], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{ "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table2;
col1	col2	col3	col4	col5
2	xyzz 	2022-11-15 11:45:10	xyzz 	2
3	xyz	2022-11-15 11:45:10	xyz 	2
truncate table replace_table2;
explain replace into replace_table4 select *,(select col2 from t1 where col3>="20221215114210" group by col4) from t2 where t2.col1 <6 group by col1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
replace into replace_table4 select *,(select col2 from t1 where col3>="20221215114210" group by col4) from t2 where t2.col1 <6 group by col1;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$lt": 6 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-12-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
select * from replace_table4;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	NULL
1	defg 	2022-11-15 11:45:10	defg	NULL
2	def	NULL	def	NULL
3	NULL	2022-11-15 11:40:15	abcdef	NULL
4	abcde	2022-11-15 11:40:20	efg	NULL
5	abcdef	2022-11-15 11:40:15	abcdef	NULL
truncate table replace_table4;
explain replace into replace_table2 select *,(select col1 from t1 where col2>="bcd" order by col3 limit 2,1) from t2 where col3>"20221115114210" order by col4 limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table2 select *,(select col1 from t1 where col2>="bcd" order by col3 limit 2,1) from t2 where col3>"20221115114210" order by col4 limit 1,3;
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[3], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gte": "bcd" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "" }], limit[1], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table2;
col1	col2	col3	col4	col5
2	xyzz 	2022-11-15 11:45:10	xyzz 	6
3	xyz	2022-11-15 11:45:10	xyz 	6
truncate table replace_table2;
explain replace into replace_table4 select *,(select col2 from t1 where col3<"20221215114210" group by col4 limit 2,1) from t2 where t2.col1 <6 group by col1 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
replace into replace_table4 select *,(select col2 from t1 where col3<"20221215114210" group by col4 limit 2,1) from t2 where t2.col1 <6 group by col1 limit 3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$lt": 6 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$lt": "2022-12-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 1 }]
select * from replace_table4;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	abcdef
1	defg 	2022-11-15 11:45:10	defg	abcdef
2	def	NULL	def	abcdef
truncate table replace_table4;
explain replace into replace_table4 select *,(select col2 from t1 where col3>="20221215114210" group by col4 order by col1) from t2 where t2.col1 <6 group by col1 order by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table4 select *,(select col2 from t1 where col3>="20221215114210" group by col4 order by col1) from t2 where t2.col1 <6 group by col1 order by col3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$lt": 6 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-12-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
select * from replace_table4;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	NULL
1	defg 	2022-11-15 11:45:10	defg	NULL
2	def	NULL	def	NULL
3	NULL	2022-11-15 11:40:15	abcdef	NULL
4	abcde	2022-11-15 11:40:20	efg	NULL
5	abcdef	2022-11-15 11:40:15	abcdef	NULL
truncate table replace_table4;
explain replace into replace_table4 select *,(select col4 from t1 where col3<"20221215114210" group by col4 order by col4 limit 1) from t2 where t2.col1 <6 group by col1 order by col3 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table4 select *,(select col4 from t1 where col3<"20221215114210" group by col4 order by col4 limit 1) from t2 where t2.col1 <6 group by col1 order by col3 limit 3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$lt": 6 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$lt": "2022-12-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table4;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	NULL
2	def	NULL	def	NULL
3	NULL	2022-11-15 11:40:15	abcdef	NULL
truncate table replace_table4;
explain replace into replace_table3 select col1,(select col1 from t1 where col2>="bcd" order by col1 limit 0,1) from t2 where t2.col4 >"def" group by col1 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	SUBQUERY	t1	index	idx_col2	idx_col12	18	NULL	#	Using where with pushed condition; Using index; Using pushed ORDER BY
replace into replace_table3 select col1,(select col1 from t1 where col2>="bcd" order by col1 limit 0,1) from t2 where t2.col4 >"def" group by col1 limit 3;
[Note] SequoiaDB: optimizer selector object: { "col1": null, "col2": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gte": "bcd" } }], selector[{ "col1": null, "col2": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col12" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table4;
col1	col2	col3	col4	col5
truncate table replace_table4;
explain replace into replace_table4 select *,(select col1 from t1 where col3>="20221215114210" order by col1) from t2 where t2.col1 < 6 group by col1 order by col3 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
2	SUBQUERY	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using filesort
replace into replace_table4 select *,(select col1 from t1 where col3>="20221215114210" order by col1) from t2 where t2.col1 < 6 group by col1 order by col3 limit 3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$lt": 6 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-12-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table4;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	NULL
2	def	NULL	def	NULL
3	NULL	2022-11-15 11:40:15	abcdef	NULL
truncate table replace_table4;
explain replace into replace_table4 select *,(select col1 from t1 where col3>="20221215114210" order by col1) from t2 where t2.col1 < 6 order by col3 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
2	SUBQUERY	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using filesort
replace into replace_table4 select *,(select col1 from t1 where col3>="20221215114210" order by col1) from t2 where t2.col1 < 6 order by col3 limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 6 } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "" }], limit[3], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-12-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table4;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	NULL
2	def	NULL	def	NULL
3	NULL	2022-11-15 11:40:15	abcdef	NULL
truncate table replace_table4;
explain replace into replace_table5 select count(*),(select col4 from t1 where col3<"20221215114210" group by col4 order by col4 limit 1) from t2 where t2.col1 < 6;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table5 select count(*),(select col4 from t1 where col3<"20221215114210" group by col4 order by col4 limit 1) from t2 where t2.col1 < 6;
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.replace_table4]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 6 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 6 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$lt": "2022-12-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table5;
col1	col2
9	NULL
truncate table replace_table5;
explain replace into replace_table4 select *,(select col4 from t1 where col3<"20221215114210" group by col4 order by col4 limit 1) from t2 where t2.col1 < 6 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table4 select *,(select col4 from t1 where col3<"20221215114210" group by col4 order by col4 limit 1) from t2 where t2.col1 < 6 limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 6 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[3], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$lt": "2022-12-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table4;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	NULL
0	abcde	2022-11-15 11:40:20	NULL	NULL
1	defg 	2022-11-15 11:45:10	defg	NULL
truncate table replace_table4;
explain replace into replace_table4 select *,(select col4 from t1 where col3<"20221215114210" group by col4 order by col4 limit 1) from t2 where t2.col1 < 6 order by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using filesort
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table4 select *,(select col4 from t1 where col3<"20221215114210" group by col4 order by col4 limit 1) from t2 where t2.col1 < 6 order by col3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 6 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$lt": "2022-12-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table4;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	NULL
0	abcde	2022-11-15 11:40:20	NULL	NULL
1	defg 	2022-11-15 11:45:10	defg	NULL
2	def	NULL	def	NULL
2	xyzz 	2022-11-15 11:45:10	xyzz 	NULL
3	NULL	2022-11-15 11:40:15	abcdef	NULL
3	xyz	2022-11-15 11:45:10	xyz 	NULL
4	abcde	2022-11-15 11:40:20	efg	NULL
5	abcdef	2022-11-15 11:40:15	abcdef	NULL
truncate table replace_table4;
explain  replace into replace_table5 select col1,(select col4 from t1_partition where col3<"20221215114210" group by col4 order by col4 limit 1) from t2_partition where t2_partition.col1 < 6 order by col4;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2_partition	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using filesort
2	SUBQUERY	t1_partition	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table5 select col1,(select col4 from t1_partition where col3<"20221215114210" group by col4 order by col4 limit 1) from t2_partition where t2_partition.col1 < 6 order by col4;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 6 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2_partition]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$lt": "2022-12-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table5;
col1	col2
0	NULL
1	NULL
1	NULL
2	NULL
2	NULL
3	NULL
3	NULL
4	NULL
5	NULL
truncate table replace_table5;
explain replace into replace_table2 select *,(select col1 from t1 where col2="bcd" order by col3) from t2 where col3>"20221115114210" order by col4;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using filesort
2	SUBQUERY	t1	ref	idx_col2	idx_col2	13	const	#	Using where with pushed condition; Using filesort
replace into replace_table2 select *,(select col1 from t1 where col2="bcd" order by col3) from t2 where col3>"20221115114210" order by col4;
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "bcd" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table2;
col1	col2	col3	col4	col5
1	defg 	2022-11-15 11:45:10	defg	NULL
2	xyzz 	2022-11-15 11:45:10	xyzz 	NULL
3	xyz	2022-11-15 11:45:10	xyz 	NULL
truncate table replace_table2;
explain replace into replace_table3 select count(*),(select count(col2) from t1 where col3>="20221215114210" group by col4) from t2 where t2.col1 <6 group by col1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table3 select count(*),(select count(col2) from t1 where col3>="20221215114210" group by col4) from t2 where t2.col1 <6 group by col1;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-12-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
1	1
1	NULL
1	NULL
1	NULL
2	1
2	NULL
2	NULL
2	NULL
3	1
truncate table replace_table3;
explain replace into replace_table3 select count(*),(select count(col2) from t1 where col3<"20221215114210" group by col4 limit 2,1) from t2 where t2.col1 <6 group by col1 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table3 select count(*),(select count(col2) from t1 where col3<"20221215114210" group by col4 limit 2,1) from t2 where t2.col1 <6 group by col1 limit 3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$lt": "2022-12-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
1	1
2	1
2	1
truncate table replace_table3;
explain replace into replace_table3 select count(*),(select count(col2) from t1 where col3>="20221215114210" group by col4 order by col1) from t2 where t2.col1 <6 group by col1 order by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	SUBQUERY	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table3 select count(*),(select count(col2) from t1 where col3>="20221215114210" group by col4 order by col1) from t2 where t2.col1 <6 group by col1 order by col3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 6 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-12-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
1	NULL
1	NULL
1	NULL
2	NULL
2	NULL
2	NULL
truncate table replace_table3;
explain replace into replace_table3 select count(col1),(select count(col1) from t1 where col3<"20221215114210" group by col1 order by col1 limit 1) from t2 where t2.col1 <6 group by col1 order by col1 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	index	idx_col3	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table3 select count(col1),(select count(col1) from t1 where col3<"20221215114210" group by col1 order by col1 limit 1) from t2 where t2.col1 <6 group by col1 order by col1 limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$lt": "2022-12-15 11:42:10" } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
2	0
truncate table replace_table3;
explain  replace into replace_table3 select count(*),(select count(col1) from t1 where col1>=1 limit 1,3) from t2 where col3>"20221115114210" limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table3 select count(*),(select count(col1) from t1 where col1>=1 limit 1,3) from t2 where col3>"20221115114210" limit 3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col3": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col3": { "$gt": "2022-11-15 11:42:10" } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }],hint[{ "": "idx_col3" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$isnull": 0 }, "col1": { "$gte": 1 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$isnull": 0 }, "col1": { "$gte": 1 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
3	NULL
truncate table replace_table3;
explain  replace into replace_table3 select count(1),(select col1 from t1 where col2="bcd" order by col3) from t2 where col3>"20221115114210" order by col4;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
2	SUBQUERY	t1	ref	idx_col2	idx_col2	13	const	#	Using where with pushed condition; Using filesort
replace into replace_table3 select count(1),(select col1 from t1 where col2="bcd" order by col3) from t2 where col3>"20221115114210" order by col4;
[Note] SequoiaDB: Count message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }],hint[{ "": "idx_col3" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "bcd" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
3	NULL
truncate table replace_table3;
explain  replace into replace_table3 select count(1),(select col1 from t1 where col2>="bcd" order by col3 limit 2,1) from t2 where col3>"20221115114210" order by col4 limit 1,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table3 select count(1),(select col1 from t1 where col2>="bcd" order by col3 limit 2,1) from t2 where col3>"20221115114210" order by col4 limit 1,3;
[Note] SequoiaDB: Count message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }],hint[{ "": "idx_col3" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gte": "bcd" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "" }], limit[1], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
truncate table replace_table3;
explain replace into replace_table1 select count(*) from t2 where t2.col1 < (select count(col4) from t1 where col3>="20221115114210" ) ;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
replace into replace_table1 select count(*) from t2 where t2.col1 < (select count(col4) from t1 where col3>="20221115114210" ) ;
[Note] SequoiaDB: optimizer count: 1, condition: { "col4": { "$isnull": 0 }, "col3": { "$gte": "2022-11-15 11:42:10" } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col4": { "$isnull": 0 }, "col3": { "$gte": "2022-11-15 11:42:10" } }],hint[{ "": "idx_col3" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 4 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 4 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
7
truncate table replace_table1;
explain replace into t5 select * from t2 where t2.col1 < (select col1 from t1 where col1>=5 limit 0,1)  limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into t5 select * from t2 where t2.col1 < (select col1 from t1 where col1>=5 limit 0,1)  limit 3;
[Note] SequoiaDB: optimizer selector object: { "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{ "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 5 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[3], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
0	abcde	2022-11-15 11:40:20	NULL
1	defg 	2022-11-15 11:45:10	defg
truncate table t5;
explain replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>="20221115114010" group by col4 having col4 < "zzz") group by col3 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	ALL	idx_col2	NULL	NULL	NULL	#	Using where with pushed condition; Using temporary; Using filesort
1	PRIMARY	<subquery2>	eq_ref	distinct_key	distinct_key	13	count_limit_sort_pushdown_sequoiadb_3.t2.col2	#	
2	MATERIALIZED	t1	ALL	idx_col3	NULL	NULL	NULL	#	Using where with pushed condition; Using temporary
replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>="20221115114010" group by col4 having col4 < "zzz") group by col3 desc;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$isnull": 0 } }], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:40:10" } }], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
1	defg 	2022-11-15 11:45:10	defg
2	def	NULL	def
5	abcdef	2022-11-15 11:40:15	abcdef
6	def	2022-11-15 11:42:10	def
7	def	2022-11-15 11:40:20	def
truncate table t5;
explain replace into t5 select * from t2 where t2.col1 < (select col1 from t1 where col1>=5 order by col4 limit 0,1)  order by col3 desc limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
replace into t5 select * from t2 where t2.col1 < (select col1 from t1 where col1>=5 order by col4 limit 0,1)  order by col3 desc limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 5 } }], selector[{}], order_by[{ "col3": -1 }], hint[{ "": "" }], limit[3], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into t5 select * from t2 where t2.col1 < (select col1 from t1 where col1>=5 group by col4 limit 0,1) group by col3 desc limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
replace into t5 select * from t2 where t2.col1 < (select col1 from t1 where col1>=5 group by col4 limit 0,1) group by col3 desc limit 3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 5 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$lt": 5 } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
3	NULL	2022-11-15 11:40:15	abcdef
4	abcde	2022-11-15 11:40:20	efg
truncate table t5;
explain replace into t5 select * from t2 where t2.col2 < (select col4 from t1 where col3>="20221115114210" group by col4 desc limit 1) group by col3 desc limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
replace into t5 select * from t2 where t2.col2 < (select col4 from t1 where col3>="20221115114210" group by col4 desc limit 1) group by col3 desc limit 3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "xyzz " } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
6	def	2022-11-15 11:42:10	def
7	def	2022-11-15 11:40:20	def
truncate table t5;
explain replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 having col4 < "zzz"   order by col1 desc) group by col3 order by col2 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery2>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col2	idx_col2	13	<subquery2>.col4	#	
2	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary
replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 having col4 < "zzz"   order by col1 desc) group by col3 order by col2 desc;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyzz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
2	xyzz 	2022-11-15 11:45:10	xyzz 
truncate table t5;
explain replace into t5 select * from t2 where t2.col1 < (select col1 from t1 where col1>=5 group by col4 order by col1 limit 0,1) group by col3 order by col2 desc limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into t5 select * from t2 where t2.col1 < (select col1 from t1 where col1>=5 group by col4 order by col1 limit 0,1) group by col3 order by col2 desc limit 3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 5 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$lt": 5 } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
2	def	NULL	def
4	abcde	2022-11-15 11:40:20	efg
truncate table t5;
explain replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col2 desc having col2 < "zzz") group by col3 desc limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery2>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col2	idx_col2	13	<subquery2>.col4	#	
2	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary
replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col2 desc having col2 < "zzz") group by col3 desc limit 3;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyzz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
2	xyzz 	2022-11-15 11:45:10	xyzz 
truncate table t5;
explain replace into t5 select * from t2 where t2.col2 < (select col4 from t1 where col1>="7" group by col4 desc) group by col3 desc limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
replace into t5 select * from t2 where t2.col2 < (select col4 from t1 where col1>="7" group by col4 desc) group by col3 desc limit 3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": { "$decimal": "7" } } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "def" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
4	abcde	2022-11-15 11:40:20	efg
5	abcdef	2022-11-15 11:40:15	abcdef
truncate table t5;
explain replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 having col4 < "zzz"   order by col1 desc) group by col3 order by col2 desc limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery2>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col2	idx_col2	13	<subquery2>.col4	#	
2	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary
replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 having col4 < "zzz"   order by col1 desc) group by col3 order by col2 desc limit 3;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyzz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
2	xyzz 	2022-11-15 11:45:10	xyzz 
truncate table t5;
explain replace into t5 select * from t2 where t2.col4 in(select col2 from t1 where col2>"def" order by col1 desc) group by col1 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	index	NULL	idx_col1	5	NULL	#	
1	PRIMARY	<subquery2>	eq_ref	distinct_key	distinct_key	13	func	#	
2	MATERIALIZED	t1	index	idx_col2	idx_col12	18	NULL	#	Using where with pushed condition; Using index
replace into t5 select * from t2 where t2.col4 in(select col2 from t1 where col2>"def" order by col1 desc) group by col1 limit 3;
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "def" } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into replace_table1 select col1 from t2 where t2.col1 <(select count(1) from t1 where col1>=1 limit 0,1) group by col1 order by col1 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using pushed GROUP BY; Using pushed ORDER BY
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table1 select col1 from t2 where t2.col1 <(select count(1) from t1 where col1>=1 limit 0,1) group by col1 order by col1 limit 1;
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gte": 1 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gte": 1 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$lt": 9 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table1;
col1
0
truncate table replace_table1;
explain replace into t5 select * from t2 where t2.col1 <(select count(col1) from t1 where col1>=1 limit 0,1)  group by col1 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into t5 select * from t2 where t2.col1 <(select count(col1) from t1 where col1>=1 limit 0,1)  group by col1 limit 3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$isnull": 0 }, "col1": { "$gte": 1 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$isnull": 0 }, "col1": { "$gte": 1 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$lt": 9 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
1	defg 	2022-11-15 11:45:10	defg
2	def	NULL	def
truncate table t5;
explain replace into t5 select * from t2 where t2.col1 <(select col1 from t1 where col1>=1 limit 0,1)  group by col1 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into t5 select * from t2 where t2.col1 <(select col1 from t1 where col1>=1 limit 0,1)  group by col1 limit 3;
[Note] SequoiaDB: optimizer selector object: { "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{ "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$lt": 1 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
truncate table t5;
explain replace into t5 select * from t2 where t2.col1 <(select col1 from t1 where col1=1 order by col3 desc)  group by col1 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	SUBQUERY	t1	ref	idx_col1,idx_col12	idx_col1	5	const	#	Using where; Using filesort
replace into t5 select * from t2 where t2.col1 <(select col1 from t1 where col1=1 order by col3 desc)  group by col1 limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$lt": 1 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
truncate table t5;
explain replace into replace_table1 select count(*) from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 having col4 < "zzz"  order by col1 desc);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery2>	ALL	distinct_key	NULL	NULL	NULL	#	
1	PRIMARY	t2	ref	idx_col2	idx_col2	13	<subquery2>.col4	#	Using index
2	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary
replace into replace_table1 select count(*) from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 having col4 < "zzz"  order by col1 desc);
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col2": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyz " } }], selector[{ "_id": null, "col2": null }], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col2": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyzz " } }], selector[{ "_id": null, "col2": null }], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 having col4 < "zzz"   order by col1 desc)  limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery2>	ALL	distinct_key	NULL	NULL	NULL	#	
1	PRIMARY	t2	ref	idx_col2	idx_col2	13	<subquery2>.col4	#	
2	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary
replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 having col4 < "zzz"   order by col1 desc)  limit 3;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyzz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
2	xyzz 	2022-11-15 11:45:10	xyzz 
truncate table t5;
explain replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 having col4 < "zzz"   order by col1 desc) order by col3 desc limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery2>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col2	idx_col2	13	<subquery2>.col4	#	
2	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary
replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 having col4 < "zzz"   order by col1 desc) order by col3 desc limit 3;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyzz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
2	xyzz 	2022-11-15 11:45:10	xyzz 
truncate table t5;
explain replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 having col4 < "zzz"  order by col1 desc) order by col3 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery2>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col2	idx_col2	13	<subquery2>.col4	#	
2	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary
replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 having col4 < "zzz"  order by col1 desc) order by col3 desc;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyzz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
2	xyzz 	2022-11-15 11:45:10	xyzz 
truncate table t5;
explain replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" order by col1 desc)  order by col3 desc limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery2>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col2	idx_col2	13	count_limit_sort_pushdown_sequoiadb_3.t1.col4	#	
2	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" order by col1 desc)  order by col3 desc limit 3;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "defg" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyzz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
2	xyzz 	2022-11-15 11:45:10	xyzz 
truncate table t5;
explain replace into t5 select * from t2 where t2.col1 < (select col1 from t1 where col1>=5 order by col2 limit 0,1) order by col3 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using filesort
2	SUBQUERY	t1	index	idx_col1,idx_col12	idx_col12	18	NULL	#	Using where with pushed condition; Using index; Using pushed ORDER BY
replace into t5 select * from t2 where t2.col1 < (select col1 from t1 where col1>=5 order by col2 limit 0,1) order by col3 desc;
[Note] SequoiaDB: optimizer selector object: { "col1": null, "col2": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{ "col1": null, "col2": null }], order_by[{ "col2": 1 }], hint[{ "": "idx_col12" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 5 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
0	abcde	2022-11-15 11:40:20	NULL
1	defg 	2022-11-15 11:45:10	defg
2	def	NULL	def
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	NULL	2022-11-15 11:40:15	abcdef
3	xyz	2022-11-15 11:45:10	xyz 
4	abcde	2022-11-15 11:40:20	efg
truncate table t5;
explain  replace into replace_table7 select col4 from t2_partition where t2_partition.col1 < (select col1 from t1_partition where col1>=5 order by col4 limit 0,1) order by col4 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2_partition	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using filesort
2	SUBQUERY	t1_partition	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
select col4 from t2_partition where t2_partition.col1 < (select col1 from t1_partition where col1>=5 order by col4 limit 0,1) order by col4 desc;
col4
NULL
abc
abcdef
abcdef
def
def
def
def
defg
efg
xyz 
xyz 
xyz 
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1_partition]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1_partition]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 10 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2_partition]
select * from replace_table7;
col4
truncate table replace_table7;
explain replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" order by col4 desc) order by col3 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery2>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col2	idx_col2	13	count_limit_sort_pushdown_sequoiadb_3.t1.col4	#	
2	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
replace into t5 select * from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" order by col4 desc) order by col3 desc;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "defg" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyzz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from t5;
col1	col2	col3	col4
2	xyzz 	2022-11-15 11:45:10	xyzz 
truncate table t5;
explain replace into replace_table1 select count(*) from t2 where t2.col1 in(select count(col4) from t1 where col3>"20221115114210" group by col4 desc) group by col3 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery2>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col1,idx_col12	idx_col1	5	<subquery2>.count(col4)	#	Using where
2	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary
replace into replace_table1 select count(*) from t2 where t2.col1 in(select count(col4) from t1 where col3>"20221115114210" group by col4 desc) group by col3 desc;
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t5]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain replace into replace_table1 select count(*) from t2 where  t2.col1 < (select count(col1) from t1 where col1>=5 group by col4 limit 0,1)group by col3 desc limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table1 select count(*) from t2 where  t2.col1 < (select count(col1) from t1 where col1>=5 group by col4 limit 0,1)group by col3 desc limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
1
1
truncate table replace_table1;
explain replace into replace_table1 select count(*) from t2 where t2.col1 in(select count(col4) from t1 where col3>"20221115114210" group by col4  order by col1 desc)  group by col3 order by col2 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery2>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col1,idx_col12	idx_col1	5	<subquery2>.count(col4)	#	Using where
2	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary
replace into replace_table1 select count(*) from t2 where t2.col1 in(select count(col4) from t1 where col3>"20221115114210" group by col4  order by col1 desc)  group by col3 order by col2 desc;
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain replace into replace_table1 select count(*) from t2 where t2.col1 < (select count(col1) from t1 where col1>=5 group by col4 order by col1 limit 0,1) group by col3 order by col2 desc limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table1 select count(*) from t2 where t2.col1 < (select count(col1) from t1 where col1>=5 group by col4 order by col1 limit 0,1) group by col3 order by col2 desc limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
1
1
truncate table replace_table1;
explain  replace into replace_table1 select count(1) from t2 where t2.col1 < (select col1 from t1 where col1>=5 limit 0,1)  limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table1 select count(1) from t2 where t2.col1 < (select col1 from t1 where col1>=5 limit 0,1)  limit 3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
8
truncate table replace_table1;
explain  replace into replace_table1 select count(1) from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" order by col4 desc) order by col3 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery2>	ALL	distinct_key	NULL	NULL	NULL	#	
1	PRIMARY	t2	ref	idx_col2	idx_col2	13	count_limit_sort_pushdown_sequoiadb_3.t1.col4	#	
2	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
replace into replace_table1 select count(1) from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" order by col4 desc) order by col3 desc;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "defg" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyzz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain  replace into replace_table1 select count(1) from t2 where t2.col1 < (select col1 from t1 where col1>=5 order by col4 limit 0,1)  order by col3 desc limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table1 select count(1) from t2 where t2.col1 < (select col1 from t1 where col1>=5 order by col4 limit 0,1)  order by col3 desc limit 3;
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
8
truncate table replace_table1;
explain replace into replace_table1 select count(*) from t2 where col1>4 group by col1 having col1> (select count(1) from t1 where col4>"def") ;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition
replace into replace_table1 select count(*) from t2 where col1>4 group by col1 having col1> (select count(1) from t1 where col4>"def") ;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 4 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col4": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col4": { "$gt": "def" } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col4": { "$gt": "def" } }],hint[{}] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
1
1
truncate table replace_table1;
explain replace into t5 select * from t2 where col1>4 group by col1 having col1> (select col1 from t1 where col4>"def" limit 1) limit 2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	SUBQUERY	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition
replace into t5 select * from t2 where col1>4 group by col1 having col1> (select col1 from t1 where col4>"def" limit 1) limit 2;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 4 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col4": { "$gt": "def" } }], selector[{}], order_by[{}], hint[{}], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
5	abcdef	2022-11-15 11:40:15	abcdef
6	def	2022-11-15 11:42:10	def
truncate table t5;
explain replace into t5 select * from t2 where col1>4 group by col1 having col2 in (select col4 from t1 where col2>"def" group by col2 desc having col2 < "zzz");
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	MATERIALIZED	t1	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition
replace into t5 select * from t2 where col1>4 group by col1 having col2 in (select col4 from t1 where col2>"def" group by col2 desc having col2 < "zzz");
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 4 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "def" } }], selector[{}], order_by[{ "col2": -1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
truncate table t5;
explain replace into replace_table7 select col2 from t2 where col1>1 group by col1 having col2< (select col4 from t1 where col2<"abcdef" order by col4 desc limit 1) order by col2 desc limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col12	5	NULL	#	Using where with pushed condition; Using index; Using temporary; Using filesort
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table7 select col2 from t2 where col1>1 group by col1 having col2< (select col4 from t1 where col2<"abcdef" order by col4 desc limit 1) order by col2 desc limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$lt": "abcdef" } }], selector[{}], order_by[{ "col4": -1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
truncate table t5;
explain replace into replace_table7 select col4 from t2 where col1>1 group by col4 having col4< (select col4 from t1 where col2="abcdef" group by col4 desc limit 1) limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	SUBQUERY	t1	ref	idx_col2	idx_col2	13	const	#	Using where with pushed condition; Using pushed GROUP BY
replace into replace_table7 select col4 from t2 where col1>1 group by col4 having col4< (select col4 from t1 where col2="abcdef" group by col4 desc limit 1) limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$et": "abcdef" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col2": { "$first": "$col2" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
truncate table t5;
explain replace into t5 select * from t2 where col1>1 group by col1 having col2< (select col4 from t1 where col2="abcdef" group by col3 order by col4 desc) order by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	SUBQUERY	t1	ref	idx_col2	idx_col2	13	const	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY
replace into t5 select * from t2 where col1>1 group by col1 having col2< (select col4 from t1 where col2="abcdef" group by col3 order by col4 desc) order by col3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$et": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
select * from t5;
col1	col2	col3	col4
4	abcde	2022-11-15 11:40:20	efg
truncate table t5;
explain replace into t5 select * from t2 where col1>4 group by col1 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 ) order by col2 desc limit 2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into t5 select * from t2 where col1>4 group by col1 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 ) order by col2 desc limit 2;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 4 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
6	def	2022-11-15 11:42:10	def
7	def	2022-11-15 11:40:20	def
truncate table t5;
explain replace into replace_table1 select count(*) from t2 where col1>1 group by col2 having col2< (select col4 from t1 where col2="abcdef" order by col4 desc );
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col12	5	NULL	#	Using where with pushed condition; Using index; Using temporary; Using filesort
2	SUBQUERY	t1	ref	idx_col2	idx_col2	13	const	#	Using where with pushed condition; Using filesort
replace into replace_table1 select count(*) from t2 where col1>1 group by col2 having col2< (select col4 from t1 where col2="abcdef" order by col4 desc );
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "abcdef" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain replace into replace_table1 select count(*) from t2 where col1>4 group by col2 having col2< (select col4 from t1 where col2<"abcdef" order by col4 desc limit 1 );
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col12	5	NULL	#	Using where with pushed condition; Using index; Using temporary; Using filesort
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table1 select count(*) from t2 where col1>4 group by col2 having col2< (select col4 from t1 where col2<"abcdef" order by col4 desc limit 1 );
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 4 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$lt": "abcdef" } }], selector[{}], order_by[{ "col4": -1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
2
truncate table replace_table1;
explain replace into replace_table1 select count(*) from t2 where col1>4 group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 );
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col12	5	NULL	#	Using where with pushed condition; Using index; Using temporary; Using filesort
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table1 select count(*) from t2 where col1>4 group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 );
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 4 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table1;
col1
1
2
truncate table replace_table1;
explain replace into t5 select * from t2 where col1>4 group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 ) limit 2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into t5 select * from t2 where col1>4 group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 ) limit 2;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 4 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
5	abcdef	2022-11-15 11:40:15	abcdef
6	def	2022-11-15 11:42:10	def
truncate table t5;
explain  replace into replace_table7 select col4 from t2_partition where col1>4 group by col4 having col4< (select col4 from t1_partition where col2<"abcdef" group by col4 order by col4 desc limit 1 ) limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2_partition	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	SUBQUERY	t1_partition	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table7 select col4 from t2_partition where col1>4 group by col4 having col4< (select col4 from t1_partition where col2<"abcdef" group by col4 order by col4 desc limit 1 ) limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 4 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2_partition]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col2": { "$first": "$col2" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table7;
col4
abcdef
def
truncate table replace_table7;
explain replace into t5 select * from t2 where col1>1 group by col1 having col2< (select col4 from t1 where col2="abcdef" order by col1 desc);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	SUBQUERY	t1	ref	idx_col2	idx_col2	13	const	#	Using where with pushed condition; Using filesort
replace into t5 select * from t2 where col1>1 group by col1 having col2< (select col4 from t1 where col2="abcdef" order by col1 desc);
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "abcdef" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
4	abcde	2022-11-15 11:40:20	efg
truncate table t5;
explain replace into replace_table1 select count(*) from t2 where col1>1 group by col1 having col1 > (select count(col4) from t1 where col2="abcdef" group by col3 desc);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	ref	idx_col2	idx_col2	13	const	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table1 select count(*) from t2 where col1>1 group by col1 having col1 > (select count(col4) from t1 where col2="abcdef" group by col3 desc);
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "abcdef" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
1
1
1
2
2
truncate table replace_table1;
explain replace into replace_table1 select count(*) from t2 where col1>1 group by col1 having col1 > (select count(col4)  from t1 where col2="abcdef" group by col3 order by col4 desc) order by col3 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	SUBQUERY	t1	ref	idx_col2	idx_col2	13	const	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table1 select count(*) from t2 where col1>1 group by col1 having col1 > (select count(col4)  from t1 where col2="abcdef" group by col3 order by col4 desc) order by col3 desc;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "abcdef" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
1
1
1
2
2
truncate table replace_table1;
explain replace into replace_table1 select count(*) from t2 where col1>1 group by col1 having col1 > (select count(col4)  from t1 where col2="abcdef" group by col3 order by col4 desc) order by col3 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	SUBQUERY	t1	ref	idx_col2	idx_col2	13	const	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table1 select count(*) from t2 where col1>1 group by col1 having col1 > (select count(col4)  from t1 where col2="abcdef" group by col3 order by col4 desc) order by col3 desc;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "abcdef" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
1
1
1
2
2
truncate table replace_table1;
explain replace into replace_table1 select count(*) from t2 where col1>4 group by col1 having col1 > (select count(col4)  from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 ) order by col2 desc limit 2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col12	5	NULL	#	Using where with pushed condition; Using index; Using temporary; Using filesort
2	SUBQUERY	t1	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table1 select count(*) from t2 where col1>4 group by col1 having col1 > (select count(col4)  from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 ) order by col2 desc limit 2;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 4 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$lt": "abcdef" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
1
truncate table replace_table1;
explain replace into replace_table1 select count(1) from t2 where col1>4 group by col1 having col1> (select col1 from t1 where col4>"def" limit 1) limit 2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition
replace into replace_table1 select count(1) from t2 where col1>4 group by col1 having col1> (select col1 from t1 where col4>"def" limit 1) limit 2;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 4 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col4": { "$gt": "def" } }], selector[{}], order_by[{}], hint[{}], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
1
truncate table replace_table1;
explain  replace into replace_table1 select count(1) from t2 where col1>1 group by col2 having col2< (select col4 from t1 where col2="abcdef" order by col1 desc);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col12	5	NULL	#	Using where with pushed condition; Using index; Using temporary; Using filesort
2	SUBQUERY	t1	ref	idx_col2	idx_col2	13	const	#	Using where with pushed condition; Using filesort
replace into replace_table1 select count(1) from t2 where col1>1 group by col2 having col2< (select col4 from t1 where col2="abcdef" order by col1 desc);
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "abcdef" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain  replace into replace_table1 select count(1) from t2 where col1>1 group by col2 having col2< (select col4 from t1 where col2<"abcdef" order by col4 desc limit 1) order by col2 desc limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col12	5	NULL	#	Using where with pushed condition; Using index; Using temporary; Using filesort
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table1 select count(1) from t2 where col1>1 group by col2 having col2< (select col4 from t1 where col2<"abcdef" order by col4 desc limit 1) order by col2 desc limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 1 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$lt": "abcdef" } }], selector[{}], order_by[{ "col4": -1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
3
truncate table replace_table1;
explain replace into replace_table3 select count(*),(select count(col1) from t1 where col1>=1)  from t2 where t2.col1 in(select count(col4) from t1 where col3>"20221115114210" ) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery3>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col1,idx_col12	idx_col12	5	<subquery3>.count(col4)	#	Using where; Using index
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table3 select count(*),(select count(col1) from t1 where col1>=1)  from t2 where t2.col1 in(select count(col4) from t1 where col3>"20221115114210" ) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$lt": "abcdef" } }], selector[{}], order_by[{ "col4": -1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer pushdown autocommit: 1
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.replace_table1]
[Note] SequoiaDB: optimizer count: 1, condition: { "col4": { "$isnull": 0 }, "col3": { "$gt": "2022-11-15 11:42:10" } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col4": { "$isnull": 0 }, "col3": { "$gt": "2022-11-15 11:42:10" } }],hint[{ "": "idx_col3" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 3 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table3;
col1	col2
truncate table replace_table3;
explain replace into replace_table2 select *,(select col1 from t1 where col1>=1 limit 2,1)  from t2 where t2.col1 < (select col1 from t1 where col1>=5 limit 0,1) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table2 select *,(select col1 from t1 where col1>=1 limit 2,1)  from t2 where t2.col1 < (select col1 from t1 where col1>=5 limit 0,1) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
[Note] SequoiaDB: optimizer selector object: { "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{ "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{ "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 5 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: optimizer selector object: { "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{ "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table2;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	2
0	abcde	2022-11-15 11:40:20	NULL	2
2	def	NULL	def	2
truncate table replace_table2;
explain replace into replace_table2 select *,(select col1 from t1 where col1>=7 group by col1)  from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 desc having col4 < "zzz" ) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery3>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col2	idx_col2	13	<subquery3>.col4	#	
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary
2	SUBQUERY	t1	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using pushed GROUP BY
replace into replace_table2 select *,(select col1 from t1 where col1>=7 group by col1)  from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 desc having col4 < "zzz" ) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "defg" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyzz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table2;
col1	col2	col3	col4	col5
truncate table replace_table2;
explain replace into replace_table2 select *,(select col1 from t1 where col1>=1 order by col3 desc limit 2,1)  from t2 where t2.col1 < (select col1 from t1 where col1>=5 order by col4 limit 0,1) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table2 select *,(select col1 from t1 where col1>=1 order by col3 desc limit 2,1)  from t2 where t2.col1 < (select col1 from t1 where col1>=5 order by col4 limit 0,1) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 5 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{}], order_by[{ "col3": -1 }], hint[{ "": "" }], limit[1], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table2;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	3
0	abcde	2022-11-15 11:40:20	NULL	3
2	def	NULL	def	3
truncate table replace_table2;
explain replace into replace_table2 select *,(select col1 from t1 where col1>=1 group by col1 limit 2,1)  from t2 where t2.col1 < (select col1 from t1 where col1>=5 group by col4 limit 0,1) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
2	SUBQUERY	t1	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using pushed GROUP BY
replace into replace_table2 select *,(select col1 from t1 where col1>=1 group by col1 limit 2,1)  from t2 where t2.col1 < (select col1 from t1 where col1>=5 group by col4 limit 0,1) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 5 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 5 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 5 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 1 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 1 }]
select * from replace_table2;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	3
0	abcde	2022-11-15 11:40:20	NULL	3
2	def	NULL	def	3
truncate table replace_table2;
explain replace into replace_table2 select *,(select col1 from t1 where col1>=7 group by col1 order by col3 desc)  from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 having col4 < "zzz"   order by col1 desc) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery3>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col2	idx_col2	13	<subquery3>.col4	#	
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table2 select *,(select col1 from t1 where col1>=7 group by col1 order by col3 desc)  from t2 where t2.col2 in(select col4 from t1 where col3>"20221115114210" group by col4 having col4 < "zzz"   order by col1 desc) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "defg" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyzz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table2;
col1	col2	col3	col4	col5
truncate table replace_table2;
explain replace into replace_table2 select *,(select col1 from t1 where col1>=1 group by col1 order by col1 desc limit 1)  from t2 where t2.col1 < (select col1 from t1 where col1>=5 group by col4 order by col1 limit 0,1) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
2	SUBQUERY	t1	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using pushed GROUP BY; Using pushed ORDER BY
replace into replace_table2 select *,(select col1 from t1 where col1>=1 group by col1 order by col1 desc limit 1)  from t2 where t2.col1 < (select col1 from t1 where col1>=5 group by col4 order by col1 limit 0,1) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 5 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 1 } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" } } }], sort[{ "$sort": { "col1": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table2;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	7
0	abcde	2022-11-15 11:40:20	NULL	7
2	def	NULL	def	7
truncate table replace_table2;
explain replace into replace_table2 select *,(select col1 from t1 where col1>=1 limit 2,1) from t2 where t2.col2 in(select col4 from t1 where col3<"20221115114210" order by col4 desc)  group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   order by col3 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	ALL	idx_col2	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	<subquery3>	eq_ref	distinct_key	distinct_key	13	func	#	
3	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table2 select *,(select col1 from t1 where col1>=1 limit 2,1) from t2 where t2.col2 in(select col4 from t1 where col3<"20221115114210" order by col4 desc)  group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   order by col3 desc;
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.replace_table2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$lt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: optimizer selector object: { "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{ "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table2;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	2
5	abcdef	2022-11-15 11:40:15	abcdef	2
7	def	2022-11-15 11:40:20	def	2
truncate table replace_table2;
explain replace into replace_table2 select *,(select col1 from t1 where col1>=1 limit 2,1) from t2 where t2.col2 in(select col4 from t1 where col3<"20221115114210" order by col4 desc)  group by col2 having col2< (select col4 from t1 where col2<"abcdef" order by col4 desc limit 1 )   order by col3 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	ALL	idx_col2	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	<subquery3>	eq_ref	distinct_key	distinct_key	13	func	#	
3	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table2 select *,(select col1 from t1 where col1>=1 limit 2,1) from t2 where t2.col2 in(select col4 from t1 where col3<"20221115114210" order by col4 desc)  group by col2 having col2< (select col4 from t1 where col2<"abcdef" order by col4 desc limit 1 )   order by col3 desc;
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.replace_table2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$lt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$lt": "abcdef" } }], selector[{}], order_by[{ "col4": -1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{ "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table2;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	2
5	abcdef	2022-11-15 11:40:15	abcdef	2
7	def	2022-11-15 11:40:20	def	2
truncate table replace_table2;
explain replace into replace_table2 select *,(select col1 from t1 where col1>=1 limit 2,1) from t2 where t2.col2 in(select col4 from t1 where col3<"20221115114210" order by col4 desc)  group by col2 having col2< (select col4 from t1 where col2="abcdef" order by col4 desc )   order by col3 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	ALL	idx_col2	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	<subquery3>	eq_ref	distinct_key	distinct_key	13	func	#	
3	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
4	SUBQUERY	t1	ref	idx_col2	idx_col2	13	const	#	Using where with pushed condition; Using filesort
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table2 select *,(select col1 from t1 where col1>=1 limit 2,1) from t2 where t2.col2 in(select col4 from t1 where col3<"20221115114210" order by col4 desc)  group by col2 having col2< (select col4 from t1 where col2="abcdef" order by col4 desc )   order by col3 desc;
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.replace_table2]
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$lt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "abcdef" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{ "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table2;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	2
truncate table replace_table2;
explain replace into replace_table2 select *,(select col1 from t1 where col2>="bcd" order by col1 limit 0,1) from t2 where t2.col4 in(select col2 from t1 where col2>"def" group by col1 desc having col1 < 10) group by col4 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using temporary; Using filesort
1	PRIMARY	<subquery3>	eq_ref	distinct_key	distinct_key	13	count_limit_sort_pushdown_sequoiadb_3.t2.col4	#	
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	MATERIALIZED	t1	index	idx_col2	idx_col12	18	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	index	idx_col2	idx_col12	18	NULL	#	Using where with pushed condition; Using index; Using pushed ORDER BY
replace into replace_table2 select *,(select col1 from t1 where col2>="bcd" order by col1 limit 0,1) from t2 where t2.col4 in(select col2 from t1 where col2>"def" group by col1 desc having col1 < 10) group by col4 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "def" } }], selector[{}], order_by[{ "col1": -1, "col2": -1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: optimizer selector object: { "col1": null, "col2": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gte": "bcd" } }], selector[{ "col1": null, "col2": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col12" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table2;
col1	col2	col3	col4	col5
1	defg 	2022-11-15 11:45:10	defg	1
truncate table replace_table2;
explain replace into replace_table4 select *,(select col4 from t1 where col3<"20221215114210" group by col4 order by col4 limit 1) from t2 where t2.col1 <(select count(1) from t1 where col1>=1 limit 0,1) group by col1 having col1< (select col1 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1) order by col3 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table4 select *,(select col4 from t1 where col3<"20221215114210" group by col4 order by col4 limit 1) from t2 where t2.col1 <(select count(1) from t1 where col1>=1 limit 0,1) group by col1 having col1< (select col1 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1) order by col3 limit 3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gte": 1 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gte": 1 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 9 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$lt": "2022-12-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table4;
col1	col2	col3	col4	col5
0	abc	2022-11-15 11:40:10	abc	NULL
2	def	NULL	def	NULL
3	NULL	2022-11-15 11:40:15	abcdef	NULL
truncate table replace_table4;
explain  replace into replace_table5 select col1,(select col4 from t1_partition where col3<"20221215114210" group by col4 order by col4 limit 1) from t2_partition where t2_partition.col1 <(select count(1) from t1_partition where col1>=1 limit 0,1) group by col1 having col1< (select col1 from t1_partition where col2<"abcdef" group by col4 order by col4 desc limit 1) order by col4 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2_partition	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
4	SUBQUERY	t1_partition	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	SUBQUERY	t1_partition	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1_partition	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table5 select col1,(select col4 from t1_partition where col3<"20221215114210" group by col4 order by col4 limit 1) from t2_partition where t2_partition.col1 <(select count(1) from t1_partition where col1>=1 limit 0,1) group by col1 having col1< (select col1 from t1_partition where col2<"abcdef" group by col4 order by col4 desc limit 1) order by col4 limit 1;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1_partition
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gte": 1 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1_partition
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gte": 1 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1_partition]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 14 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2_partition]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$lt": "2022-12-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table5;
col1	col2
0	NULL
truncate table replace_table5;
explain  replace into replace_table2 select *,(select col1 from t1 where col1>=7 order by col1 desc)  from t2 where t2.col2 in(select col2 from t1 where col3>"20221115114210" order by col2 desc) group by col2 having col2> (select col2 from t1 where col2>"abcdef" group by col2 order by col2 desc limit 1 )   limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery3>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col2	idx_col2	13	count_limit_sort_pushdown_sequoiadb_3.t1.col2	#	
3	MATERIALIZED	t1	range	idx_col2,idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
4	SUBQUERY	t1	index	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition; Using index; Using pushed GROUP BY; Using pushed ORDER BY
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table2 select *,(select col1 from t1 where col1>=7 order by col1 desc)  from t2 where t2.col2 in(select col2 from t1 where col3>"20221115114210" order by col2 desc) group by col2 having col2> (select col2 from t1 where col2>"abcdef" group by col2 order by col2 desc limit 1 )   limit 1;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "defg " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyz" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$et": "xyzz " } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col2": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$gt": "abcdef" } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" } } }], sort[{ "$sort": { "col2": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table2;
col1	col2	col3	col4	col5
truncate table replace_table2;
explain replace into replace_table3 select count(*),(select count(col1)  from t1 where col1>=7 group by col1)  from t2 where t2.col1 in(select count(col4) from t1 where col3>"20221115114210" group by col4 desc) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery3>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col1,idx_col12	idx_col12	5	<subquery3>.count(col4)	#	Using where; Using index
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table3 select count(*),(select count(col1)  from t1 where col1>=7 group by col1)  from t2 where t2.col1 in(select count(col4) from t1 where col3>"20221115114210" group by col4 desc) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.replace_table2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 1 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 7 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
1	1
truncate table replace_table3;
explain replace into replace_table3 select count(*),(select count(col1)  from t1 where col1>=1 group by col1 limit 2,1)  from t2 where  t2.col1 < (select count(col1) from t1 where col1>=5 group by col4 limit 0,1) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col12	5	NULL	#	Using where with pushed condition; Using index; Using temporary; Using filesort
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table3 select count(*),(select count(col1)  from t1 where col1>=1 group by col1 limit 2,1)  from t2 where  t2.col1 < (select count(col1) from t1 where col1>=5 group by col4 limit 0,1) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 1 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
1	2
1	2
truncate table replace_table3;
explain replace into replace_table3 select count(*),(select count(col1)  from t1 where col1>=7 group by col1 order by col3 desc)  from t2 where t2.col1 in(select count(col4) from t1 where col3>"20221115114210" group by col4  order by col1 desc) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery3>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col1,idx_col12	idx_col12	5	<subquery3>.count(col4)	#	Using where; Using index
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table3 select count(*),(select count(col1)  from t1 where col1>=7 group by col1 order by col3 desc)  from t2 where t2.col1 in(select count(col4) from t1 where col3>"20221115114210" group by col4  order by col1 desc) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.replace_table3]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 1 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 7 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
1	1
truncate table replace_table3;
explain replace into replace_table3 select count(*),(select count(col1)  from t1 where col1>=1 group by col1 order by col3 desc limit 2,1)  from t2 where t2.col1 < (select count(col1) from t1 where col1>=5 group by col4 order by col1 limit 0,1) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col12	5	NULL	#	Using where with pushed condition; Using index; Using temporary; Using filesort
4	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table3 select count(*),(select count(col1)  from t1 where col1>=1 group by col1 order by col3 desc limit 2,1)  from t2 where t2.col1 < (select count(col1) from t1 where col1>=5 group by col4 order by col1 limit 0,1) group by col2 having col2< (select col4 from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 5 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 1 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col2": { "$lt": "abcdef" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 1 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
1	1
1	1
truncate table replace_table3;
explain  replace into replace_table3 select count(1) as col1,(select count(col1)  from t1 where col1>=1 limit 6) as col2  from t2 where t2.col1 < (select count(col1)  from t1 where col1>=5 limit 0,1) group by col1 having col1< (select count(col4)  from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 );
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
4	SUBQUERY	t1	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition; Using temporary; Using filesort
3	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
Warnings:
Warning	1052	Column 'col1' in group statement is ambiguous
Warning	1052	Column 'col1' in having clause is ambiguous
replace into replace_table3 select count(1) as col1,(select count(col1)  from t1 where col1>=1 limit 6) as col2  from t2 where t2.col1 < (select count(col1)  from t1 where col1>=5 limit 0,1) group by col1 having col1< (select count(col4)  from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 );
Warnings:
Warning	1052	Column 'col1' in group statement is ambiguous
Warning	1052	Column 'col1' in having clause is ambiguous
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$isnull": 0 }, "col1": { "$gte": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$isnull": 0 }, "col1": { "$gte": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 3 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$isnull": 0 }, "col1": { "$gte": 1 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$isnull": 0 }, "col1": { "$gte": 1 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$lt": "abcdef" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
2	9
truncate table replace_table3;
explain replace into replace_table3 select count(1),(select count(col1) from t1 where col1>=1 order by col1 desc)  from t2 where t2.col1 in (select count(col1) from t1 where col3>"20221115114210" order by col1 desc) group by t2.col1 having t2.col1> (select count(col1) from t1 where col2>"abcdef" group by col1 order by col1 desc limit 1 )   limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<subquery3>	ALL	distinct_key	NULL	NULL	NULL	#	Using temporary; Using filesort
1	PRIMARY	t2	ref	idx_col1,idx_col12	idx_col1	5	<subquery3>.count(col1)	#	Using where; Using index
4	SUBQUERY	t1	index	idx_col2	idx_col12	18	NULL	#	Using where with pushed condition; Using index
3	MATERIALIZED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
replace into replace_table3 select count(1),(select count(col1) from t1 where col1>=1 order by col1 desc)  from t2 where t2.col1 in (select count(col1) from t1 where col3>"20221115114210" order by col1 desc) group by t2.col1 having t2.col1> (select count(col1) from t1 where col2>"abcdef" group by col1 order by col1 desc limit 1 )   limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$et": 3 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "abcdef" } }], selector[{}], order_by[{ "col1": -1, "col2": -1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$isnull": 0 }, "col1": { "$gte": 1 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$isnull": 0 }, "col1": { "$gte": 1 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
2	9
truncate table replace_table3;
explain  replace into replace_table3 select count(1),(select count(col1) from t1 where col1>=1 order by col3 desc limit 2,1)  from t2 where t2.col1 < (select count(col1) from t1 where col1>=5 order by col4 limit 0,1) group by col1 having col1< (select count(col4) from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
4	SUBQUERY	t1	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition; Using temporary; Using filesort
3	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table3 select count(1),(select count(col1) from t1 where col1>=1 order by col3 desc limit 2,1)  from t2 where t2.col1 < (select count(col1) from t1 where col1>=5 order by col4 limit 0,1) group by t2.col1 having t2.col1< (select count(col4) from t1 where col2<"abcdef" group by col3 order by col4 desc limit 1 )   limit 3;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 3 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$isnull": 0 }, "col1": { "$gte": 1 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$isnull": 0 }, "col1": { "$gte": 1 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$lt": "abcdef" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table3;
col1	col2
2	NULL
truncate table replace_table3;
explain replace into replace_table3 select count(*),(select count(1) from t1, t2 where t1.col1>=4 and t2.col1 <=6 ) from t2 where t2.col1 < (select count(col4) from t1 where col3>="20221115114210" ) ;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
3	SUBQUERY	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
replace into replace_table3 select count(*),(select count(1) from t1, t2 where t1.col1>=4 and t2.col1 <=6 ) from t2 where t2.col1 < (select count(col4) from t1 where col3>="20221115114210" ) ;
[Note] SequoiaDB: optimizer count: 1, condition: { "col4": { "$isnull": 0 }, "col3": { "$gte": "2022-11-15 11:42:10" } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col4": { "$isnull": 0 }, "col3": { "$gte": "2022-11-15 11:42:10" } }],hint[{ "": "idx_col3" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 4 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 4 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 4 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table3;
col1	col2
7	40
truncate table replace_table3;
explain replace into replace_table4 select *, (select t1.col4 from t1, t2 where t1.col1>=2 and t2.col1 <=6 group by t1.col3 order by t1.col3  limit 1) from t2 where t2.col1 < (select col1 from t1 where col1>=5 group by col4 order by col1 limit 0,1) group by col3 order by col2 desc limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	SUBQUERY	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
replace into replace_table4 select *, (select t1.col4 from t1, t2 where t1.col1>=2 and t2.col1 <=6 group by t1.col3 order by t1.col3  limit 1) from t2 where t2.col1 < (select col1 from t1 where col1>=5 group by col4 order by col1 limit 0,1) group by col3 order by col2 desc limit 3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gte": 5 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$lt": 5 } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table4;
col1	col2	col3	col4	col5
1	defg 	2022-11-15 11:45:10	defg	def
2	def	NULL	def	def
4	abcde	2022-11-15 11:40:20	efg	def
truncate table replace_table4;
explain replace into replace_table1 select * from (select count(*) from t1 where col3>="20221115114310") dt;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	
2	DERIVED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using index
replace into replace_table1 select * from (select count(*) from t1 where col3>="20221115114310") dt;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col3": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col3": { "$gte": "2022-11-15 11:43:10" } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col3": { "$gte": "2022-11-15 11:43:10" } }],hint[{ "": "idx_col3" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
3
truncate table replace_table1;
explain replace into t5 select * from (select * from t1 where col3>="20221115114310" limit 2,1) dt where col2>"bcd" limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where
2	DERIVED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
replace into t5 select * from (select * from t1 where col3>="20221115114310" limit 2,1) dt where col2>"bcd" limit 3;
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:43:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
2	xyzz 	2022-11-15 11:45:10	xyzz 
truncate table t5;
explain replace into t5 select * from (select * from t1 where col3>="20221115114310" group by col1) dt where col2>"bcd" group by col2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
2	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
replace into t5 select * from (select * from t1 where col3>="20221115114310" group by col1) dt where col2>"bcd" group by col2;
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:43:10" } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into t5 select * from (select * from t1 where col3>="20221115114310" order by col1 limit 2,1) dt where col2>"bcd" order by col3 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using filesort
2	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
replace into t5 select * from (select * from t1 where col3>="20221115114310" order by col1 limit 2,1) dt where col2>"bcd" order by col3 limit 3;
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:43:10" } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "" }], limit[1], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into t5 select * from (select * from t1 where col3>="20221115114310" group by col1 limit 2,1) dt where col2>"bcd" group by col2 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
2	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
replace into t5 select * from (select * from t1 where col3>="20221115114310" group by col1 limit 2,1) dt where col2>"bcd" group by col2 limit 3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:43:10" } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into t5 select * from (select * from t1 where col3>="20221115114310" group by col1 order by col1) dt where col2>"defg" group by col2 order by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
2	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into t5 select * from (select * from t1 where col3>="20221115114310" group by col1 order by col1) dt where col2>"defg" group by col2 order by col3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:43:10" } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
select * from t5;
col1	col2	col3	col4
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into t5 select * from (select * from t1 where col3>="20221115114310" group by col1 order by col1 limit 2,1) dt where col2>"bcd" group by col2 order by col3 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
2	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into t5 select * from (select * from t1 where col3>="20221115114310" group by col1 order by col1 limit 2,1) dt where col2>"bcd" group by col2 order by col3 limit 3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:43:10" } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into t5 select * from (select * from t1 where col2>"def" order by col4 desc limit 5) dt where col1>=1 limit 2,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where
2	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
replace into t5 select * from (select * from t1 where col2>"def" order by col4 desc limit 5) dt where col1>=1 limit 2,3;
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "def" } }], selector[{}], order_by[{ "col4": -1 }], hint[{ "": "" }], limit[5], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
truncate table t5;
explain replace into t5 select * from (select * from t1 where col1>1 group by col4 desc limit 4) dt where col4>"aef" order by col4 desc limit 2,2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using filesort
2	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
replace into t5 select * from (select * from t1 where col1>1 group by col4 desc limit 4) dt where col4>"aef" order by col4 desc limit 2,2;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gt": 1 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 4 }]
select * from t5;
col1	col2	col3	col4
4	abcde	2022-11-15 11:40:20	efg
7	def	2022-11-15 11:40:20	def
truncate table t5;
explain replace into replace_table1 select count(1) from (select * from t1 where col3>="20221115114310" group by col1 order by col1 limit 2,1) dt where col2>"bcd" group by col2 order by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
2	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table1 select count(1) from (select * from t1 where col3>="20221115114310" group by col1 order by col1 limit 2,1) dt where col2>"bcd" group by col2 order by col3;
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:43:10" } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 2 }], limit[{ "$limit": 1 }]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain  replace into replace_table1 select count(1) from (select col2 from t1_partition where col3>="20221115114310" group by col1 order by col1 limit 1) dt where col2>"bcd" group by col2 order by col2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
2	DERIVED	t1_partition	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table1 select count(1) from (select col2 from t1_partition where col3>="20221115114310" group by col1 order by col1 limit 1) dt where col2>"bcd" group by col2 order by col2;
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gte": "2022-11-15 11:43:10" } } }], group[{ "$group": { "col1": { "$first": "$col1" }, "_id": { "col1": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain replace into t5 select * from (select * from t1 where col3>="20221115114310" order by col1) dt where col2>"bcd" order by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	range	idx_col2,idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
replace into t5 select * from (select * from t1 where col3>="20221115114310" order by col1) dt where col2>"bcd" order by col3;
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "col2": { "$gt": "bcd" } }, { "col3": { "$gte": "2022-11-15 11:43:10" } } ] }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
1	defg 	2022-11-15 11:45:10	defg
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into replace_table1 select count(*) from (select count(*) from t1 where col3>="20221115114010" group by col1) dt limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	
2	DERIVED	t1	ALL	idx_col3	NULL	NULL	NULL	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table1 select count(*) from (select count(*) from t1 where col3>="20221115114010" group by col1) dt limit 1;
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:40:10" } }], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
9
truncate table replace_table1;
explain replace into replace_table1 select count(*) from (select count(*) from t1 where col3>="20221115114010" group by col1 limit 8) dt limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	
2	DERIVED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table1 select count(*) from (select count(*) from t1 where col3>="20221115114010" group by col1 limit 8) dt limit 1;
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:40:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
8
truncate table replace_table1;
explain replace into replace_table1 select count(*) from (select count(*) from t1 where col3>="20221115114010" group by col1 order by col1) dt limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	
2	DERIVED	t1	ALL	idx_col3	NULL	NULL	NULL	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table1 select count(*) from (select count(*) from t1 where col3>="20221115114010" group by col1 order by col1) dt limit 1;
[Note] SequoiaDB: Query message: condition[{}], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.replace_table1]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:40:10" } }], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
9
truncate table replace_table1;
explain replace into replace_table1 select count(*) from (select count(*) from t1 where col3>="20221115114010" group by col1 order by col1 limit 8) dt limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	
2	DERIVED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table1 select count(*) from (select count(*) from t1 where col3>="20221115114010" group by col1 order by col1 limit 8) dt limit 1;
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gte": "2022-11-15 11:40:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
8
truncate table replace_table1;
explain  replace into replace_table1 select count(*) from (select count(*) from t1 where col3>="20221115114010" limit 8) dt limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	
2	DERIVED	t1	index	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using index
replace into replace_table1 select count(*) from (select count(*) from t1 where col3>="20221115114010" limit 8) dt limit 1;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col3": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col3": { "$gte": "2022-11-15 11:40:10" } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col3": { "$gte": "2022-11-15 11:40:10" } }],hint[{ "": "idx_col3" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain  replace into replace_table1 select count(1) from (select count(1) from t1 where col3>="20221115114310" order by col1) dt;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	
2	DERIVED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
replace into replace_table1 select count(1) from (select count(1) from t1 where col3>="20221115114310" order by col1) dt;
[Note] SequoiaDB: Count message: condition[{ "col3": { "$gte": "2022-11-15 11:43:10" } }],hint[{ "": "idx_col3" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain  replace into replace_table1 select count(1) from (select count(1) from t1 where col3>="20221115114310" order by col1 limit 2,1) dt;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	
2	DERIVED	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
replace into replace_table1 select count(1) from (select count(1) from t1 where col3>="20221115114310" order by col1 limit 2,1) dt;
[Note] SequoiaDB: Count message: condition[{ "col3": { "$gte": "2022-11-15 11:43:10" } }],hint[{ "": "idx_col3" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
0
truncate table replace_table1;
explain replace into replace_table1 select count(1) from v4 where col3<"20221115114310";
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where
3	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
replace into replace_table1 select count(1) from v4 where col3<"20221115114310";
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
3
truncate table replace_table1;
explain replace into t5 select * from v5 where col1>=1  limit 2,4;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where
3	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into t5 select * from v5 where col1>=1 limit 2,4;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gt": 2 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 6 }]
select * from t5;
col1	col2	col3	col4
3	xyz	2022-11-15 11:45:10	xyz 
4	abcde	2022-11-15 11:40:20	efg
truncate table t5;
explain replace into replace_table2 select * from v6 where col2<="dd" group by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
3	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table2 select * from v6 where col2<="dd" group by col3;
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gt": 2 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gt": 2 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table2;
col1	col2	col3	col4	col5
truncate table replace_table2;
explain replace into t5 select * from v5 where col1>=1 order by col1 limit 2,4;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using filesort
3	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into t5 select * from v5 where col1>=1 order by col1 limit 2,4;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gt": 2 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 6 }]
select * from t5;
col1	col2	col3	col4
5	abcdef	2022-11-15 11:40:15	abcdef
7	def	2022-11-15 11:40:20	def
truncate table t5;
explain replace into replace_table2 select * from v6 where col2<="dd" group by col3 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
3	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table2 select * from v6 where col2<="dd" group by col3 limit 1;
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gt": 2 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gt": 2 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table2;
col1	col2	col3	col4	col5
truncate table replace_table2;
explain replace into replace_table2 select * from v6 where col2<="dd" group by col3 order by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
3	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table2 select * from v6 where col2<="dd" group by col3 order by col3;
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gt": 2 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gt": 2 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table2;
col1	col2	col3	col4	col5
truncate table replace_table2;
explain replace into replace_table2 select * from v6 where col2<="dd" group by col3 order by col3 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
3	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table2 select * from v6 where col2<="dd" group by col3 order by col3 limit 1;
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gt": 2 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gt": 2 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table2;
col1	col2	col3	col4	col5
truncate table replace_table2;
explain replace into t5 select * from v5 where col1>=1 order by col1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using filesort
3	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into t5 select * from v5 where col1>=1 order by col1;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gt": 2 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 6 }]
select * from t5;
col1	col2	col3	col4
3	xyz	2022-11-15 11:45:10	xyz 
4	abcde	2022-11-15 11:40:20	efg
5	abcdef	2022-11-15 11:40:15	abcdef
7	def	2022-11-15 11:40:20	def
truncate table t5;
explain replace into replace_table1 select count(1) from v6 where col2<="dd" group by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
3	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table1 select count(1) from v6 where col2<="dd" group by col3;
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gt": 2 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gt": 2 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
truncate table replace_table1;
explain replace into replace_table1 select count(1) from v6 where col2<="dd" group by col3 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
3	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table1 select count(1) from v6 where col2<="dd" group by col3 limit 1;
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gt": 2 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gt": 2 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
truncate table replace_table1;
explain replace into replace_table1 select count(1) from v6 where col2<="dd" group by col3 order by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
3	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table1 select count(1) from v6 where col2<="dd" group by col3 order by col3;
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gt": 2 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gt": 2 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
truncate table replace_table1;
explain replace into replace_table1 select count(1) from v6 where col2<="dd" group by col3 order by col3 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
3	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table1 select count(1) from v6 where col2<="dd" group by col3 order by col3 limit 1;
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$gt": 2 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$gt": 2 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
truncate table replace_table1;
explain  replace into replace_table1 select count(1) from v5 where col1>=1  limit 2,4;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where
3	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table1 select count(1) from v5 where col1>=1 limit 2,4;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gt": 2 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 6 }]
select * from replace_table1;
col1
truncate table replace_table1;
explain  replace into replace_table1 select count(1) from v5 where col1>=1 order by col1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where
3	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table1 select count(1) from v5 where col1>=1 order by col1;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gt": 2 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 6 }]
select * from replace_table1;
col1
4
truncate table replace_table1;
explain  replace into replace_table1 select count(1) from v5 where col1>=1 order by col1 limit 2,4;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	Using where
3	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
replace into replace_table1 select count(1) from v5 where col1>=1 order by col1 limit 2,4;
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$gt": 2 } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 6 }]
select * from replace_table1;
col1
truncate table replace_table1;
explain replace into replace_table1 select * from (select count(*) from v1 where col3>="20221115114310") dt;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table1 select * from (select count(*) from v1 where col3>="20221115114310") dt;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain replace into t5 select * from (select * from v1 where col3>="20221115114310" limit 2,1) dt where col2>"bcd" limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into t5 select * from (select * from v1 where col3>="20221115114310" limit 2,1) dt where col2>"bcd" limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
truncate table t5;
explain replace into t5 select * from (select * from v1 where col3>"20221115114310" group by col1) dt where col2>"defg" group by col2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into t5 select * from (select * from v1 where col3>"20221115114310" group by col1) dt where col2>"defg" group by col2;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into t5 select * from (select * from v1 where col3>="20221115114310" order by col1 limit 2,1) dt where col2>"defg" order by col3 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using filesort
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into t5 select * from (select * from v1 where col3>="20221115114310" order by col1 limit 2,1) dt where col2>"defg" order by col3 limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
truncate table t5;
explain replace into t5 select * from (select * from v1 where col3>="20221115114310" group by col1 limit 2,1) dt where col2>"defg" group by col2 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into t5 select * from (select * from v1 where col3>="20221115114310" group by col1 limit 2,1) dt where col2>"defg" group by col2 limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
truncate table t5;
explain replace into t5 select * from (select * from v1 where col3>="20221115114310" group by col1 order by col1) dt where col2>"defg" group by col2 order by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into t5 select * from (select * from v1 where col3>="20221115114310" group by col1 order by col1) dt where col2>"defg" group by col2 order by col3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into t5 select * from (select * from v1 where col3>="20221115114310" group by col1 order by col1 limit 2,1) dt where col2>"defg" group by col2 order by col3 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into t5 select * from (select * from v1 where col3>="20221115114310" group by col1 order by col1 limit 2,1) dt where col2>"defg" group by col2 order by col3 limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
truncate table t5;
explain replace into t5 select * from (select * from v1 where col2>"def" order by col4 desc limit 5) dt where col1>=1 limit 2,3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into t5 select * from (select * from v1 where col2>"def" order by col4 desc limit 5) dt where col1>=1 limit 2,3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
truncate table t5;
explain replace into t5 select * from (select * from v1 where col1>1 group by col4 desc limit 4) dt where col4>"aef" order by col4 desc limit 2,2;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using filesort
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into t5 select * from (select * from v1 where col1>1 group by col4 desc limit 4) dt where col4>"aef" order by col4 desc limit 2,2;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
6	def	2022-11-15 11:42:10	def
truncate table t5;
explain replace into replace_table1 select count(1) from (select * from v1 where col3>="20221115114310" group by col1 order by col1 limit 2,1) dt where col2>"bcd" group by col2 order by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table1 select count(1) from (select * from v1 where col3>="20221115114310" group by col1 order by col1 limit 2,1) dt where col2>"bcd" group by col2 order by col3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
truncate table replace_table1;
explain replace into t5 select * from (select * from v1 where col3>"20221115114310" order by col1) dt where col2>"defg" order by col3 desc;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into t5 select * from (select * from v1 where col3>"20221115114310" order by col1) dt where col2>"defg" order by col3 desc;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from t5;
col1	col2	col3	col4
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into replace_table1 select count(*) from (select count(*) from v1 where col3>="20221115114010" group by col3) dt limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table1 select count(*) from (select count(*) from v1 where col3>="20221115114010" group by col3) dt limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
4
truncate table replace_table1;
explain replace into replace_table1 select count(*) from (select count(*) from v1 where col3>="20221115114010" group by col1 limit 8) dt limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table1 select count(*) from (select count(*) from v1 where col3>="20221115114010" group by col1 limit 8) dt limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
5
truncate table replace_table1;
explain replace into replace_table1 select count(*) from (select count(*) from v1 where col3>="20221115114010" order by col1 limit 8) dt limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table1 select count(*) from (select count(*) from v1 where col3>="20221115114010" order by col1 limit 8) dt limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain replace into replace_table1 select count(*) from (select count(*) from v1 where col3>="20221115114010" group by col1 order by col1 limit 8) dt limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table1 select count(*) from (select count(*) from v1 where col3>="20221115114010" group by col1 order by col1 limit 8) dt limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
5
truncate table replace_table1;
explain  replace into replace_table1 select count(*) from (select * from v1 where col3>="20221115114310" limit 2,1) dt where col2>"bcd" limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table1 select count(*) from (select * from v1 where col3>="20221115114310" limit 2,1) dt where col2>"bcd" limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
0
truncate table replace_table1;
explain  replace into replace_table1 select count(*) from (select * from v1 where col3>="20221115114310" order by col1) dt where col2>"defg" order by col3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table1 select count(*) from (select * from v1 where col3>="20221115114310" order by col1) dt where col2>"defg" order by col3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
truncate table replace_table1;
explain  replace into replace_table1 select count(*) from (select * from v1 where col3>="20221115114310" order by col1 limit 2,1) dt where col2>"defg" order by col3 limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
replace into replace_table1 select count(*) from (select * from v1 where col3>="20221115114310" order by col1 limit 2,1) dt where col2>"defg" order by col3 limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gt": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[10], offset[1], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
0
truncate table replace_table1;
explain replace into replace_table1 select * from (select count(*) from v7) dt;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
4	DERIVED	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
5	UNION	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union4,5>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1 select * from (select count(*) from v7) dt;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 2 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col4": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col4": { "$lt": "zzz" } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col4": { "$lt": "zzz" } }],hint[{}] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
2
truncate table replace_table1;
explain replace into replace_table1 select count(*) from t1,t2, (select count(*) from v7) dt;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	index	NULL	idx_col1	5	NULL	#	Using index
1	PRIMARY	t2	index	NULL	idx_col1	5	NULL	#	Using index; Using join buffer (flat, BNL join)
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using join buffer (incremental, BNL join)
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
4	DERIVED	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
5	UNION	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union4,5>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1 select count(*) from t1,t2, (select count(*) from v7) dt;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{}], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{}], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 2 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col4": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col4": { "$lt": "zzz" } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col4": { "$lt": "zzz" } }],hint[{}] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
196
truncate table replace_table1;
explain replace into replace_table3 select count(*),(select count(1) from t1, t2 where t1.col1>=4 and t2.col1 <=6 ) from t2 where t2.col1 < (select count(*) from v7 ) ;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
3	SUBQUERY	<derived5>	ALL	NULL	NULL	NULL	NULL	#	
5	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
5	DERIVED	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
6	UNION	t1	ALL	NULL	NULL	NULL	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union5,6>	ALL	NULL	NULL	NULL	NULL	#	
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
replace into replace_table3 select count(*),(select count(1) from t1, t2 where t1.col1>=4 and t2.col1 <=6 ) from t2 where t2.col1 < (select count(*) from v7 ) ;
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 2 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col4": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col4": { "$lt": "zzz" } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col4": { "$lt": "zzz" } }],hint[{}] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 2 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 2 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 4 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table3;
col1	col2
3	40
truncate table replace_table3;
explain replace into t5 select * from (select * from v8 where col2>"defg" group by col1 order by col1 limit 7) dt where col3>="20221115112010" group by col2 order by col3 limit 6;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
4	DERIVED	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
5	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union4,5>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5 select * from (select * from v8 where col2>"defg" group by col1 order by col1 limit 7) dt where col3>="20221115112010" group by col2 order by col3 limit 6;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col4": { "$lt": "zzz" } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
select * from t5;
col1	col2	col3	col4
truncate table t5;
explain replace into replace_table1 select t1.col1 from t1,t2, (select * from v8 where col2>="def" group by col1 order by col1 limit 7) dt where t1.col3>="20221115112010" group by t1.col1 order by t1.col1 limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition; Using temporary; Using filesort
1	PRIMARY	<derived2>	ALL	NULL	NULL	NULL	NULL	#	Using join buffer (flat, BNL join)
1	PRIMARY	t2	index	NULL	idx_col1	5	NULL	#	Using index; Using join buffer (incremental, BNL join)
2	DERIVED	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
4	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
4	DERIVED	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
5	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union4,5>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1 select t1.col1 from t1,t2, (select * from v8 where col2>="def" group by col1 order by col1 limit 7) dt where t1.col3>="20221115112010" group by t1.col1 order by t1.col1 limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col4": { "$lt": "zzz" } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{}], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table1;
col1
NULL
truncate table replace_table1;
explain replace into replace_table4 select *, (select t1.col4 from t1, t2 where t1.col1>=2 and t2.col1 <=6 group by t1.col3 order by t1.col3  limit 1) from t2 where t2.col1 < (select col1 from v8 where col1>=5 group by col4 order by col1 limit 0,1) group by col3 order by col2 desc limit 3;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
3	SUBQUERY	<derived5>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
5	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
5	DERIVED	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
6	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union5,6>	ALL	NULL	NULL	NULL	NULL	#	
2	SUBQUERY	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
2	SUBQUERY	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
replace into replace_table4 select *, (select t1.col4 from t1, t2 where t1.col1>=2 and t2.col1 <=6 group by t1.col3 order by t1.col3  limit 1) from t2 where t2.col1 < (select col1 from v8 where col1>=5 group by col4 order by col1 limit 0,1) group by col3 order by col2 desc limit 3;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col4": { "$lt": "zzz" } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$lt": 5 } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col1": { "$first": "$col1" }, "col2": { "$first": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
select * from replace_table4;
col1	col2	col3	col4	col5
1	defg 	2022-11-15 11:45:10	defg	def
2	def	NULL	def	def
4	abcde	2022-11-15 11:40:20	efg	def
truncate table replace_table4;
explain  replace into replace_table5 select t2_partition.col1, (select t1_partition.col2 from t1_partition, t2_partition where t1_partition.col1>=2 and t2_partition.col1 <=6 group by t1_partition.col2 order by t1_partition.col2  limit 1) from t2_partition where t2_partition.col1 < (select col1 from v8 where col1>=5 group by col2 order by col2 limit 0,1) group by t2_partition.col2 order by t2_partition.col2 desc limit 1;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t2_partition	index	idx_col1,idx_col12	idx_col12	18	NULL	#	Using where with pushed condition; Using index; Using pushed GROUP BY; Using pushed ORDER BY
3	SUBQUERY	<derived5>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
5	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using temporary; Using filesort
5	DERIVED	t2	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
6	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union5,6>	ALL	NULL	NULL	NULL	NULL	#	
2	SUBQUERY	t1_partition	range	idx_col1,idx_col12	idx_col12	5	NULL	#	Using where with pushed condition; Using index; Using temporary; Using filesort
2	SUBQUERY	t2_partition	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index; Using join buffer (flat, BNL join)
replace into replace_table5 select t2_partition.col1, (select t1_partition.col2 from t1_partition, t2_partition where t1_partition.col1>=2 and t2_partition.col1 <=6 group by t1_partition.col2 order by t1_partition.col2  limit 1) from t2_partition where t2_partition.col1 < (select col1 from v8 where col1>=5 group by col2 order by col2 limit 0,1) group by t2_partition.col2 order by t2_partition.col2 desc limit 1;
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 2 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col4": { "$lt": "zzz" } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 3 }]
[Note] SequoiaDB: Query message: match[{ "$match": { "col1": { "$lt": 5 } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" } } }], sort[{ "$sort": { "col2": -1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$gte": 2 } }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1_partition]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2_partition
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lte": 6 } }], selector[{ "_id": null, "col1": null }], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2_partition]
select * from replace_table5;
col1	col2
2	NULL
truncate table replace_table5;
explain replace into t5(select * from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union
(select * from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 0,1) order by col1 desc) dt where col1>0  group by col2 order by col2 limit 1);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	ALL	idx_col1,idx_col12	NULL	NULL	NULL	#	Using where with pushed condition
2	SUBQUERY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
3	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
5	SUBQUERY	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,3>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union
(select * from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 0,1) order by col1 desc) dt where col1>0  group by col2 order by col2 limit 1);
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 8 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "$and": [ { "col1": { "$gt": 0 } }, { "col2": { "$gt": "defg" } } ] } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
truncate table t5;
explain replace into t5(select * from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union
(select * from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" order by col4 limit 0,1) order by col1 desc) dt where col1>0  group by col2 order by col1 limit 1);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	ALL	idx_col1,idx_col12	NULL	NULL	NULL	#	Using where with pushed condition
2	SUBQUERY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
3	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
5	SUBQUERY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union1,3>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union
(select * from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" order by col4 limit 0,1) order by col1 desc) dt where col1>0  group by col2 order by col1 limit 1);
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col4": 1 }], hint[{ "": "" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 8 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "$and": [ { "col1": { "$gt": 0 } }, { "col2": { "$gt": "defg" } } ] } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col1": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
truncate table t5;
explain replace into t5(select * from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union
(select * from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" group by col4 limit 0,1) order by col1 desc) dt where col1>0  group by col2 order by col2 limit 1);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	ALL	idx_col1,idx_col12	NULL	NULL	NULL	#	Using where with pushed condition
2	SUBQUERY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
3	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
5	SUBQUERY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
NULL	UNION RESULT	<union1,3>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union
(select * from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" group by col4 limit 0,1) order by col1 desc) dt where col1>0  group by col2 order by col2 limit 1);
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gt": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 8 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "$and": [ { "col1": { "$gt": 0 } }, { "col2": { "$gt": "defg" } } ] } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
truncate table t5;
explain replace into t5(select * from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union
(select * from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 0,1) order by col1 desc) dt where col1>0  group by col2 order by col1);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	ALL	idx_col1,idx_col12	NULL	NULL	NULL	#	Using where with pushed condition
2	SUBQUERY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
3	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
5	SUBQUERY	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,3>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union
(select * from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 0,1) order by col1 desc) dt where col1>0  group by col2 order by col1);
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 8 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "$and": [ { "col1": { "$gt": 0 } }, { "col2": { "$gt": "defg" } } ] } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into t5(select * from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union 
(select * from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 0,1) order by col1 desc) dt where col1>0  group by col2);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	ALL	idx_col1,idx_col12	NULL	NULL	NULL	#	Using where with pushed condition
2	SUBQUERY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
3	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
5	SUBQUERY	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,3>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union 
(select * from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 0,1) order by col1 desc) dt where col1>0  group by col2);
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 8 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "$and": [ { "col1": { "$gt": 0 } }, { "col2": { "$gt": "defg" } } ] } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": -1 }]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	xyz	2022-11-15 11:45:10	xyz 
truncate table t5;
explain replace into t5(select * from t1 where col1<(select count(1) from (select * from  t2 where col1<5 union ALL (select * from t1 where col2<(select col4 from t1 where col4>"aa" group by col3 order by col3 limit 3,1)) )ct))
union
(select * from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 2,1) order by col1 desc) dt where col1>0  group by col2 order by col2 limit 1);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	ALL	idx_col1,idx_col12	NULL	NULL	NULL	#	Using where with pushed condition
2	SUBQUERY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	
3	DERIVED	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
4	UNION	t1	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition
5	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
NULL	UNION RESULT	<union3,4>	ALL	NULL	NULL	NULL	NULL	#	
6	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
8	SUBQUERY	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,6>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1<(select count(1) from (select * from  t2 where col1<5 union ALL (select * from t1 where col2<(select col4 from t1 where col4>"aa" group by col3 order by col3 limit 3,1)) )ct))
union
(select * from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 2,1) order by col1 desc) dt where col1>0  group by col2 order by col2 limit 1);
[Note] SequoiaDB: Query message: match[{ "$match": { "col4": { "$gt": "aa" } } }], group[{ "$group": { "col3": { "$first": "$col3" }, "_id": { "col3": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col3": 1 } }], skip[{ "$skip": 3 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 5 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$lt": "def" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 13 } }], selector[{}], order_by[{}], hint[{}], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "$and": [ { "col1": { "$gt": 0 } }, { "col2": { "$gt": "xyzz " } } ] } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
0	abcde	2022-11-15 11:40:20	NULL
1	defg 	2022-11-15 11:45:10	defg
2	def	NULL	def
2	xyzz 	2022-11-15 11:45:10	xyzz 
3	NULL	2022-11-15 11:40:15	abcdef
3	xyz	2022-11-15 11:45:10	xyz 
4	abcde	2022-11-15 11:40:20	efg
5	abcdef	2022-11-15 11:40:15	abcdef
6	def	2022-11-15 11:42:10	def
7	def	2022-11-15 11:40:20	def
truncate table t5;
explain replace into t5(select * from t1 where col1<(select count(1) from ((select * from  t1 where col1<5 limit 9)
union ALL 
(select * from t2 where col2>
(select col4 from t1 where col4<(select col2 from (select * from t2 where col2>(select col4 from t1 where col2>"aa" limit 2,1) order by col1 desc limit 10) bt where col2>"aaa" group by col2 order by col2 limit 1) group by col2 order by col2 limit 1) limit 8
) )ct) limit 4)
union
(select * from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 2,1) order by col1 desc) dt where col1>0  group by col2 order by col2 limit 1);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	ALL	idx_col1,idx_col12	NULL	NULL	NULL	#	Using where with pushed condition
2	SUBQUERY	<derived3>	ALL	NULL	NULL	NULL	NULL	#	
3	DERIVED	t1	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition
4	UNION	t2	ALL	idx_col2	NULL	NULL	NULL	#	Using where with pushed condition
5	SUBQUERY	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
6	SUBQUERY	<derived7>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
7	DERIVED	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
8	SUBQUERY	t1	range	idx_col2	idx_col2	13	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union3,4>	ALL	NULL	NULL	NULL	NULL	#	
9	UNION	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Using pushed ORDER BY; Storage engine handles access type
11	SUBQUERY	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,9>	ALL	NULL	NULL	NULL	NULL	#	
replace into t5(select * from t1 where col1<(select count(1) from ((select * from  t1 where col1<5 limit 9)
union ALL 
(select * from t2 where col2>
(select col4 from t1 where col4<(select col2 from (select * from t2 where col2>(select col4 from t1 where col2>"aa" limit 2,1) order by col1 desc limit 10) bt where col2>"aaa" group by col2 order by col2 limit 1) group by col2 order by col2 limit 1) limit 8
) )ct) limit 4)
union
(select * from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 2,1) order by col1 desc) dt where col1>0  group by col2 order by col2 limit 1);
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "aa" } }], selector[{}], order_by[{ "col2": 1 }], hint[{ "": "idx_col2" }], limit[1], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "efg" } }], selector[{}], order_by[{ "col1": -1 }], hint[{ "": "" }], limit[10], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col4": { "$lt": "xyz" } } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 5 } }], selector[{}], order_by[{ "col1": 1 }], hint[{ "": "idx_col1" }], limit[9], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "abcdef" } }], selector[{}], order_by[{}], hint[{}], limit[8], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[2], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col1": { "$lt": 14 } }], selector[{}], order_by[{}], hint[{}], limit[4], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: match[{ "$match": { "$and": [ { "col1": { "$gt": 0 } }, { "col2": { "$gt": "xyzz " } } ] } }], group[{ "$group": { "col2": { "$first": "$col2" }, "_id": { "col2": "$col2" }, "col1": { "$first": "$col1" }, "col3": { "$first": "$col3" }, "col4": { "$first": "$col4" } } }], sort[{ "$sort": { "col2": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
select * from t5;
col1	col2	col3	col4
0	abc	2022-11-15 11:40:10	abc
3	NULL	2022-11-15 11:40:15	abcdef
5	abcdef	2022-11-15 11:40:15	abcdef
7	def	2022-11-15 11:40:20	def
truncate table t5;
explain replace into replace_table1(select count(*) from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union
(select count(*)  from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" group by col4 limit 0,1) order by col1 desc) dt where col1>0  group by col2 order by col1 limit 1);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
3	UNION	t1	range	idx_col1,idx_col2,idx_col12	idx_col12	5	NULL	#	Using where with pushed condition; Using index; Using temporary; Using filesort
5	SUBQUERY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
NULL	UNION RESULT	<union1,3>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*) from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union
(select count(*)  from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" group by col4 limit 0,1) order by col1 desc) dt where col1>0  group by col2 order by col1 limit 1);
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gt": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$gt": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 8 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 8 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "col1": { "$gt": 0 } }, { "col2": { "$gt": "defg" } } ] }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
11
truncate table replace_table1;
explain replace into replace_table1(select count(*)  from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union
(select count(*)  from (select * from t1 where col2>(select col4 from t2 where col3<"20221115114210" group by col4 limit 1) order by col1 desc) dt where col1>0  group by col2 limit 1);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
3	UNION	NULL	NULL	NULL	NULL	NULL	NULL	#	Impossible WHERE noticed after reading const tables
5	SUBQUERY	t2	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed GROUP BY; Storage engine handles access type
NULL	UNION RESULT	<union1,3>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*)  from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union
(select count(*)  from (select * from t1 where col2>(select col4 from t2 where col3<"20221115114210" group by col4 limit 1) order by col1 desc) dt where col1>0  group by col2 limit 1);
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$lt": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: match[{ "$match": { "col3": { "$lt": "2022-11-15 11:42:10" } } }], group[{ "$group": { "col4": { "$first": "$col4" }, "_id": { "col4": "$col4" }, "col3": { "$first": "$col3" } } }], sort[{ "$sort": { "col4": 1 } }], skip[{ "$skip": 0 }], limit[{ "$limit": 1 }]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 8 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 8 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
11
truncate table replace_table1;
explain replace into replace_table1(select count(*)  from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union
(select count(*)  from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 0,1) order by col1 desc) dt where col1>0  group by col2 order by col1);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
3	UNION	t1	range	idx_col1,idx_col2,idx_col12	idx_col12	5	NULL	#	Using where with pushed condition; Using index; Using temporary; Using filesort
5	SUBQUERY	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,3>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*)  from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union
(select count(*)  from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 0,1) order by col1 desc) dt where col1>0  group by col2 order by col1);
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 8 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 8 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "col1": { "$gt": 0 } }, { "col2": { "$gt": "defg" } } ] }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
11
truncate table replace_table1;
explain replace into replace_table1(select count(*)  from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union 
(select count(*)  from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 0,1) order by col1 desc) dt where col1>0  group by col2);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
3	UNION	t1	range	idx_col1,idx_col2,idx_col12	idx_col12	5	NULL	#	Using where with pushed condition; Using index; Using temporary; Using filesort
5	SUBQUERY	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,3>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*)  from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union 
(select count(*)  from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 0,1) order by col1 desc) dt where col1>0  group by col2);
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 8 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 8 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "col1": { "$gt": 0 } }, { "col2": { "$gt": "defg" } } ] }], selector[{}], order_by[{ "col1": 1, "col2": 1 }], hint[{ "": "idx_col12" }], limit[-1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
11
truncate table replace_table1;
explain replace into replace_table1(select count(*)  from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union 
(select count(*)  from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 0,1) order by col1 desc limit 9) dt where col1>0  group by col2);
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	PRIMARY	t1	index	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
2	SUBQUERY	t2	range	idx_col1,idx_col12	idx_col1	5	NULL	#	Using where with pushed condition; Using index
3	UNION	<derived4>	ALL	NULL	NULL	NULL	NULL	#	Using where; Using temporary; Using filesort
4	DERIVED	t1	NULL	NULL	NULL	NULL	NULL	#	Using where with pushed condition; Using pushed ORDER BY; Storage engine handles access type
5	SUBQUERY	t2	range	idx_col3	idx_col3	6	NULL	#	Using where with pushed condition
NULL	UNION RESULT	<union1,3>	ALL	NULL	NULL	NULL	NULL	#	
replace into replace_table1(select count(*)  from t1 where col1<(select count(1) from t2 where col1<5) limit 1) 
union 
(select count(*)  from (select * from t1 where col2>(select col4 from t2 where col3>"20221115114210" limit 0,1) order by col1 desc limit 9) dt where col1>0  group by col2);
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 5 } }, table: count_limit_sort_pushdown_sequoiadb_3.t2
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 5 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: Query message: condition[{ "col3": { "$gt": "2022-11-15 11:42:10" } }], selector[{}], order_by[{ "col3": 1 }], hint[{ "": "idx_col3" }], limit[1], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t2]
[Note] SequoiaDB: optimizer selector object: { "_id": null, "col1": null }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: optimizer count: 1, condition: { "col1": { "$lt": 8 } }, table: count_limit_sort_pushdown_sequoiadb_3.t1
[Note] SequoiaDB: Count message: condition[{ "col1": { "$lt": 8 } }],hint[{ "": "idx_col1" }] table[count_limit_sort_pushdown_sequoiadb_3.t1]
[Note] SequoiaDB: Query message: condition[{ "col2": { "$gt": "defg" } }], selector[{}], order_by[{ "col1": -1 }], hint[{ "": "" }], limit[9], offset[0], table[count_limit_sort_pushdown_sequoiadb_3.t1]
select * from replace_table1;
col1
1
11
truncate table replace_table1;
drop database if exists count_limit_sort_pushdown_sequoiadb_3;

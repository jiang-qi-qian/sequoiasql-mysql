drop database if exists multi_field_query_optimize_25620;
create database multi_field_query_optimize_25620;
drop database multi_field_query_optimize_25620;
create database multi_field_query_optimize_25620;
use multi_field_query_optimize_25620;
set session optimizer_switch='mrr=on,mrr_cost_based=off';
set session join_cache_level=8;
set session sequoiadb_debug_log=on;
create table t1(a int,b int);
create table t2(a int,b int,key union_ab3_2(a,b));
insert into t1 values(1,1),(2,2),(3,3);
insert into t2 values(1,1),(2,2),(3,3),(1,2),(2,3);
explain select * from t1,t2 where t1.a = t2.a and t1.b = t2.b;
id	select_type	table	type	possible_keys	key	key_len	ref	rows	Extra
1	SIMPLE	t1	ALL	NULL	NULL	NULL	NULL	3	Using where with pushed condition
1	SIMPLE	t2	ref	union_ab3_2	union_ab3_2	10	multi_field_query_optimize_25620.t1.a,multi_field_query_optimize_25620.t1.b	2	Using index; Using join buffer (flat, BKAH join); Using MRR
select * from t1,t2 where t1.a = t2.a and t1.b = t2.b;
a	b	a	b
1	1	1	1
2	2	2	2
3	3	3	3
[Note] SequoiaDB: Query message: condition[{}], selector[{ "a": null, "b": null }], order_by[{ "a": 1, "b": 1 }], hint[{ "$Range": { "IsAllEqual": true, "PrefixNum": 2, "IndexValue": [ { "1": 1, "2": 1 }, { "1": 2, "2": 2 }, { "1": 3, "2": 3 } ] }, "": "union_ab3_2" }], limit[-1], offset[0], table[multi_field_query_optimize_25620.t2]
drop table t1,t2;
set session optimizer_switch=default;
set session join_cache_level=default;
set session sequoiadb_debug_log=off;
drop database multi_field_query_optimize_25620;

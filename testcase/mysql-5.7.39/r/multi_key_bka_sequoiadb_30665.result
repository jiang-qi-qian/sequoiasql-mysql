drop database if exists multi_key_bka_sequoiadb_30665;
create database multi_key_bka_sequoiadb_30665;
drop database multi_key_bka_sequoiadb_30665;
create database multi_key_bka_sequoiadb_30665;
use multi_key_bka_sequoiadb_30665;
CREATE TABLE `t1` (
`col_varchar_16` varchar(16) COLLATE utf8mb4_bin DEFAULT NULL,
`col_double` double DEFAULT NULL,
`col_datetime` datetime DEFAULT NULL,
`col_int` int(11) DEFAULT NULL,
KEY `i1` (`col_int`,`col_double`,`col_varchar_16`),
KEY `i2` (`col_double`,`col_varchar_16`,`col_datetime`),
KEY `i3` (`col_varchar_16`,`col_datetime`,`col_int`),
KEY `i4` (`col_datetime`,`col_int`,`col_double`)
) ENGINE=SequoiaDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;
CREATE TABLE `t2` (
`col_int` int(11) DEFAULT NULL,
`col_datetime` datetime DEFAULT NULL,
`col_double` double DEFAULT NULL,
`col_varchar_16` varchar(16) COLLATE utf8mb4_bin DEFAULT NULL,
KEY `i1` (`col_int`,`col_double`,`col_varchar_16`),
KEY `i2` (`col_double`,`col_varchar_16`,`col_datetime`),
KEY `i3` (`col_varchar_16`,`col_datetime`,`col_int`),
KEY `i4` (`col_datetime`,`col_int`,`col_double`)
) ENGINE=SequoiaDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin;
SET SESSION SQL_MODE='NO_AUTO_VALUE_ON_ZERO';
INSERT INTO `t1` VALUES ('p',NULL,'2009-02-26 02:35:48',0),('z',5,'0000-00-00 00:00:00',7),('f',NULL,NULL,0),(NULL,8,'2008-10-03 22:09:26',3),('j',6,'2003-07-12 05:49:07',8),('m',5,NULL,NULL),('u',2,'0000-00-00 00:00:00',8),('s',0,'0000-00-00 00:00:00',1),('v',NULL,NULL,1),('',NULL,'2004-04-09 09:38:03',0),('',0,'2000-08-01 14:27:28',NULL),('c',NULL,'0000-00-00 00:00:00',0),('y',2,'2002-09-27 01:46:09',0),('b',9,'0000-00-00 00:00:00',NULL),('q',0,'0000-00-00 00:00:00',NULL),('',0,'2001-05-06 11:40:21',0),('',1,'2001-10-23 00:35:27',8),(null,8,'0000-00-00 00:00:00',0),(null,2,'0000-00-00 00:00:00',0),(null,8,'0000-00-00 00:00:00',9);
INSERT INTO `t2` VALUES (6,'0000-00-00 00:00:00',2,NULL),(NULL,'2007-10-06 06:13:04',NULL,'t'),(9,NULL,3,''),(1,'2006-10-21 03:14:45',0,'j'),(NULL,'0000-00-00 00:00:00',1,NULL),(5,'0000-00-00 00:00:00',NULL,'r'),(0,NULL,0,'u'),(0,NULL,NULL,NULL),(0,'2003-07-08 10:33:13',9,'c'),(NULL,'0000-00-00 00:00:00',0,NULL),(3,NULL,NULL,NULL),(NULL,NULL,6,'e'),(6,'2006-05-06 16:02:26',4,''),(3,NULL,3,'f'),(2,'2008-09-04 10:37:30',4,'k'),(2,'2008-03-03 11:32:06',NULL,''),(2,'2007-04-12 12:23:44',2,'y'),(5,'2004-07-10 23:23:12',1,'d'),(0,'2006-08-05 22:43:18',NULL,'m'),(8,NULL,NULL,''),(0,'2001-08-01 08:50:52',6,NULL),(5,'2007-01-15 15:46:48',8,''),(0,'0000-00-00 00:00:00',NULL,''),(0,'2002-06-25 22:07:29',0,''),(9,'2004-09-14 21:35:41',2,'p'),(6,'2007-01-03 04:28:16',1,'h'),(0,null,null,null),(9,'0000-00-00 00:00:00',null,null),(null,null,8,null),(0,'0000-00-00 00:00:00',8,null);
set session sequoiadb_debug_log=on;
set session optimizer_switch='mrr=on,mrr_cost_based=off,batched_key_access=on';
set session sequoiadb_enable_null_reject_for_bka_join=off;
set session skip_ref_null_if_null_reject=off;
SELECT * FROM t1 INNER JOIN t2 ON t1.col_datetime = t2.col_datetime AND t1.col_double = t2.col_double AND t1.col_datetime = t2.col_datetime AND t1.col_int = t2.col_int WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
NULL	8	0000-00-00 00:00:00	0	NULL	NULL	8	NULL
NULL	8	0000-00-00 00:00:00	0	0	0000-00-00 00:00:00	8	NULL
explain SELECT * FROM t1 INNER JOIN t2 ON t1.col_datetime = t2.col_datetime AND t1.col_double = t2.col_double AND t1.col_datetime = t2.col_datetime AND t1.col_int = t2.col_int WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	i1,i2,i3,i4	i3	67	const	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_varchar_16`) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_datetime` is not null) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_int` is not null))
1	SIMPLE	t2	NULL	ref	i1,i2,i3,i4	i3	78	const,multi_key_bka_sequoiadb_30665.t1.col_datetime,multi_key_bka_sequoiadb_30665.t1.col_int	2	10.00	Using where with pushed condition isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16`); Using join buffer (Batched Key Access)
SELECT * FROM t1 INNER JOIN t2 ON t1.col_int = t2.col_int AND t1.col_datetime = t2.col_datetime WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL AND `t2`.`col_double` IS NULL AND `t2`.`col_double` IS NULL;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
NULL	2	0000-00-00 00:00:00	0	0	NULL	NULL	NULL
NULL	8	0000-00-00 00:00:00	0	0	NULL	NULL	NULL
NULL	2	0000-00-00 00:00:00	0	0	NULL	NULL	NULL
NULL	8	0000-00-00 00:00:00	0	0	NULL	NULL	NULL
NULL	8	0000-00-00 00:00:00	9	9	0000-00-00 00:00:00	NULL	NULL
explain SELECT * FROM t1 INNER JOIN t2 ON t1.col_int = t2.col_int AND t1.col_datetime = t2.col_datetime WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL AND `t2`.`col_double` IS NULL AND `t2`.`col_double` IS NULL;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	i1,i3,i4	i3	67	const	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_varchar_16`) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_datetime` is not null))
1	SIMPLE	t2	NULL	ref	i1,i2,i3,i4	i2	82	const,const,multi_key_bka_sequoiadb_30665.t1.col_datetime	2	10.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`)); Using join buffer (Batched Key Access)
select * from t1 straight_join t2 on t1.col_int=t2.col_int and t1.col_double=t2.col_double where t1.col_int is null and t1.col_double is null;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
explain select * from t1 straight_join t2 on t1.col_int=t2.col_int and t1.col_double=t2.col_double where t1.col_int is null and t1.col_double is null;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	i1,i2	i1	14	const,const	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_int`) and isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_double`))
1	SIMPLE	t2	NULL	ref	i1,i2	i1	14	const,const	2	100.00	Using index condition; Using join buffer (Batched Key Access)
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$and": [ { "col_int": { "$isnull": 1 } }, { "col_double": { "$isnull": 1 } } ] }, { "col_int": { "$isnull": 1 }, "col_double": { "$isnull": 1 } } ] }], selector[{}], order_by[{ "col_int": 1, "col_double": 1, "col_varchar_16": 1 }], hint[{ "": "i1" }], limit[-1], offset[0], table[multi_key_bka_sequoiadb_30665.t1]
select * from t2 straight_join t1 on t1.col_int=t2.col_int and t1.col_double=t2.col_double and t1.col_varchar_16=t2.col_varchar_16 where t2.col_int is null and t2.col_double is null;
col_int	col_datetime	col_double	col_varchar_16	col_varchar_16	col_double	col_datetime	col_int
explain select * from t2 straight_join t1 on t1.col_int=t2.col_int and t1.col_double=t2.col_double and t1.col_varchar_16=t2.col_varchar_16 where t2.col_int is null and t2.col_double is null;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	ref	i1,i2,i3	i1	14	const,const	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_int`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`) and (`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16` is not null))
1	SIMPLE	t1	NULL	ref	i1,i2,i3	i1	81	const,const,multi_key_bka_sequoiadb_30665.t2.col_varchar_16	2	100.00	Using index condition; Using join buffer (Batched Key Access)
[Note] SequoiaDB: Query message: condition[{ "col_int": { "$isnull": 1 }, "col_double": { "$isnull": 1 }, "col_varchar_16": { "$et": "t" } }], selector[{}], order_by[{ "col_int": 1, "col_double": 1, "col_varchar_16": 1 }], hint[{ "": "i1" }], limit[-1], offset[0], table[multi_key_bka_sequoiadb_30665.t1]
set session sequoiadb_enable_null_reject_for_bka_join=on;
set session skip_ref_null_if_null_reject=off;
SELECT * FROM t1 INNER JOIN t2 ON t1.col_datetime = t2.col_datetime AND t1.col_double = t2.col_double AND t1.col_datetime = t2.col_datetime AND t1.col_int = t2.col_int WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
NULL	8	0000-00-00 00:00:00	0	0	0000-00-00 00:00:00	8	NULL
explain SELECT * FROM t1 INNER JOIN t2 ON t1.col_datetime = t2.col_datetime AND t1.col_double = t2.col_double AND t1.col_datetime = t2.col_datetime AND t1.col_int = t2.col_int WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	i1,i2,i3,i4	i3	67	const	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_varchar_16`) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_datetime` is not null) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_int` is not null))
1	SIMPLE	t2	NULL	ref	i1,i2,i3,i4	i3	78	const,multi_key_bka_sequoiadb_30665.t1.col_datetime,multi_key_bka_sequoiadb_30665.t1.col_int	2	10.00	Using where with pushed condition isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16`); Using join buffer (Batched Key Access)
SELECT * FROM t1 INNER JOIN t2 ON t1.col_int = t2.col_int AND t1.col_datetime = t2.col_datetime WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL AND `t2`.`col_double` IS NULL AND `t2`.`col_double` IS NULL;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
NULL	8	0000-00-00 00:00:00	9	9	0000-00-00 00:00:00	NULL	NULL
explain SELECT * FROM t1 INNER JOIN t2 ON t1.col_int = t2.col_int AND t1.col_datetime = t2.col_datetime WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL AND `t2`.`col_double` IS NULL AND `t2`.`col_double` IS NULL;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	i1,i3,i4	i3	67	const	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_varchar_16`) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_datetime` is not null))
1	SIMPLE	t2	NULL	ref	i1,i2,i3,i4	i2	82	const,const,multi_key_bka_sequoiadb_30665.t1.col_datetime	2	10.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`)); Using join buffer (Batched Key Access)
select * from t1 straight_join t2 on t1.col_int=t2.col_int and t1.col_double=t2.col_double where t1.col_int is null and t1.col_double is null;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
explain select * from t1 straight_join t2 on t1.col_int=t2.col_int and t1.col_double=t2.col_double where t1.col_int is null and t1.col_double is null;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	i1,i2	i1	14	const,const	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_int`) and isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_double`))
1	SIMPLE	t2	NULL	ref	i1,i2	i1	14	const,const	2	100.00	Using index condition; Using join buffer (Batched Key Access)
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$and": [ { "col_int": { "$isnull": 1 } }, { "col_double": { "$isnull": 1 } } ] }, { "col_int": { "$isnull": 1 }, "col_double": { "$isnull": 1 } } ] }], selector[{}], order_by[{ "col_int": 1, "col_double": 1, "col_varchar_16": 1 }], hint[{ "": "i1" }], limit[-1], offset[0], table[multi_key_bka_sequoiadb_30665.t1]
select * from t2 straight_join t1 on t1.col_int=t2.col_int and t1.col_double=t2.col_double and t1.col_varchar_16=t2.col_varchar_16 where t2.col_int is null and t2.col_double is null;
col_int	col_datetime	col_double	col_varchar_16	col_varchar_16	col_double	col_datetime	col_int
explain select * from t2 straight_join t1 on t1.col_int=t2.col_int and t1.col_double=t2.col_double and t1.col_varchar_16=t2.col_varchar_16 where t2.col_int is null and t2.col_double is null;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	ref	i1,i2,i3	i1	14	const,const	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_int`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`) and (`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16` is not null))
1	SIMPLE	t1	NULL	ref	i1,i2,i3	i1	81	const,const,multi_key_bka_sequoiadb_30665.t2.col_varchar_16	2	100.00	Using index condition; Using join buffer (Batched Key Access)
[Note] SequoiaDB: Query message: condition[{ "col_int": { "$isnull": 1 }, "col_double": { "$isnull": 1 }, "col_varchar_16": { "$et": "t" } }], selector[{}], order_by[{ "col_int": 1, "col_double": 1, "col_varchar_16": 1 }], hint[{ "": "i1" }], limit[-1], offset[0], table[multi_key_bka_sequoiadb_30665.t1]
set session sequoiadb_enable_null_reject_for_bka_join=off;
set session skip_ref_null_if_null_reject=on;
SELECT * FROM t1 INNER JOIN t2 ON t1.col_datetime = t2.col_datetime AND t1.col_double = t2.col_double AND t1.col_datetime = t2.col_datetime AND t1.col_int = t2.col_int WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
NULL	8	0000-00-00 00:00:00	0	NULL	NULL	8	NULL
NULL	8	0000-00-00 00:00:00	0	0	0000-00-00 00:00:00	8	NULL
explain SELECT * FROM t1 INNER JOIN t2 ON t1.col_datetime = t2.col_datetime AND t1.col_double = t2.col_double AND t1.col_datetime = t2.col_datetime AND t1.col_int = t2.col_int WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	i1,i2,i3,i4	i3	67	const	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_varchar_16`) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_datetime` is not null) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_int` is not null))
1	SIMPLE	t2	NULL	ref	i1,i2,i3,i4	i3	78	const,multi_key_bka_sequoiadb_30665.t1.col_datetime,multi_key_bka_sequoiadb_30665.t1.col_int	2	10.00	Using where with pushed condition isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16`); Using join buffer (Batched Key Access)
SELECT * FROM t1 INNER JOIN t2 ON t1.col_int = t2.col_int AND t1.col_datetime = t2.col_datetime WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL AND `t2`.`col_double` IS NULL AND `t2`.`col_double` IS NULL;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
NULL	2	0000-00-00 00:00:00	0	0	NULL	NULL	NULL
NULL	8	0000-00-00 00:00:00	0	0	NULL	NULL	NULL
NULL	2	0000-00-00 00:00:00	0	0	NULL	NULL	NULL
NULL	8	0000-00-00 00:00:00	0	0	NULL	NULL	NULL
NULL	8	0000-00-00 00:00:00	9	9	0000-00-00 00:00:00	NULL	NULL
explain SELECT * FROM t1 INNER JOIN t2 ON t1.col_int = t2.col_int AND t1.col_datetime = t2.col_datetime WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL AND `t2`.`col_double` IS NULL AND `t2`.`col_double` IS NULL;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	i1,i3,i4	i3	67	const	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_varchar_16`) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_datetime` is not null))
1	SIMPLE	t2	NULL	ref	i1,i2,i3,i4	i2	82	const,const,multi_key_bka_sequoiadb_30665.t1.col_datetime	2	10.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`)); Using join buffer (Batched Key Access)
select * from t1 straight_join t2 on t1.col_int=t2.col_int and t1.col_double=t2.col_double where t1.col_int is null and t1.col_double is null;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
explain select * from t1 straight_join t2 on t1.col_int=t2.col_int and t1.col_double=t2.col_double where t1.col_int is null and t1.col_double is null;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	i1,i2	i1	14	NULL	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_int`) and isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_double`) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_int` is not null) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_double` is not null))
1	SIMPLE	t2	NULL	ref	i1,i2	i1	14	multi_key_bka_sequoiadb_30665.t1.col_int,multi_key_bka_sequoiadb_30665.t1.col_double	4	100.00	Using join buffer (Batched Key Access)
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$and": [ { "col_int": { "$isnull": 1 } }, { "col_double": { "$isnull": 1 } }, { "col_int": { "$isnull": 0 } }, { "col_double": { "$isnull": 0 } } ] }, { "col_int": { "$isnull": 1 }, "col_double": { "$isnull": 1 } } ] }], selector[{}], order_by[{ "col_int": 1, "col_double": 1, "col_varchar_16": 1 }], hint[{ "": "i1" }], limit[-1], offset[0], table[multi_key_bka_sequoiadb_30665.t1]
select * from t2 straight_join t1 on t1.col_int=t2.col_int and t1.col_double=t2.col_double and t1.col_varchar_16=t2.col_varchar_16 where t2.col_int is null and t2.col_double is null;
col_int	col_datetime	col_double	col_varchar_16	col_varchar_16	col_double	col_datetime	col_int
explain select * from t2 straight_join t1 on t1.col_int=t2.col_int and t1.col_double=t2.col_double and t1.col_varchar_16=t2.col_varchar_16 where t2.col_int is null and t2.col_double is null;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	range	i1,i2,i3	i1	14	NULL	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_int`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`) and (`multi_key_bka_sequoiadb_30665`.`t2`.`col_int` is not null) and (`multi_key_bka_sequoiadb_30665`.`t2`.`col_double` is not null) and (`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16` is not null))
1	SIMPLE	t1	NULL	ref	i1,i2,i3	i1	81	multi_key_bka_sequoiadb_30665.t2.col_int,multi_key_bka_sequoiadb_30665.t2.col_double,multi_key_bka_sequoiadb_30665.t2.col_varchar_16	2	100.00	Using join buffer (Batched Key Access)
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$and": [ { "col_int": { "$isnull": 1 } }, { "col_double": { "$isnull": 1 } }, { "col_int": { "$isnull": 0 } }, { "col_double": { "$isnull": 0 } }, { "col_varchar_16": { "$isnull": 0 } } ] }, { "col_int": { "$isnull": 1 }, "col_double": { "$isnull": 1 } } ] }], selector[{}], order_by[{ "col_int": 1, "col_double": 1, "col_varchar_16": 1 }], hint[{ "": "i1" }], limit[-1], offset[0], table[multi_key_bka_sequoiadb_30665.t2]
set session sequoiadb_enable_null_reject_for_bka_join=on;
set session skip_ref_null_if_null_reject=on;
SELECT * FROM t1 INNER JOIN t2 ON t1.col_datetime = t2.col_datetime AND t1.col_double = t2.col_double AND t1.col_datetime = t2.col_datetime AND t1.col_int = t2.col_int WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
NULL	8	0000-00-00 00:00:00	0	0	0000-00-00 00:00:00	8	NULL
explain SELECT * FROM t1 INNER JOIN t2 ON t1.col_datetime = t2.col_datetime AND t1.col_double = t2.col_double AND t1.col_datetime = t2.col_datetime AND t1.col_int = t2.col_int WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	i1,i2,i3,i4	i3	67	const	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_varchar_16`) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_datetime` is not null) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_int` is not null))
1	SIMPLE	t2	NULL	ref	i1,i2,i3,i4	i3	78	const,multi_key_bka_sequoiadb_30665.t1.col_datetime,multi_key_bka_sequoiadb_30665.t1.col_int	2	10.00	Using where with pushed condition isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16`); Using join buffer (Batched Key Access)
SELECT * FROM t1 INNER JOIN t2 ON t1.col_int = t2.col_int AND t1.col_datetime = t2.col_datetime WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL AND `t2`.`col_double` IS NULL AND `t2`.`col_double` IS NULL;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
NULL	8	0000-00-00 00:00:00	9	9	0000-00-00 00:00:00	NULL	NULL
explain SELECT * FROM t1 INNER JOIN t2 ON t1.col_int = t2.col_int AND t1.col_datetime = t2.col_datetime WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL AND `t2`.`col_double` IS NULL AND `t2`.`col_double` IS NULL;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	i1,i3,i4	i3	67	const	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_varchar_16`) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_datetime` is not null))
1	SIMPLE	t2	NULL	ref	i1,i2,i3,i4	i2	82	const,const,multi_key_bka_sequoiadb_30665.t1.col_datetime	2	10.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`)); Using join buffer (Batched Key Access)
select * from t1 straight_join t2 on t1.col_int=t2.col_int and t1.col_double=t2.col_double where t1.col_int is null and t1.col_double is null;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
explain select * from t1 straight_join t2 on t1.col_int=t2.col_int and t1.col_double=t2.col_double where t1.col_int is null and t1.col_double is null;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	i1,i2	i1	14	NULL	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_int`) and isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_double`) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_int` is not null) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_double` is not null))
1	SIMPLE	t2	NULL	ref	i1,i2	i1	14	multi_key_bka_sequoiadb_30665.t1.col_int,multi_key_bka_sequoiadb_30665.t1.col_double	4	100.00	Using join buffer (Batched Key Access)
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$and": [ { "col_int": { "$isnull": 1 } }, { "col_double": { "$isnull": 1 } }, { "col_int": { "$isnull": 0 } }, { "col_double": { "$isnull": 0 } } ] }, { "col_int": { "$isnull": 1 }, "col_double": { "$isnull": 1 } } ] }], selector[{}], order_by[{ "col_int": 1, "col_double": 1, "col_varchar_16": 1 }], hint[{ "": "i1" }], limit[-1], offset[0], table[multi_key_bka_sequoiadb_30665.t1]
select * from t2 straight_join t1 on t1.col_int=t2.col_int and t1.col_double=t2.col_double and t1.col_varchar_16=t2.col_varchar_16 where t2.col_int is null and t2.col_double is null;
col_int	col_datetime	col_double	col_varchar_16	col_varchar_16	col_double	col_datetime	col_int
explain select * from t2 straight_join t1 on t1.col_int=t2.col_int and t1.col_double=t2.col_double and t1.col_varchar_16=t2.col_varchar_16 where t2.col_int is null and t2.col_double is null;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	range	i1,i2,i3	i1	14	NULL	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_int`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`) and (`multi_key_bka_sequoiadb_30665`.`t2`.`col_int` is not null) and (`multi_key_bka_sequoiadb_30665`.`t2`.`col_double` is not null) and (`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16` is not null))
1	SIMPLE	t1	NULL	ref	i1,i2,i3	i1	81	multi_key_bka_sequoiadb_30665.t2.col_int,multi_key_bka_sequoiadb_30665.t2.col_double,multi_key_bka_sequoiadb_30665.t2.col_varchar_16	2	100.00	Using join buffer (Batched Key Access)
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$and": [ { "col_int": { "$isnull": 1 } }, { "col_double": { "$isnull": 1 } }, { "col_int": { "$isnull": 0 } }, { "col_double": { "$isnull": 0 } }, { "col_varchar_16": { "$isnull": 0 } } ] }, { "col_int": { "$isnull": 1 }, "col_double": { "$isnull": 1 } } ] }], selector[{}], order_by[{ "col_int": 1, "col_double": 1, "col_varchar_16": 1 }], hint[{ "": "i1" }], limit[-1], offset[0], table[multi_key_bka_sequoiadb_30665.t2]
set session optimizer_switch='mrr=off';
SELECT * FROM t1 INNER JOIN t2 ON t1.col_datetime = t2.col_datetime AND t1.col_double = t2.col_double AND t1.col_datetime = t2.col_datetime AND t1.col_int = t2.col_int WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
NULL	8	0000-00-00 00:00:00	0	0	0000-00-00 00:00:00	8	NULL
explain SELECT * FROM t1 INNER JOIN t2 ON t1.col_datetime = t2.col_datetime AND t1.col_double = t2.col_double AND t1.col_datetime = t2.col_datetime AND t1.col_int = t2.col_int WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	i1,i2,i3,i4	i3	67	const	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_varchar_16`) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_datetime` is not null) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_int` is not null))
1	SIMPLE	t2	NULL	ref	i1,i2,i3,i4	i3	78	const,multi_key_bka_sequoiadb_30665.t1.col_datetime,multi_key_bka_sequoiadb_30665.t1.col_int	2	10.00	Using where with pushed condition isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16`)
SELECT * FROM t1 INNER JOIN t2 ON t1.col_int = t2.col_int AND t1.col_datetime = t2.col_datetime WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL AND `t2`.`col_double` IS NULL AND `t2`.`col_double` IS NULL;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
NULL	8	0000-00-00 00:00:00	9	9	0000-00-00 00:00:00	NULL	NULL
explain SELECT * FROM t1 INNER JOIN t2 ON t1.col_int = t2.col_int AND t1.col_datetime = t2.col_datetime WHERE `t2`.`col_varchar_16` IS NULL AND `t1`.`col_varchar_16` IS NULL AND `t2`.`col_double` IS NULL AND `t2`.`col_double` IS NULL;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	i1,i3,i4	i3	67	const	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_varchar_16`) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_datetime` is not null))
1	SIMPLE	t2	NULL	ref	i1,i2,i3,i4	i2	82	const,const,multi_key_bka_sequoiadb_30665.t1.col_datetime	2	10.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`))
select * from t1 straight_join t2 on t1.col_int=t2.col_int and t1.col_double=t2.col_double where t1.col_int is null and t1.col_double is null;
col_varchar_16	col_double	col_datetime	col_int	col_int	col_datetime	col_double	col_varchar_16
explain select * from t1 straight_join t2 on t1.col_int=t2.col_int and t1.col_double=t2.col_double where t1.col_int is null and t1.col_double is null;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	i1,i2	i1	14	NULL	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_int`) and isnull(`multi_key_bka_sequoiadb_30665`.`t1`.`col_double`) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_int` is not null) and (`multi_key_bka_sequoiadb_30665`.`t1`.`col_double` is not null))
1	SIMPLE	t2	NULL	ref	i1,i2	i1	14	multi_key_bka_sequoiadb_30665.t1.col_int,multi_key_bka_sequoiadb_30665.t1.col_double	4	100.00	NULL
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$and": [ { "col_int": { "$isnull": 1 } }, { "col_double": { "$isnull": 1 } }, { "col_int": { "$isnull": 0 } }, { "col_double": { "$isnull": 0 } } ] }, { "col_int": { "$isnull": 1 }, "col_double": { "$isnull": 1 } } ] }], selector[{}], order_by[{ "col_int": 1, "col_double": 1, "col_varchar_16": 1 }], hint[{ "": "i1" }], limit[-1], offset[0], table[multi_key_bka_sequoiadb_30665.t1]
select * from t2 straight_join t1 on t1.col_int=t2.col_int and t1.col_double=t2.col_double and t1.col_varchar_16=t2.col_varchar_16 where t2.col_int is null and t2.col_double is null;
col_int	col_datetime	col_double	col_varchar_16	col_varchar_16	col_double	col_datetime	col_int
explain select * from t2 straight_join t1 on t1.col_int=t2.col_int and t1.col_double=t2.col_double and t1.col_varchar_16=t2.col_varchar_16 where t2.col_int is null and t2.col_double is null;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	range	i1,i2,i3	i1	14	NULL	2	100.00	Using where with pushed condition (isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_int`) and isnull(`multi_key_bka_sequoiadb_30665`.`t2`.`col_double`) and (`multi_key_bka_sequoiadb_30665`.`t2`.`col_int` is not null) and (`multi_key_bka_sequoiadb_30665`.`t2`.`col_double` is not null) and (`multi_key_bka_sequoiadb_30665`.`t2`.`col_varchar_16` is not null))
1	SIMPLE	t1	NULL	ref	i1,i2,i3	i1	81	multi_key_bka_sequoiadb_30665.t2.col_int,multi_key_bka_sequoiadb_30665.t2.col_double,multi_key_bka_sequoiadb_30665.t2.col_varchar_16	2	100.00	NULL
[Note] SequoiaDB: Query message: condition[{ "$and": [ { "$and": [ { "col_int": { "$isnull": 1 } }, { "col_double": { "$isnull": 1 } }, { "col_int": { "$isnull": 0 } }, { "col_double": { "$isnull": 0 } }, { "col_varchar_16": { "$isnull": 0 } } ] }, { "col_int": { "$isnull": 1 }, "col_double": { "$isnull": 1 } } ] }], selector[{}], order_by[{ "col_int": 1, "col_double": 1, "col_varchar_16": 1 }], hint[{ "": "i1" }], limit[-1], offset[0], table[multi_key_bka_sequoiadb_30665.t2]
drop database multi_key_bka_sequoiadb_30665;
